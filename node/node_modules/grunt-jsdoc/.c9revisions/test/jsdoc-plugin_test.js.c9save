{"ts":1372246932277,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/**\n * @fileoverview NodeUnit test \n * @copyright Bertrand Chevrier 2012\n * @author Bertrand Chevrier <chevrier.bertrand@gmail.com>\n * @license MIT\n * \n * @module test/jsdoc-plugin_test\n */\n\n\n/**\n * @requires grunt\n */\nvar grunt = require('grunt');\n\n\n/**\n * This function enables you to extract \n * the declared arguments from a function.\n * @param {Function} fn - the function to extract the arguments for\n * @returns {Array} the list of arguments\n * @throw {Error} in case of wrong argument given\n */\nvar extractArgs = function(fn){\n\t'use strict';\n\n\tif(typeof fn !== 'function'){\n\t\tthrow new Error('TypeError : The extractArgs function requires the fn argument to be a function!');\n\t}\n\treturn fn.toString ().match (/function\\s+\\w*\\s*\\((.*?)\\)/)[1].split (/\\s*,\\s*/);\n};\n\n/**\n * NodeUnit group of test that check the jsdoc Grunt task.\n * \n * @see https://github.com/caolan/nodeunit/\n * \n * @class JsdocTest\n */\nexports.JsdocTest = {\n\t\n\t/**\n\t * Set up the test by load the tasks/jsdoc-plugin module\n\t * @memberOf JsdocTest\n\t * @param {Function} done - to call once the setup is done.\n\t */\n\tsetUp: function(done) {\n\t\t'use strict';\n\n\t\tthis.jsdocTask = require('../tasks/jsdoc-plugin');\n\t\tdone();\n\t},\n\n\t/**\n\t * Check the task is loaded and complies with the grunt requirements.\n\t * @memberOf JsdocTest\n\t * @param {Object} test - the node unit test context\n\t */\n\t'taskCheck' : function(test){\n\t\t'use strict';\t\n\t\n\t\ttest.notStrictEqual(this.jsdocTask, undefined, 'the jsdoc task should be set up');\n\t\ttest.equal(typeof this.jsdocTask, 'function', 'the task must be a function');\t\n\t\t\n\t\tvar taskArgs = extractArgs(this.jsdocTask);\n\t\ttest.ok(taskArgs.length > 0 && taskArgs[0] === 'grunt', 'the task must declare the grunt context as 1st parameter');\n\t\t\n\t\ttest.done();\n\t}, \n\n\t/**\n\t * Do some check on the exec library\n\t * @memberOf JsdocTest\n\t * @param {Object} test - the node unit test context\n\t */\n\t'execCheck' : function(test){\n\t\t'use strict';\t\n\n\t\tvar exec  = require('../tasks/lib/exec');\n\n\t\ttest.notStrictEqual(exec, undefined, 'the exec lib should be required');\n\t\ttest.equal(typeof exec, 'object', 'exec is an object');\t\n\n\t\ttest.equal(typeof exec.buildSpawned, 'function', 'exec must have a buildSpawned method');\t\n\t\ttest.equal(typeof exec.lookup, 'function', 'exec must have a lookup method');\t\n\t\t\n\t\ttest.done();\n\t}\n};\n"]],"start1":0,"start2":0,"length1":0,"length2":2319}]],"length":2319}
