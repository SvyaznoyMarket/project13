<?php

/**
 * BaseNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $category_id
 * @property string $token
 * @property string $name
 * @property string $preview
 * @property string $body
 * @property timestamp $published_at
 * @property boolean $is_active
 * @property integer $position
 * @property NewsCategory $Category
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $ProductCategory
 * @property Doctrine_Collection $Creator
 * @property Doctrine_Collection $ProductRelation
 * @property Doctrine_Collection $ProductCategoryRelation
 * @property Doctrine_Collection $CreatorRelation
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getCategoryId()              Returns the current record's "category_id" value
 * @method string              getToken()                   Returns the current record's "token" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method string              getPreview()                 Returns the current record's "preview" value
 * @method string              getBody()                    Returns the current record's "body" value
 * @method timestamp           getPublishedAt()             Returns the current record's "published_at" value
 * @method boolean             getIsActive()                Returns the current record's "is_active" value
 * @method integer             getPosition()                Returns the current record's "position" value
 * @method NewsCategory        getCategory()                Returns the current record's "Category" value
 * @method Doctrine_Collection getProduct()                 Returns the current record's "Product" collection
 * @method Doctrine_Collection getProductCategory()         Returns the current record's "ProductCategory" collection
 * @method Doctrine_Collection getCreator()                 Returns the current record's "Creator" collection
 * @method Doctrine_Collection getProductRelation()         Returns the current record's "ProductRelation" collection
 * @method Doctrine_Collection getProductCategoryRelation() Returns the current record's "ProductCategoryRelation" collection
 * @method Doctrine_Collection getCreatorRelation()         Returns the current record's "CreatorRelation" collection
 * @method News                setId()                      Sets the current record's "id" value
 * @method News                setCategoryId()              Sets the current record's "category_id" value
 * @method News                setToken()                   Sets the current record's "token" value
 * @method News                setName()                    Sets the current record's "name" value
 * @method News                setPreview()                 Sets the current record's "preview" value
 * @method News                setBody()                    Sets the current record's "body" value
 * @method News                setPublishedAt()             Sets the current record's "published_at" value
 * @method News                setIsActive()                Sets the current record's "is_active" value
 * @method News                setPosition()                Sets the current record's "position" value
 * @method News                setCategory()                Sets the current record's "Category" value
 * @method News                setProduct()                 Sets the current record's "Product" collection
 * @method News                setProductCategory()         Sets the current record's "ProductCategory" collection
 * @method News                setCreator()                 Sets the current record's "Creator" collection
 * @method News                setProductRelation()         Sets the current record's "ProductRelation" collection
 * @method News                setProductCategoryRelation() Sets the current record's "ProductCategoryRelation" collection
 * @method News                setCreatorRelation()         Sets the current record's "CreatorRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNews extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('news');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('category_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('preview', 'string', 500, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 500,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             ));
        $this->hasColumn('published_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'format' => 'Y-m-d H:m:i',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Новости');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('NewsCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('Product', array(
             'refClass' => 'NewsProductRelation',
             'local' => 'news_id',
             'foreign' => 'product_id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('ProductCategory', array(
             'refClass' => 'NewsProductCategoryRelation',
             'local' => 'news_id',
             'foreign' => 'product_category_id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('Creator', array(
             'refClass' => 'NewsCreatorRelation',
             'local' => 'news_id',
             'foreign' => 'creator_id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('NewsProductRelation as ProductRelation', array(
             'local' => 'id',
             'foreign' => 'news_id'));

        $this->hasMany('NewsProductCategoryRelation as ProductCategoryRelation', array(
             'local' => 'id',
             'foreign' => 'news_id'));

        $this->hasMany('NewsCreatorRelation as CreatorRelation', array(
             'local' => 'id',
             'foreign' => 'news_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created_at' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:m:i',
             ),
             'updated_at' => 
             array(
              'name' => 'created_at',
              'type' => 'timestamp',
              'format' => 'Y-m-d H:m:i',
             ),
             ));
        $this->actAs($timestampable0);
    }
}