<?php

/**
 * BaseProductPropertyGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $core_id
 * @property string $name
 * @property integer $position
 * @property Doctrine_Collection $ProductType
 * @property Doctrine_Collection $Property
 * @property Doctrine_Collection $ProductTypeRelation
 * @property Doctrine_Collection $PropertyRelation
 * 
 * @method integer              getId()                  Returns the current record's "id" value
 * @method integer              getCoreId()              Returns the current record's "core_id" value
 * @method string               getName()                Returns the current record's "name" value
 * @method integer              getPosition()            Returns the current record's "position" value
 * @method Doctrine_Collection  getProductType()         Returns the current record's "ProductType" collection
 * @method Doctrine_Collection  getProperty()            Returns the current record's "Property" collection
 * @method Doctrine_Collection  getProductTypeRelation() Returns the current record's "ProductTypeRelation" collection
 * @method Doctrine_Collection  getPropertyRelation()    Returns the current record's "PropertyRelation" collection
 * @method ProductPropertyGroup setId()                  Sets the current record's "id" value
 * @method ProductPropertyGroup setCoreId()              Sets the current record's "core_id" value
 * @method ProductPropertyGroup setName()                Sets the current record's "name" value
 * @method ProductPropertyGroup setPosition()            Sets the current record's "position" value
 * @method ProductPropertyGroup setProductType()         Sets the current record's "ProductType" collection
 * @method ProductPropertyGroup setProperty()            Sets the current record's "Property" collection
 * @method ProductPropertyGroup setProductTypeRelation() Sets the current record's "ProductTypeRelation" collection
 * @method ProductPropertyGroup setPropertyRelation()    Sets the current record's "PropertyRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductPropertyGroup extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_property_group');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('core_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'ид записи в Core',
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Группа свойств товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProductType', array(
             'refClass' => 'ProductTypePropertyGroupRelation',
             'local' => 'property_group_id',
             'foreign' => 'product_type_id'));

        $this->hasMany('ProductProperty as Property', array(
             'refClass' => 'ProductTypePropertyRelation',
             'local' => 'group_id',
             'foreign' => 'property_id'));

        $this->hasMany('ProductTypePropertyGroupRelation as ProductTypeRelation', array(
             'local' => 'id',
             'foreign' => 'property_group_id'));

        $this->hasMany('ProductTypePropertyRelation as PropertyRelation', array(
             'local' => 'id',
             'foreign' => 'group_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}