<?php

/**
 * BaseProductFilter
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property enum $type
 * @property integer $group_id
 * @property integer $property_id
 * @property boolean $is_multiple
 * @property integer $position
 * @property ProductFilterGroup $Group
 * @property ProductProperty $Property
 * @property Doctrine_Collection $ProductHelperFilter
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method string              getName()                Returns the current record's "name" value
 * @method enum                getType()                Returns the current record's "type" value
 * @method integer             getGroupId()             Returns the current record's "group_id" value
 * @method integer             getPropertyId()          Returns the current record's "property_id" value
 * @method boolean             getIsMultiple()          Returns the current record's "is_multiple" value
 * @method integer             getPosition()            Returns the current record's "position" value
 * @method ProductFilterGroup  getGroup()               Returns the current record's "Group" value
 * @method ProductProperty     getProperty()            Returns the current record's "Property" value
 * @method Doctrine_Collection getProductHelperFilter() Returns the current record's "ProductHelperFilter" collection
 * @method ProductFilter       setId()                  Sets the current record's "id" value
 * @method ProductFilter       setName()                Sets the current record's "name" value
 * @method ProductFilter       setType()                Sets the current record's "type" value
 * @method ProductFilter       setGroupId()             Sets the current record's "group_id" value
 * @method ProductFilter       setPropertyId()          Sets the current record's "property_id" value
 * @method ProductFilter       setIsMultiple()          Sets the current record's "is_multiple" value
 * @method ProductFilter       setPosition()            Sets the current record's "position" value
 * @method ProductFilter       setGroup()               Sets the current record's "Group" value
 * @method ProductFilter       setProperty()            Sets the current record's "Property" value
 * @method ProductFilter       setProductHelperFilter() Sets the current record's "ProductHelperFilter" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductFilter extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_filter');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('type', 'enum', 10, array(
             'type' => 'enum',
             'length' => 10,
             'values' => 
             array(
              0 => 'choice',
              1 => 'range',
             ),
             'notnull' => true,
             ));
        $this->hasColumn('group_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('property_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('is_multiple', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             'comment' => 'Фильтр имеет несколько значений?',
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Фильтр товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductFilterGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductProperty as Property', array(
             'local' => 'property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ProductHelperFilter', array(
             'local' => 'id',
             'foreign' => 'product_filter_id'));
    }
}