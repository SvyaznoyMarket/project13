<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property Doctrine_Collection $Order
 * @property Doctrine_Collection $Comment
 * @property Doctrine_Collection $Tag
 * @property Doctrine_Collection $DelayedProduct
 * @property Doctrine_Collection $ProductNotice
 * @property Doctrine_Collection $ProductRating
 * 
 * @method Doctrine_Collection getOrder()          Returns the current record's "Order" collection
 * @method Doctrine_Collection getComment()        Returns the current record's "Comment" collection
 * @method Doctrine_Collection getTag()            Returns the current record's "Tag" collection
 * @method Doctrine_Collection getDelayedProduct() Returns the current record's "DelayedProduct" collection
 * @method Doctrine_Collection getProductNotice()  Returns the current record's "ProductNotice" collection
 * @method Doctrine_Collection getProductRating()  Returns the current record's "ProductRating" collection
 * @method User                setOrder()          Sets the current record's "Order" collection
 * @method User                setComment()        Sets the current record's "Comment" collection
 * @method User                setTag()            Sets the current record's "Tag" collection
 * @method User                setDelayedProduct() Sets the current record's "DelayedProduct" collection
 * @method User                setProductNotice()  Sets the current record's "ProductNotice" collection
 * @method User                setProductRating()  Sets the current record's "ProductRating" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends GuardUser
{
    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Order', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('ProductComment as Comment', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserTag as Tag', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserDelayedProduct as DelayedProduct', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserProductNotice as ProductNotice', array(
             'local' => 'id',
             'foreign' => 'user_id'));

        $this->hasMany('UserProductRating as ProductRating', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}