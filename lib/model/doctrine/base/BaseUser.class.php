<?php

/**
 * BaseUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $login
 * @property string $first_name
 * @property string $last_name
 * @property string $middle_name
 * @property string $photo
 * @property Doctrine_Collection $Comment
 * 
 * @method integer             getId()          Returns the current record's "id" value
 * @method string              getLogin()       Returns the current record's "login" value
 * @method string              getFirstName()   Returns the current record's "first_name" value
 * @method string              getLastName()    Returns the current record's "last_name" value
 * @method string              getMiddleName()  Returns the current record's "middle_name" value
 * @method string              getPhoto()       Returns the current record's "photo" value
 * @method Doctrine_Collection getComment()     Returns the current record's "Comment" collection
 * @method User                setId()          Sets the current record's "id" value
 * @method User                setLogin()       Sets the current record's "login" value
 * @method User                setFirstName()   Sets the current record's "first_name" value
 * @method User                setLastName()    Sets the current record's "last_name" value
 * @method User                setMiddleName()  Sets the current record's "middle_name" value
 * @method User                setPhoto()       Sets the current record's "photo" value
 * @method User                setComment()     Sets the current record's "Comment" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUser extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('login', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('first_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'comment' => 'Имя',
             'length' => 255,
             ));
        $this->hasColumn('last_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'comment' => 'Фамилия',
             'length' => 255,
             ));
        $this->hasColumn('middle_name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'comment' => 'Отчество',
             'length' => 255,
             ));
        $this->hasColumn('photo', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Фото пользователя',
             'length' => 255,
             ));

        $this->option('comment', 'Пользователь');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProductComment as Comment', array(
             'local' => 'id',
             'foreign' => 'user_id'));
    }
}