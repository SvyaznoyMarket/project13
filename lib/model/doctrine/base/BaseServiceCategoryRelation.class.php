<?php

/**
 * BaseServiceCategoryRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $category_id
 * @property integer $service_id
 * @property ServiceCategory $Category
 * @property Service $Service
 * 
 * @method integer                 getCategoryId()  Returns the current record's "category_id" value
 * @method integer                 getServiceId()   Returns the current record's "service_id" value
 * @method ServiceCategory         getCategory()    Returns the current record's "Category" value
 * @method Service                 getService()     Returns the current record's "Service" value
 * @method ServiceCategoryRelation setCategoryId()  Sets the current record's "category_id" value
 * @method ServiceCategoryRelation setServiceId()   Sets the current record's "service_id" value
 * @method ServiceCategoryRelation setCategory()    Sets the current record's "Category" value
 * @method ServiceCategoryRelation setService()     Sets the current record's "Service" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseServiceCategoryRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service_category_relation');
        $this->hasColumn('category_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('service_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Связь категории и услуги');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ServiceCategory as Category', array(
             'local' => 'category_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}