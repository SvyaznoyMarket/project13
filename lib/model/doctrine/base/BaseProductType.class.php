<?php

/**
 * BaseProductType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $core_id
 * @property string $name
 * @property integer $rating_type_id
 * @property ProductRatingType $RatingType
 * @property Doctrine_Collection $TagGroup
 * @property Doctrine_Collection $ServiceCategory
 * @property Doctrine_Collection $ServiceCategoryRelation
 * @property Doctrine_Collection $ProductCategory
 * @property Doctrine_Collection $ProductCategoryRelation
 * @property Doctrine_Collection $Property
 * @property Doctrine_Collection $PropertyGroup
 * @property Doctrine_Collection $PropertyGroupRelation
 * @property Doctrine_Collection $PropertyRelation
 * @property Doctrine_Collection $Product
 * @property Doctrine_Collection $ProductHelper
 * @property Doctrine_Collection $SimilarProductGroup
 * @property Doctrine_Collection $TagGroupRelation
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getCoreId()                  Returns the current record's "core_id" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method integer             getRatingTypeId()            Returns the current record's "rating_type_id" value
 * @method ProductRatingType   getRatingType()              Returns the current record's "RatingType" value
 * @method Doctrine_Collection getTagGroup()                Returns the current record's "TagGroup" collection
 * @method Doctrine_Collection getServiceCategory()         Returns the current record's "ServiceCategory" collection
 * @method Doctrine_Collection getServiceCategoryRelation() Returns the current record's "ServiceCategoryRelation" collection
 * @method Doctrine_Collection getProductCategory()         Returns the current record's "ProductCategory" collection
 * @method Doctrine_Collection getProductCategoryRelation() Returns the current record's "ProductCategoryRelation" collection
 * @method Doctrine_Collection getProperty()                Returns the current record's "Property" collection
 * @method Doctrine_Collection getPropertyGroup()           Returns the current record's "PropertyGroup" collection
 * @method Doctrine_Collection getPropertyGroupRelation()   Returns the current record's "PropertyGroupRelation" collection
 * @method Doctrine_Collection getPropertyRelation()        Returns the current record's "PropertyRelation" collection
 * @method Doctrine_Collection getProduct()                 Returns the current record's "Product" collection
 * @method Doctrine_Collection getProductHelper()           Returns the current record's "ProductHelper" collection
 * @method Doctrine_Collection getSimilarProductGroup()     Returns the current record's "SimilarProductGroup" collection
 * @method Doctrine_Collection getTagGroupRelation()        Returns the current record's "TagGroupRelation" collection
 * @method ProductType         setId()                      Sets the current record's "id" value
 * @method ProductType         setCoreId()                  Sets the current record's "core_id" value
 * @method ProductType         setName()                    Sets the current record's "name" value
 * @method ProductType         setRatingTypeId()            Sets the current record's "rating_type_id" value
 * @method ProductType         setRatingType()              Sets the current record's "RatingType" value
 * @method ProductType         setTagGroup()                Sets the current record's "TagGroup" collection
 * @method ProductType         setServiceCategory()         Sets the current record's "ServiceCategory" collection
 * @method ProductType         setServiceCategoryRelation() Sets the current record's "ServiceCategoryRelation" collection
 * @method ProductType         setProductCategory()         Sets the current record's "ProductCategory" collection
 * @method ProductType         setProductCategoryRelation() Sets the current record's "ProductCategoryRelation" collection
 * @method ProductType         setProperty()                Sets the current record's "Property" collection
 * @method ProductType         setPropertyGroup()           Sets the current record's "PropertyGroup" collection
 * @method ProductType         setPropertyGroupRelation()   Sets the current record's "PropertyGroupRelation" collection
 * @method ProductType         setPropertyRelation()        Sets the current record's "PropertyRelation" collection
 * @method ProductType         setProduct()                 Sets the current record's "Product" collection
 * @method ProductType         setProductHelper()           Sets the current record's "ProductHelper" collection
 * @method ProductType         setSimilarProductGroup()     Sets the current record's "SimilarProductGroup" collection
 * @method ProductType         setTagGroupRelation()        Sets the current record's "TagGroupRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductType extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_type');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('core_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'ид записи в Core',
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('rating_type_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 20,
             ));

        $this->option('comment', 'Тип товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductRatingType as RatingType', array(
             'local' => 'rating_type_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('TagGroup', array(
             'refClass' => 'TagGroupProductTypeRelation',
             'local' => 'product_type_id',
             'foreign' => 'tag_group_id'));

        $this->hasMany('ServiceCategory', array(
             'refClass' => 'ServiceCategoryProductTypeRelation',
             'local' => 'product_type_id',
             'foreign' => 'category_id'));

        $this->hasMany('ServiceCategoryProductTypeRelation as ServiceCategoryRelation', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('ProductCategory', array(
             'refClass' => 'ProductCategoryTypeRelation',
             'local' => 'product_type_id',
             'foreign' => 'product_category_id'));

        $this->hasMany('ProductCategoryTypeRelation as ProductCategoryRelation', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('ProductProperty as Property', array(
             'refClass' => 'ProductTypePropertyRelation',
             'local' => 'product_type_id',
             'foreign' => 'property_id'));

        $this->hasMany('ProductPropertyGroup as PropertyGroup', array(
             'refClass' => 'ProductTypePropertyGroupRelation',
             'local' => 'product_type_id',
             'foreign' => 'property_group_id'));

        $this->hasMany('ProductTypePropertyGroupRelation as PropertyGroupRelation', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('ProductTypePropertyRelation as PropertyRelation', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'type_id'));

        $this->hasMany('ProductHelper', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('SimilarProductGroup', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('TagGroupProductTypeRelation as TagGroupRelation', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}