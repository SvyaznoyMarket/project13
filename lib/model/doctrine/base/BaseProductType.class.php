<?php

/**
 * BaseProductType
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $name
 * @property Doctrine_Collection $Property
 * @property Doctrine_Collection $PropertyRelation
 * @property Doctrine_Collection $Product
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getName()             Returns the current record's "name" value
 * @method Doctrine_Collection getProperty()         Returns the current record's "Property" collection
 * @method Doctrine_Collection getPropertyRelation() Returns the current record's "PropertyRelation" collection
 * @method Doctrine_Collection getProduct()          Returns the current record's "Product" collection
 * @method ProductType         setId()               Sets the current record's "id" value
 * @method ProductType         setName()             Sets the current record's "name" value
 * @method ProductType         setProperty()         Sets the current record's "Property" collection
 * @method ProductType         setPropertyRelation() Sets the current record's "PropertyRelation" collection
 * @method ProductType         setProduct()          Sets the current record's "Product" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductType extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_type');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ProductProperty as Property', array(
             'refClass' => 'ProductTypePropertyRelation',
             'local' => 'product_type_id',
             'foreign' => 'property_id'));

        $this->hasMany('ProductTypePropertyRelation as PropertyRelation', array(
             'local' => 'id',
             'foreign' => 'product_type_id'));

        $this->hasMany('Product', array(
             'local' => 'id',
             'foreign' => 'type_id'));
    }
}