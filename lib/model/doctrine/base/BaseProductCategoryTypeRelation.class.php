<?php

/**
 * BaseProductCategoryTypeRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_category_id
 * @property integer $product_type_id
 * @property ProductCategory $ProductCategory
 * @property ProductType $ProductType
 * 
 * @method integer                     getProductCategoryId()   Returns the current record's "product_category_id" value
 * @method integer                     getProductTypeId()       Returns the current record's "product_type_id" value
 * @method ProductCategory             getProductCategory()     Returns the current record's "ProductCategory" value
 * @method ProductType                 getProductType()         Returns the current record's "ProductType" value
 * @method ProductCategoryTypeRelation setProductCategoryId()   Sets the current record's "product_category_id" value
 * @method ProductCategoryTypeRelation setProductTypeId()       Sets the current record's "product_type_id" value
 * @method ProductCategoryTypeRelation setProductCategory()     Sets the current record's "ProductCategory" value
 * @method ProductCategoryTypeRelation setProductType()         Sets the current record's "ProductType" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductCategoryTypeRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_category_type_relation');
        $this->hasColumn('product_category_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_type_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Связь типов и категорий товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductCategory', array(
             'local' => 'product_category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductType', array(
             'local' => 'product_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}