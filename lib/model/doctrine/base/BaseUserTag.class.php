<?php

/**
 * BaseUserTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $core_id
 * @property string $name
 * @property integer $user_id
 * @property integer $position
 * @property User $User
 * @property Doctrine_Collection $ProductRelation
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getCoreId()          Returns the current record's "core_id" value
 * @method string              getName()            Returns the current record's "name" value
 * @method integer             getUserId()          Returns the current record's "user_id" value
 * @method integer             getPosition()        Returns the current record's "position" value
 * @method User                getUser()            Returns the current record's "User" value
 * @method Doctrine_Collection getProductRelation() Returns the current record's "ProductRelation" collection
 * @method UserTag             setId()              Sets the current record's "id" value
 * @method UserTag             setCoreId()          Sets the current record's "core_id" value
 * @method UserTag             setName()            Sets the current record's "name" value
 * @method UserTag             setUserId()          Sets the current record's "user_id" value
 * @method UserTag             setPosition()        Sets the current record's "position" value
 * @method UserTag             setUser()            Sets the current record's "User" value
 * @method UserTag             setProductRelation() Sets the current record's "ProductRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserTag extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_tag');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('core_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'ид записи в Core',
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Пользовательские теги');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('UserTagProductRelation as ProductRelation', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}