<?php

/**
 * BaseSimilarProduct
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $master_id
 * @property integer $slave_id
 * @property Product $MasterProduct
 * @property Product $SlaveProduct
 * 
 * @method integer        getId()            Returns the current record's "id" value
 * @method integer        getMasterId()      Returns the current record's "master_id" value
 * @method integer        getSlaveId()       Returns the current record's "slave_id" value
 * @method Product        getMasterProduct() Returns the current record's "MasterProduct" value
 * @method Product        getSlaveProduct()  Returns the current record's "SlaveProduct" value
 * @method SimilarProduct setId()            Sets the current record's "id" value
 * @method SimilarProduct setMasterId()      Sets the current record's "master_id" value
 * @method SimilarProduct setSlaveId()       Sets the current record's "slave_id" value
 * @method SimilarProduct setMasterProduct() Sets the current record's "MasterProduct" value
 * @method SimilarProduct setSlaveProduct()  Sets the current record's "SlaveProduct" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSimilarProduct extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('similar_product');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('master_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('slave_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Аналогичный товар');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product as MasterProduct', array(
             'local' => 'master_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product as SlaveProduct', array(
             'local' => 'slave_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}