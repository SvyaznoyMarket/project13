<?php

/**
 * BaseService
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $token
 * @property string $name
 * @property string $description
 * @property string $work
 * @property string $expendable
 * @property boolean $is_active
 * @property Doctrine_Collection $Category
 * @property Doctrine_Collection $Price
 * @property Doctrine_Collection $CategoryRelation
 * @property Doctrine_Collection $OrderRelation
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getToken()            Returns the current record's "token" value
 * @method string              getName()             Returns the current record's "name" value
 * @method string              getDescription()      Returns the current record's "description" value
 * @method string              getWork()             Returns the current record's "work" value
 * @method string              getExpendable()       Returns the current record's "expendable" value
 * @method boolean             getIsActive()         Returns the current record's "is_active" value
 * @method Doctrine_Collection getCategory()         Returns the current record's "Category" collection
 * @method Doctrine_Collection getPrice()            Returns the current record's "Price" collection
 * @method Doctrine_Collection getCategoryRelation() Returns the current record's "CategoryRelation" collection
 * @method Doctrine_Collection getOrderRelation()    Returns the current record's "OrderRelation" collection
 * @method Service             setId()               Sets the current record's "id" value
 * @method Service             setToken()            Sets the current record's "token" value
 * @method Service             setName()             Sets the current record's "name" value
 * @method Service             setDescription()      Sets the current record's "description" value
 * @method Service             setWork()             Sets the current record's "work" value
 * @method Service             setExpendable()       Sets the current record's "expendable" value
 * @method Service             setIsActive()         Sets the current record's "is_active" value
 * @method Service             setCategory()         Sets the current record's "Category" collection
 * @method Service             setPrice()            Sets the current record's "Price" collection
 * @method Service             setCategoryRelation() Sets the current record's "CategoryRelation" collection
 * @method Service             setOrderRelation()    Sets the current record's "OrderRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseService extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('work', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('expendable', 'string', null, array(
             'type' => 'string',
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));

        $this->option('comment', 'Услуга F1');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('ServiceCategory as Category', array(
             'refClass' => 'ServiceCategoryRelation',
             'local' => 'service_id',
             'foreign' => 'category_id'));

        $this->hasMany('ServicePrice as Price', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $this->hasMany('ServiceCategoryRelation as CategoryRelation', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $this->hasMany('OrderServiceRelation as OrderRelation', array(
             'local' => 'id',
             'foreign' => 'service_id'));

        $corable0 = new Doctrine_Template_Corable(array(
             'push' => 'disable',
             ));
        $this->actAs($corable0);
    }
}