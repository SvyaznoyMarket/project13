<?php

/**
 * BaseOrderProductRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $order_id
 * @property integer $product_id
 * @property decimal $price
 * @property integer $count
 * @property integer $position
 * @property Order $Order
 * @property Product $Product
 * 
 * @method integer              getOrderId()    Returns the current record's "order_id" value
 * @method integer              getProductId()  Returns the current record's "product_id" value
 * @method decimal              getPrice()      Returns the current record's "price" value
 * @method integer              getCount()      Returns the current record's "count" value
 * @method integer              getPosition()   Returns the current record's "position" value
 * @method Order                getOrder()      Returns the current record's "Order" value
 * @method Product              getProduct()    Returns the current record's "Product" value
 * @method OrderProductRelation setOrderId()    Sets the current record's "order_id" value
 * @method OrderProductRelation setProductId()  Sets the current record's "product_id" value
 * @method OrderProductRelation setPrice()      Sets the current record's "price" value
 * @method OrderProductRelation setCount()      Sets the current record's "count" value
 * @method OrderProductRelation setPosition()   Sets the current record's "position" value
 * @method OrderProductRelation setOrder()      Sets the current record's "Order" value
 * @method OrderProductRelation setProduct()    Sets the current record's "Product" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrderProductRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order_product_relation');
        $this->hasColumn('order_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('price', 'decimal', 12, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Цена товара в корзине',
             'length' => 12,
             'scale' => '2',
             ));
        $this->hasColumn('count', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'comment' => 'Количество товара в корзине',
             'length' => 4,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Связь заказа и товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Order', array(
             'local' => 'order_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}