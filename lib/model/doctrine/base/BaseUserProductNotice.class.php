<?php

/**
 * BaseUserProductNotice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $user_id
 * @property integer $product_id
 * @property enum $type
 * @property User $User
 * @property Product $Product
 * 
 * @method integer           getId()         Returns the current record's "id" value
 * @method integer           getUserId()     Returns the current record's "user_id" value
 * @method integer           getProductId()  Returns the current record's "product_id" value
 * @method enum              getType()       Returns the current record's "type" value
 * @method User              getUser()       Returns the current record's "User" value
 * @method Product           getProduct()    Returns the current record's "Product" value
 * @method UserProductNotice setId()         Sets the current record's "id" value
 * @method UserProductNotice setUserId()     Sets the current record's "user_id" value
 * @method UserProductNotice setProductId()  Sets the current record's "product_id" value
 * @method UserProductNotice setType()       Sets the current record's "type" value
 * @method UserProductNotice setUser()       Sets the current record's "User" value
 * @method UserProductNotice setProduct()    Sets the current record's "Product" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserProductNotice extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_product_notice');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('type', 'enum', 10, array(
             'type' => 'enum',
             'length' => 10,
             'values' => 
             array(
              0 => 'insale',
              1 => 'price',
              2 => 'comment',
             ),
             'notnull' => true,
             'comment' => 'Тип уведомления: товар появился в магазинах, изменилась цена, появились отзывы',
             ));

        $this->option('comment', 'Пользовательские уведомления о товаре');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}