<?php

/**
 * BaseProductTypePropertyRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_type_id
 * @property integer $property_id
 * @property integer $group_id
 * @property string $name
 * @property integer $position
 * @property integer $group_position
 * @property boolean $view_show
 * @property boolean $view_list
 * @property ProductType $ProductType
 * @property ProductProperty $Property
 * @property ProductPropertyGroup $Group
 * 
 * @method integer                     getProductTypeId()   Returns the current record's "product_type_id" value
 * @method integer                     getPropertyId()      Returns the current record's "property_id" value
 * @method integer                     getGroupId()         Returns the current record's "group_id" value
 * @method string                      getName()            Returns the current record's "name" value
 * @method integer                     getPosition()        Returns the current record's "position" value
 * @method integer                     getGroupPosition()   Returns the current record's "group_position" value
 * @method boolean                     getViewShow()        Returns the current record's "view_show" value
 * @method boolean                     getViewList()        Returns the current record's "view_list" value
 * @method ProductType                 getProductType()     Returns the current record's "ProductType" value
 * @method ProductProperty             getProperty()        Returns the current record's "Property" value
 * @method ProductPropertyGroup        getGroup()           Returns the current record's "Group" value
 * @method ProductTypePropertyRelation setProductTypeId()   Sets the current record's "product_type_id" value
 * @method ProductTypePropertyRelation setPropertyId()      Sets the current record's "property_id" value
 * @method ProductTypePropertyRelation setGroupId()         Sets the current record's "group_id" value
 * @method ProductTypePropertyRelation setName()            Sets the current record's "name" value
 * @method ProductTypePropertyRelation setPosition()        Sets the current record's "position" value
 * @method ProductTypePropertyRelation setGroupPosition()   Sets the current record's "group_position" value
 * @method ProductTypePropertyRelation setViewShow()        Sets the current record's "view_show" value
 * @method ProductTypePropertyRelation setViewList()        Sets the current record's "view_list" value
 * @method ProductTypePropertyRelation setProductType()     Sets the current record's "ProductType" value
 * @method ProductTypePropertyRelation setProperty()        Sets the current record's "Property" value
 * @method ProductTypePropertyRelation setGroup()           Sets the current record's "Group" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductTypePropertyRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_type_property_relation');
        $this->hasColumn('product_type_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('property_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('group_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));
        $this->hasColumn('group_position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки в группе свойств товара',
             'length' => 4,
             ));
        $this->hasColumn('view_show', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             'comment' => 'Показывать свойство в карточке товара?',
             ));
        $this->hasColumn('view_list', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             'comment' => 'Показывать свойство в списке товаров?',
             ));

        $this->option('comment', 'Связь типов и свойств товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductType', array(
             'local' => 'product_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductProperty as Property', array(
             'local' => 'property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductPropertyGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));
    }
}