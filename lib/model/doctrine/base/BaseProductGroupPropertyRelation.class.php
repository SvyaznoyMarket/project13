<?php

/**
 * BaseProductGroupPropertyRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_property_id
 * @property integer $product_group_id
 * @property ProductProperty $Property
 * @property ProductGroup $ProductGroup
 * 
 * @method integer                      getProductPropertyId()   Returns the current record's "product_property_id" value
 * @method integer                      getProductGroupId()      Returns the current record's "product_group_id" value
 * @method ProductProperty              getProperty()            Returns the current record's "Property" value
 * @method ProductGroup                 getProductGroup()        Returns the current record's "ProductGroup" value
 * @method ProductGroupPropertyRelation setProductPropertyId()   Sets the current record's "product_property_id" value
 * @method ProductGroupPropertyRelation setProductGroupId()      Sets the current record's "product_group_id" value
 * @method ProductGroupPropertyRelation setProperty()            Sets the current record's "Property" value
 * @method ProductGroupPropertyRelation setProductGroup()        Sets the current record's "ProductGroup" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductGroupPropertyRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_group_property_relation');
        $this->hasColumn('product_property_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_group_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Связь группы товаров и свойст, которые будут различны у этой группы');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductProperty as Property', array(
             'local' => 'product_property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductGroup', array(
             'local' => 'product_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}