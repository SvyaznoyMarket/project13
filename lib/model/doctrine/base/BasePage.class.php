<?php

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $root_id
 * @property integer $lft
 * @property integer $rgt
 * @property integer $level
 * @property string $token
 * @property string $name
 * @property string $title
 * @property string $header
 * @property string $keywords
 * @property string $description
 * @property string $content
 * 
 * @method integer getId()          Returns the current record's "id" value
 * @method integer getRootId()      Returns the current record's "root_id" value
 * @method integer getLft()         Returns the current record's "lft" value
 * @method integer getRgt()         Returns the current record's "rgt" value
 * @method integer getLevel()       Returns the current record's "level" value
 * @method string  getToken()       Returns the current record's "token" value
 * @method string  getName()        Returns the current record's "name" value
 * @method string  getTitle()       Returns the current record's "title" value
 * @method string  getHeader()      Returns the current record's "header" value
 * @method string  getKeywords()    Returns the current record's "keywords" value
 * @method string  getDescription() Returns the current record's "description" value
 * @method string  getContent()     Returns the current record's "content" value
 * @method Page    setId()          Sets the current record's "id" value
 * @method Page    setRootId()      Sets the current record's "root_id" value
 * @method Page    setLft()         Sets the current record's "lft" value
 * @method Page    setRgt()         Sets the current record's "rgt" value
 * @method Page    setLevel()       Sets the current record's "level" value
 * @method Page    setToken()       Sets the current record's "token" value
 * @method Page    setName()        Sets the current record's "name" value
 * @method Page    setTitle()       Sets the current record's "title" value
 * @method Page    setHeader()      Sets the current record's "header" value
 * @method Page    setKeywords()    Sets the current record's "keywords" value
 * @method Page    setDescription() Sets the current record's "description" value
 * @method Page    setContent()     Sets the current record's "content" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePage extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('root_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('lft', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('rgt', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('level', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('title', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Заголовок страницы title',
             'length' => 500,
             ));
        $this->hasColumn('header', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Заголовок страницы h1',
             'length' => 500,
             ));
        $this->hasColumn('keywords', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Ключевые слова страницы meta keywords',
             'length' => 500,
             ));
        $this->hasColumn('description', 'string', 500, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Описание страницы meta description',
             'length' => 500,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Содержание страницы',
             ));

        $this->option('comment', 'Страница');
    }

    public function setUp()
    {
        parent::setUp();
        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'root_id',
             ));
        $this->actAs($nestedset0);
    }
}