<?php

/**
 * BaseUserTagProductRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $tag_id
 * @property integer $product_id
 * @property integer $position
 * @property UserTag $Tag
 * @property Product $Product
 * 
 * @method integer                getId()         Returns the current record's "id" value
 * @method integer                getTagId()      Returns the current record's "tag_id" value
 * @method integer                getProductId()  Returns the current record's "product_id" value
 * @method integer                getPosition()   Returns the current record's "position" value
 * @method UserTag                getTag()        Returns the current record's "Tag" value
 * @method Product                getProduct()    Returns the current record's "Product" value
 * @method UserTagProductRelation setId()         Sets the current record's "id" value
 * @method UserTagProductRelation setTagId()      Sets the current record's "tag_id" value
 * @method UserTagProductRelation setProductId()  Sets the current record's "product_id" value
 * @method UserTagProductRelation setPosition()   Sets the current record's "position" value
 * @method UserTagProductRelation setTag()        Sets the current record's "Tag" value
 * @method UserTagProductRelation setProduct()    Sets the current record's "Product" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserTagProductRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_tag_product_relation');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('tag_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Связь пользовательских тегов и товаров');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('UserTag as Tag', array(
             'local' => 'tag_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}