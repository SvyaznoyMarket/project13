<?php

/**
 * BaseProductHelper
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_type_id
 * @property string $token
 * @property string $name
 * @property boolean $is_active
 * @property string $image
 * @property integer $position
 * @property string $description
 * @property ProductType $ProductType
 * @property Doctrine_Collection $Question
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method integer             getProductTypeId()   Returns the current record's "product_type_id" value
 * @method string              getToken()           Returns the current record's "token" value
 * @method string              getName()            Returns the current record's "name" value
 * @method boolean             getIsActive()        Returns the current record's "is_active" value
 * @method string              getImage()           Returns the current record's "image" value
 * @method integer             getPosition()        Returns the current record's "position" value
 * @method string              getDescription()     Returns the current record's "description" value
 * @method ProductType         getProductType()     Returns the current record's "ProductType" value
 * @method Doctrine_Collection getQuestion()        Returns the current record's "Question" collection
 * @method ProductHelper       setId()              Sets the current record's "id" value
 * @method ProductHelper       setProductTypeId()   Sets the current record's "product_type_id" value
 * @method ProductHelper       setToken()           Sets the current record's "token" value
 * @method ProductHelper       setName()            Sets the current record's "name" value
 * @method ProductHelper       setIsActive()        Sets the current record's "is_active" value
 * @method ProductHelper       setImage()           Sets the current record's "image" value
 * @method ProductHelper       setPosition()        Sets the current record's "position" value
 * @method ProductHelper       setDescription()     Sets the current record's "description" value
 * @method ProductHelper       setProductType()     Sets the current record's "ProductType" value
 * @method ProductHelper       setQuestion()        Sets the current record's "Question" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductHelper extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_helper');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_type_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));

        $this->option('comment', 'Помошник выбора товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductType', array(
             'local' => 'product_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ProductHelperQuestion as Question', array(
             'local' => 'id',
             'foreign' => 'helper_id'));
    }
}