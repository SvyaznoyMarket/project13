<?php

/**
 * BaseTag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $core_id
 * @property integer $group_id
 * @property string $token
 * @property string $name
 * @property TagGroup $Group
 * @property Doctrine_Collection $ProductRelation
 * @property Doctrine_Collection $ProductCategoryRelation
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getCoreId()                  Returns the current record's "core_id" value
 * @method integer             getGroupId()                 Returns the current record's "group_id" value
 * @method string              getToken()                   Returns the current record's "token" value
 * @method string              getName()                    Returns the current record's "name" value
 * @method TagGroup            getGroup()                   Returns the current record's "Group" value
 * @method Doctrine_Collection getProductRelation()         Returns the current record's "ProductRelation" collection
 * @method Doctrine_Collection getProductCategoryRelation() Returns the current record's "ProductCategoryRelation" collection
 * @method Tag                 setId()                      Sets the current record's "id" value
 * @method Tag                 setCoreId()                  Sets the current record's "core_id" value
 * @method Tag                 setGroupId()                 Sets the current record's "group_id" value
 * @method Tag                 setToken()                   Sets the current record's "token" value
 * @method Tag                 setName()                    Sets the current record's "name" value
 * @method Tag                 setGroup()                   Sets the current record's "Group" value
 * @method Tag                 setProductRelation()         Sets the current record's "ProductRelation" collection
 * @method Tag                 setProductCategoryRelation() Sets the current record's "ProductCategoryRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTag extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('core_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'ид записи в Core',
             'length' => 20,
             ));
        $this->hasColumn('group_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));

        $this->option('comment', 'Тег');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TagGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $this->hasMany('TagProductRelation as ProductRelation', array(
             'local' => 'id',
             'foreign' => 'tag_id'));

        $this->hasMany('TagProductCategoryRelation as ProductCategoryRelation', array(
             'local' => 'id',
             'foreign' => 'tag_id'));
    }
}