<?php

/**
 * BaseProductComment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $core_parent_id
 * @property integer $core_user_id
 * @property integer $product_id
 * @property integer $parent_id
 * @property integer $lft
 * @property integer $rgt
 * @property integer $level
 * @property integer $user_id
 * @property text $content
 * @property integer $helpful
 * @property integer $unhelpful
 * @property boolean $is_recomend
 * @property integer $rating
 * @property Product $Product
 * @property User $User
 * 
 * @method integer        getId()             Returns the current record's "id" value
 * @method integer        getCoreParentId()   Returns the current record's "core_parent_id" value
 * @method integer        getCoreUserId()     Returns the current record's "core_user_id" value
 * @method integer        getProductId()      Returns the current record's "product_id" value
 * @method integer        getParentId()       Returns the current record's "parent_id" value
 * @method integer        getLft()            Returns the current record's "lft" value
 * @method integer        getRgt()            Returns the current record's "rgt" value
 * @method integer        getLevel()          Returns the current record's "level" value
 * @method integer        getUserId()         Returns the current record's "user_id" value
 * @method text           getContent()        Returns the current record's "content" value
 * @method integer        getHelpful()        Returns the current record's "helpful" value
 * @method integer        getUnhelpful()      Returns the current record's "unhelpful" value
 * @method boolean        getIsRecomend()     Returns the current record's "is_recomend" value
 * @method integer        getRating()         Returns the current record's "rating" value
 * @method Product        getProduct()        Returns the current record's "Product" value
 * @method User           getUser()           Returns the current record's "User" value
 * @method ProductComment setId()             Sets the current record's "id" value
 * @method ProductComment setCoreParentId()   Sets the current record's "core_parent_id" value
 * @method ProductComment setCoreUserId()     Sets the current record's "core_user_id" value
 * @method ProductComment setProductId()      Sets the current record's "product_id" value
 * @method ProductComment setParentId()       Sets the current record's "parent_id" value
 * @method ProductComment setLft()            Sets the current record's "lft" value
 * @method ProductComment setRgt()            Sets the current record's "rgt" value
 * @method ProductComment setLevel()          Sets the current record's "level" value
 * @method ProductComment setUserId()         Sets the current record's "user_id" value
 * @method ProductComment setContent()        Sets the current record's "content" value
 * @method ProductComment setHelpful()        Sets the current record's "helpful" value
 * @method ProductComment setUnhelpful()      Sets the current record's "unhelpful" value
 * @method ProductComment setIsRecomend()     Sets the current record's "is_recomend" value
 * @method ProductComment setRating()         Sets the current record's "rating" value
 * @method ProductComment setProduct()        Sets the current record's "Product" value
 * @method ProductComment setUser()           Sets the current record's "User" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductComment extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_comment');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('core_parent_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'ид родителя в Core',
             'length' => 20,
             ));
        $this->hasColumn('core_user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'ид пользователя в Core',
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('parent_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'length' => 20,
             ));
        $this->hasColumn('lft', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('rgt', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('level', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 4,
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('content', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             'notblank' => true,
             'comment' => 'Текст комментария',
             ));
        $this->hasColumn('helpful', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Количество полезных оценок отзыва',
             'length' => 4,
             ));
        $this->hasColumn('unhelpful', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Количество бесполезных оценок отзыва',
             'length' => 4,
             ));
        $this->hasColumn('is_recomend', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('rating', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => false,
             'comment' => 'рейтинг 1-5',
             'length' => 1,
             ));

        $this->option('comment', 'Комментарии товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $nestedset0 = new Doctrine_Template_NestedSet(array(
             'hasManyRoots' => true,
             'rootColumnName' => 'product_id',
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $corable0 = new Doctrine_Template_Corable(array(
             'check' => 'isRoot',
             ));
        $this->actAs($nestedset0);
        $this->actAs($timestampable0);
        $this->actAs($corable0);
    }
}