<?php

/**
 * BaseNewsCreatorRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $news_id
 * @property integer $creator_id
 * @property News $News
 * @property Creator $Creator
 * 
 * @method integer             getNewsId()     Returns the current record's "news_id" value
 * @method integer             getCreatorId()  Returns the current record's "creator_id" value
 * @method News                getNews()       Returns the current record's "News" value
 * @method Creator             getCreator()    Returns the current record's "Creator" value
 * @method NewsCreatorRelation setNewsId()     Sets the current record's "news_id" value
 * @method NewsCreatorRelation setCreatorId()  Sets the current record's "creator_id" value
 * @method NewsCreatorRelation setNews()       Sets the current record's "News" value
 * @method NewsCreatorRelation setCreator()    Sets the current record's "Creator" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseNewsCreatorRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('news_creator_relation');
        $this->hasColumn('news_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('creator_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Связь новости с производителем');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('News', array(
             'local' => 'news_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Creator', array(
             'local' => 'creator_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}