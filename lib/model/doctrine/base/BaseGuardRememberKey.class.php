<?php

/**
 * BaseGuardRememberKey
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property string $remember_key
 * @property string $ip_address
 * @property GuardUser $User
 * 
 * @method integer          getUserId()       Returns the current record's "user_id" value
 * @method string           getRememberKey()  Returns the current record's "remember_key" value
 * @method string           getIpAddress()    Returns the current record's "ip_address" value
 * @method GuardUser        getUser()         Returns the current record's "User" value
 * @method GuardRememberKey setUserId()       Sets the current record's "user_id" value
 * @method GuardRememberKey setRememberKey()  Sets the current record's "remember_key" value
 * @method GuardRememberKey setIpAddress()    Sets the current record's "ip_address" value
 * @method GuardRememberKey setUser()         Sets the current record's "User" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGuardRememberKey extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('guard_remember_key');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('remember_key', 'string', 32, array(
             'type' => 'string',
             'length' => 32,
             ));
        $this->hasColumn('ip_address', 'string', 50, array(
             'type' => 'string',
             'length' => 50,
             ));

        $this->option('symfony', array(
             'form' => false,
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('GuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}