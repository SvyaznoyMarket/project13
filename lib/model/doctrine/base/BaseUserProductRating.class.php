<?php

/**
 * BaseUserProductRating
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $property_id
 * @property integer $user_id
 * @property integer $product_id
 * @property decimal $value
 * @property ProductRatingTypeProperty $Property
 * @property User $User
 * @property Product $Product
 * 
 * @method integer                   getPropertyId()  Returns the current record's "property_id" value
 * @method integer                   getUserId()      Returns the current record's "user_id" value
 * @method integer                   getProductId()   Returns the current record's "product_id" value
 * @method decimal                   getValue()       Returns the current record's "value" value
 * @method ProductRatingTypeProperty getProperty()    Returns the current record's "Property" value
 * @method User                      getUser()        Returns the current record's "User" value
 * @method Product                   getProduct()     Returns the current record's "Product" value
 * @method UserProductRating         setPropertyId()  Sets the current record's "property_id" value
 * @method UserProductRating         setUserId()      Sets the current record's "user_id" value
 * @method UserProductRating         setProductId()   Sets the current record's "product_id" value
 * @method UserProductRating         setValue()       Sets the current record's "value" value
 * @method UserProductRating         setProperty()    Sets the current record's "Property" value
 * @method UserProductRating         setUser()        Sets the current record's "User" value
 * @method UserProductRating         setProduct()     Sets the current record's "Product" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserProductRating extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_product_rating');
        $this->hasColumn('property_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('value', 'decimal', 18, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Рейтинг товара',
             'length' => 18,
             'scale' => '14',
             ));

        $this->option('comment', 'Пользовательские оценки товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductRatingTypeProperty as Property', array(
             'local' => 'property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}