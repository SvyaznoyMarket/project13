<?php

/**
 * BaseProductHelperAnswer
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $question_id
 * @property string $name
 * @property boolean $is_active
 * @property integer $position
 * @property enum $condition
 * @property ProductHelperQuestion $Question
 * @property Doctrine_Collection $Filter
 * 
 * @method integer               getId()          Returns the current record's "id" value
 * @method integer               getQuestionId()  Returns the current record's "question_id" value
 * @method string                getName()        Returns the current record's "name" value
 * @method boolean               getIsActive()    Returns the current record's "is_active" value
 * @method integer               getPosition()    Returns the current record's "position" value
 * @method enum                  getCondition()   Returns the current record's "condition" value
 * @method ProductHelperQuestion getQuestion()    Returns the current record's "Question" value
 * @method Doctrine_Collection   getFilter()      Returns the current record's "Filter" collection
 * @method ProductHelperAnswer   setId()          Sets the current record's "id" value
 * @method ProductHelperAnswer   setQuestionId()  Sets the current record's "question_id" value
 * @method ProductHelperAnswer   setName()        Sets the current record's "name" value
 * @method ProductHelperAnswer   setIsActive()    Sets the current record's "is_active" value
 * @method ProductHelperAnswer   setPosition()    Sets the current record's "position" value
 * @method ProductHelperAnswer   setCondition()   Sets the current record's "condition" value
 * @method ProductHelperAnswer   setQuestion()    Sets the current record's "Question" value
 * @method ProductHelperAnswer   setFilter()      Sets the current record's "Filter" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductHelperAnswer extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_helper_answer');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('question_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => true,
             'default' => false,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));
        $this->hasColumn('condition', 'enum', 10, array(
             'type' => 'enum',
             'length' => 10,
             'values' => 
             array(
              0 => 'and',
              1 => 'or',
             ),
             'notnull' => true,
             'default' => 'or',
             'comment' => 'Условие для значений свойств товара',
             ));

        $this->option('comment', 'Ответ для помошника выбора товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductHelperQuestion as Question', array(
             'local' => 'question_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasMany('ProductHelperFilter as Filter', array(
             'local' => 'id',
             'foreign' => 'answer_id'));
    }
}