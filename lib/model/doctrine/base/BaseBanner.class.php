<?php

/**
 * BaseBanner
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $slot_id
 * @property string $token
 * @property string $name
 * @property string $link
 * @property string $image
 * @property string $image_preview
 * @property integer $position
 * @property Slot $Slot
 * 
 * @method integer getId()            Returns the current record's "id" value
 * @method integer getSlotId()        Returns the current record's "slot_id" value
 * @method string  getToken()         Returns the current record's "token" value
 * @method string  getName()          Returns the current record's "name" value
 * @method string  getLink()          Returns the current record's "link" value
 * @method string  getImage()         Returns the current record's "image" value
 * @method string  getImagePreview()  Returns the current record's "image_preview" value
 * @method integer getPosition()      Returns the current record's "position" value
 * @method Slot    getSlot()          Returns the current record's "Slot" value
 * @method Banner  setId()            Sets the current record's "id" value
 * @method Banner  setSlotId()        Sets the current record's "slot_id" value
 * @method Banner  setToken()         Sets the current record's "token" value
 * @method Banner  setName()          Sets the current record's "name" value
 * @method Banner  setLink()          Sets the current record's "link" value
 * @method Banner  setImage()         Sets the current record's "image" value
 * @method Banner  setImagePreview()  Sets the current record's "image_preview" value
 * @method Banner  setPosition()      Sets the current record's "position" value
 * @method Banner  setSlot()          Sets the current record's "Slot" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBanner extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('banner');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('slot_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('token', 'string', 255, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'название',
             'length' => 255,
             ));
        $this->hasColumn('link', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'ссылка',
             'length' => 255,
             ));
        $this->hasColumn('image', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'оригинальная картинка',
             'length' => 255,
             ));
        $this->hasColumn('image_preview', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'уменьшенная картинка',
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'comment' => 'Порядок сортировки',
             'length' => 4,
             ));

        $this->option('comment', 'Баннер');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Slot', array(
             'local' => 'slot_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}