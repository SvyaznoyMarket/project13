<?php

/**
 * BaseUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $source_id
 * @property enum $type
 * @property integer $user_id
 * @property string $content
 * @property User $User
 * 
 * @method integer     getId()        Returns the current record's "id" value
 * @method string      getSourceId()  Returns the current record's "source_id" value
 * @method enum        getType()      Returns the current record's "type" value
 * @method integer     getUserId()    Returns the current record's "user_id" value
 * @method string      getContent()   Returns the current record's "content" value
 * @method User        getUser()      Returns the current record's "User" value
 * @method UserProfile setId()        Sets the current record's "id" value
 * @method UserProfile setSourceId()  Sets the current record's "source_id" value
 * @method UserProfile setType()      Sets the current record's "type" value
 * @method UserProfile setUserId()    Sets the current record's "user_id" value
 * @method UserProfile setContent()   Sets the current record's "content" value
 * @method UserProfile setUser()      Sets the current record's "User" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserProfile extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_profile');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('source_id', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'comment' => 'Идентификатор в социальной сети',
             'length' => 255,
             ));
        $this->hasColumn('type', 'enum', 14, array(
             'type' => 'enum',
             'length' => 14,
             'values' => 
             array(
              0 => 'vkontakte',
              1 => 'facebook',
              2 => 'twitter',
              3 => 'odnoklassniki',
              4 => 'gmail',
              5 => 'mailru',
              6 => 'live_journal',
              7 => 'yandex',
             ),
             'notnull' => false,
             'comment' => 'Тип профайла',
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('content', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             'comment' => 'Данные пользователя в формате yaml',
             ));

        $this->option('comment', 'Профайл пользователя');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $corable0 = new Doctrine_Template_Corable(array(
             ));
        $this->actAs($timestampable0);
        $this->actAs($corable0);
    }
}