<?php

/**
 * BaseProductPrice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $product_price_list_id
 * @property integer $product_id
 * @property decimal $price
 * @property decimal $old_price
 * @property decimal $avg_price
 * @property Product $Product
 * @property ProductPriceList $PriceList
 * 
 * @method integer          getId()                    Returns the current record's "id" value
 * @method integer          getProductPriceListId()    Returns the current record's "product_price_list_id" value
 * @method integer          getProductId()             Returns the current record's "product_id" value
 * @method decimal          getPrice()                 Returns the current record's "price" value
 * @method decimal          getOldPrice()              Returns the current record's "old_price" value
 * @method decimal          getAvgPrice()              Returns the current record's "avg_price" value
 * @method Product          getProduct()               Returns the current record's "Product" value
 * @method ProductPriceList getPriceList()             Returns the current record's "PriceList" value
 * @method ProductPrice     setId()                    Sets the current record's "id" value
 * @method ProductPrice     setProductPriceListId()    Sets the current record's "product_price_list_id" value
 * @method ProductPrice     setProductId()             Sets the current record's "product_id" value
 * @method ProductPrice     setPrice()                 Sets the current record's "price" value
 * @method ProductPrice     setOldPrice()              Sets the current record's "old_price" value
 * @method ProductPrice     setAvgPrice()              Sets the current record's "avg_price" value
 * @method ProductPrice     setProduct()               Sets the current record's "Product" value
 * @method ProductPrice     setPriceList()             Sets the current record's "PriceList" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductPrice extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_price');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_price_list_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('price', 'decimal', 12, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Цена товара',
             'length' => 12,
             'scale' => '2',
             ));
        $this->hasColumn('old_price', 'decimal', 12, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Цена товара',
             'length' => 12,
             'scale' => '2',
             ));
        $this->hasColumn('avg_price', 'decimal', 12, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Цена товара',
             'length' => 12,
             'scale' => '2',
             ));

        $this->option('comment', 'Цены товаров по прайс-листам');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductPriceList as PriceList', array(
             'local' => 'product_price_list_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}