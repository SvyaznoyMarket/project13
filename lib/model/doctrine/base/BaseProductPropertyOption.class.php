<?php

/**
 * BaseProductPropertyOption
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $property_id
 * @property string $value
 * @property integer $position
 * @property ProductProperty $Property
 * 
 * @method integer               getId()          Returns the current record's "id" value
 * @method integer               getPropertyId()  Returns the current record's "property_id" value
 * @method string                getValue()       Returns the current record's "value" value
 * @method integer               getPosition()    Returns the current record's "position" value
 * @method ProductProperty       getProperty()    Returns the current record's "Property" value
 * @method ProductPropertyOption setId()          Sets the current record's "id" value
 * @method ProductPropertyOption setPropertyId()  Sets the current record's "property_id" value
 * @method ProductPropertyOption setValue()       Sets the current record's "value" value
 * @method ProductPropertyOption setPosition()    Sets the current record's "position" value
 * @method ProductPropertyOption setProperty()    Sets the current record's "Property" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductPropertyOption extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_property_option');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('property_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('position', 'integer', 4, array(
             'type' => 'integer',
             'notnull' => true,
             'default' => 1,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductProperty as Property', array(
             'local' => 'property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}