<?php

/**
 * BaseProductHelperFilter
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $answer_id
 * @property integer $product_property_id
 * @property string $value
 * @property ProductHelperAnswer $Answer
 * @property ProductProperty $ProductProperty
 * 
 * @method integer             getAnswerId()            Returns the current record's "answer_id" value
 * @method integer             getProductPropertyId()   Returns the current record's "product_property_id" value
 * @method string              getValue()               Returns the current record's "value" value
 * @method ProductHelperAnswer getAnswer()              Returns the current record's "Answer" value
 * @method ProductProperty     getProductProperty()     Returns the current record's "ProductProperty" value
 * @method ProductHelperFilter setAnswerId()            Sets the current record's "answer_id" value
 * @method ProductHelperFilter setProductPropertyId()   Sets the current record's "product_property_id" value
 * @method ProductHelperFilter setValue()               Sets the current record's "value" value
 * @method ProductHelperFilter setAnswer()              Sets the current record's "Answer" value
 * @method ProductHelperFilter setProductProperty()     Sets the current record's "ProductProperty" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductHelperFilter extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_helper_filter');
        $this->hasColumn('answer_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_property_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('value', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));

        $this->option('comment', 'Связь ответа для помошника выбора товара и свойства товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductHelperAnswer as Answer', array(
             'local' => 'answer_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductProperty', array(
             'local' => 'product_property_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}