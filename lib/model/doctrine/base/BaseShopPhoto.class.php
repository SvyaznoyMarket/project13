<?php

/**
 * BaseShopPhoto
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $shop_id
 * @property string $name
 * @property Shop $Shop
 * 
 * @method integer   getId()      Returns the current record's "id" value
 * @method integer   getShopId()  Returns the current record's "shop_id" value
 * @method string    getName()    Returns the current record's "name" value
 * @method Shop      getShop()    Returns the current record's "Shop" value
 * @method ShopPhoto setId()      Sets the current record's "id" value
 * @method ShopPhoto setShopId()  Sets the current record's "shop_id" value
 * @method ShopPhoto setName()    Sets the current record's "name" value
 * @method ShopPhoto setShop()    Sets the current record's "Shop" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseShopPhoto extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('shop_photo');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('shop_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));

        $this->option('comment', 'Фото магазина');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Shop', array(
             'local' => 'shop_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}