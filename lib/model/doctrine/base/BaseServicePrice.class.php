<?php

/**
 * BaseServicePrice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $region_id
 * @property integer $service_id
 * @property decimal $price
 * @property Service $Service
 * @property Region $Region
 * 
 * @method integer      getRegionId()   Returns the current record's "region_id" value
 * @method integer      getServiceId()  Returns the current record's "service_id" value
 * @method decimal      getPrice()      Returns the current record's "price" value
 * @method Service      getService()    Returns the current record's "Service" value
 * @method Region       getRegion()     Returns the current record's "Region" value
 * @method ServicePrice setRegionId()   Sets the current record's "region_id" value
 * @method ServicePrice setServiceId()  Sets the current record's "service_id" value
 * @method ServicePrice setPrice()      Sets the current record's "price" value
 * @method ServicePrice setService()    Sets the current record's "Service" value
 * @method ServicePrice setRegion()     Sets the current record's "Region" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseServicePrice extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('service_price');
        $this->hasColumn('region_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('service_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('price', 'decimal', 12, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Цена услуги',
             'length' => 12,
             'scale' => '2',
             ));

        $this->option('comment', 'Стоимость услуг F1 по регионам');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Service', array(
             'local' => 'service_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Region', array(
             'local' => 'region_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));
    }
}