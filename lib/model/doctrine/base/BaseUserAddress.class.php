<?php

/**
 * BaseUserAddress
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property integer $city_id
 * @property string $name
 * @property string $address
 * @property User $User
 * @property Region $City
 * 
 * @method integer     getUserId()  Returns the current record's "user_id" value
 * @method integer     getCityId()  Returns the current record's "city_id" value
 * @method string      getName()    Returns the current record's "name" value
 * @method string      getAddress() Returns the current record's "address" value
 * @method User        getUser()    Returns the current record's "User" value
 * @method Region      getCity()    Returns the current record's "City" value
 * @method UserAddress setUserId()  Sets the current record's "user_id" value
 * @method UserAddress setCityId()  Sets the current record's "city_id" value
 * @method UserAddress setName()    Sets the current record's "name" value
 * @method UserAddress setAddress() Sets the current record's "address" value
 * @method UserAddress setUser()    Sets the current record's "User" value
 * @method UserAddress setCity()    Sets the current record's "City" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserAddress extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_address');
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('city_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'notblank' => true,
             'length' => 255,
             ));
        $this->hasColumn('address', 'string', null, array(
             'type' => 'string',
             'notnull' => true,
             ));

        $this->option('comment', 'Адрес пользователя для доставки');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Region as City', array(
             'local' => 'city_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));
    }
}