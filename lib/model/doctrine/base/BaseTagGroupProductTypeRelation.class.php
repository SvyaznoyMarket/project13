<?php

/**
 * BaseTagGroupProductTypeRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tag_group_id
 * @property integer $product_type_id
 * @property TagGroup $TagGroup
 * @property ProductType $ProductType
 * 
 * @method integer                     getTagGroupId()      Returns the current record's "tag_group_id" value
 * @method integer                     getProductTypeId()   Returns the current record's "product_type_id" value
 * @method TagGroup                    getTagGroup()        Returns the current record's "TagGroup" value
 * @method ProductType                 getProductType()     Returns the current record's "ProductType" value
 * @method TagGroupProductTypeRelation setTagGroupId()      Sets the current record's "tag_group_id" value
 * @method TagGroupProductTypeRelation setProductTypeId()   Sets the current record's "product_type_id" value
 * @method TagGroupProductTypeRelation setTagGroup()        Sets the current record's "TagGroup" value
 * @method TagGroupProductTypeRelation setProductType()     Sets the current record's "ProductType" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTagGroupProductTypeRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tag_group_product_type_relation');
        $this->hasColumn('tag_group_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_type_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Связь группы тега и типа товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TagGroup', array(
             'local' => 'tag_group_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('ProductType', array(
             'local' => 'product_type_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}