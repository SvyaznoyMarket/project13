<?php

/**
 * BaseProductCategoryProductRelation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $product_category_id
 * @property integer $product_id
 * @property ProductCategory $Category
 * @property Product $Product
 * 
 * @method integer                        getProductCategoryId()   Returns the current record's "product_category_id" value
 * @method integer                        getProductId()           Returns the current record's "product_id" value
 * @method ProductCategory                getCategory()            Returns the current record's "Category" value
 * @method Product                        getProduct()             Returns the current record's "Product" value
 * @method ProductCategoryProductRelation setProductCategoryId()   Sets the current record's "product_category_id" value
 * @method ProductCategoryProductRelation setProductId()           Sets the current record's "product_id" value
 * @method ProductCategoryProductRelation setCategory()            Sets the current record's "Category" value
 * @method ProductCategoryProductRelation setProduct()             Sets the current record's "Product" value
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProductCategoryProductRelation extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('product_category_product_relation');
        $this->hasColumn('product_category_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('product_id', 'integer', 20, array(
             'type' => 'integer',
             'primary' => true,
             'length' => 20,
             ));

        $this->option('comment', 'Связь категорий товара и товара');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ProductCategory as Category', array(
             'local' => 'product_category_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('Product', array(
             'local' => 'product_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable(array(
             ));
        $this->actAs($timestampable0);
    }
}