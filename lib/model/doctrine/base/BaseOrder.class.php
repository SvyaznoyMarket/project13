<?php

/**
 * BaseOrder
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $token
 * @property integer $user_id
 * @property integer $payment_method_id
 * @property decimal $sum
 * @property User $User
 * @property PaymentMethod $PaymentMethod
 * @property Doctrine_Collection $ProductRelation
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getToken()             Returns the current record's "token" value
 * @method integer             getUserId()            Returns the current record's "user_id" value
 * @method integer             getPaymentMethodId()   Returns the current record's "payment_method_id" value
 * @method decimal             getSum()               Returns the current record's "sum" value
 * @method User                getUser()              Returns the current record's "User" value
 * @method PaymentMethod       getPaymentMethod()     Returns the current record's "PaymentMethod" value
 * @method Doctrine_Collection getProductRelation()   Returns the current record's "ProductRelation" collection
 * @method Order               setId()                Sets the current record's "id" value
 * @method Order               setToken()             Sets the current record's "token" value
 * @method Order               setUserId()            Sets the current record's "user_id" value
 * @method Order               setPaymentMethodId()   Sets the current record's "payment_method_id" value
 * @method Order               setSum()               Sets the current record's "sum" value
 * @method Order               setUser()              Sets the current record's "User" value
 * @method Order               setPaymentMethod()     Sets the current record's "PaymentMethod" value
 * @method Order               setProductRelation()   Sets the current record's "ProductRelation" collection
 * 
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrder extends myDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('order');
        $this->hasColumn('id', 'integer', 20, array(
             'type' => 'integer',
             'autoincrement' => true,
             'primary' => true,
             'length' => 20,
             ));
        $this->hasColumn('token', 'string', 64, array(
             'type' => 'string',
             'unique' => true,
             'notnull' => true,
             'notblank' => true,
             'comment' => 'Номер заказа',
             'length' => 64,
             ));
        $this->hasColumn('user_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 20,
             ));
        $this->hasColumn('payment_method_id', 'integer', 20, array(
             'type' => 'integer',
             'notnull' => true,
             'length' => 20,
             ));
        $this->hasColumn('sum', 'decimal', 12, array(
             'type' => 'decimal',
             'notnull' => true,
             'default' => 0,
             'comment' => 'Стоимость заказа',
             'length' => 12,
             'scale' => '2',
             ));

        $this->option('comment', 'Заказ пользователя');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasOne('PaymentMethod', array(
             'local' => 'payment_method_id',
             'foreign' => 'id',
             'onDelete' => 'RESTRICT'));

        $this->hasMany('OrderProductRelation as ProductRelation', array(
             'local' => 'id',
             'foreign' => 'order_id'));
    }
}