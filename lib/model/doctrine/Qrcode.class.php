<?php

/**
 * Qrcode
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Qrcode extends BaseQrcode
{
  public function importFromCore(array $data)
  {
    parent::importFromCore($data);

    $content = array();
    if (!empty($data['item_list'])) foreach ($data['item_list'] as $contentData)
    {
      $item = array(
        'core_id'      => $contentData['item_id'],
        'core_type_id' => $contentData['type_id'],
        'position'     => $contentData['position'],
      );

      $item['type'] = $this->getTable()->getTypeByCoreId($item['core_type_id']);
      $item['id'] = $item['type'] ? Doctrine_Core::getTable(sfInflector::camelize($item['type']))->getIdByCoreId($item['core_id']) : null;

      $content[] = $item;
    }
    $this->setContentData($content);
  }

  public function setContentData($value)
  {
    if (!is_array($value))
    {
      $arg2 = func_get_arg(1);

      $value = array(
        $value => $arg2,
      );
    }

    $content = $this->getContentData();
    foreach ($value as $k => $v)
    {
      $content[$k] = $v;
    }

    $this->content = sfYaml::dump($content);
  }

  public function getContentData($name = null)
  {
    $value = sfYaml::load($this->content);

    return null == $name ? $value : $value[$name];
  }

  public function getView()
  {
    $content = $this->getContentData();

    $view = false;
    // guess if view is product's card
    if ((1 == count($content)))
    {
      switch($content[0]['type'])
      {
        case 'product':
          $view = 'product.show';
          break;
      }
    }
    else {
      $types = array();
      foreach ($content as $item)
      {
        if (in_array($item['type'], $types)) continue;
        $types[] = $item['type'];
      }

      if (1 == count($types))
      {
        switch($types[0])
        {
          case 'product':
            $view = 'product.list';
            break;
        }
      }
    }

    return $view;
  }
}
