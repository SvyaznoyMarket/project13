<?php

/**
 * RegionTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class RegionTable extends myDoctrineTable
{

  /**
   * Returns an instance of this class.
   *
   * @return object RegionTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Region');
  }

  public function getCoreMapping()
  {
    return array(
      'id'        => 'core_id',
      'parent_id' => 'core_parent_id',
      'name'      => 'name',
    );
  }

  public function createBaseQuery(array $params = array())
  {
    $this->applyDefaultParameters($params);

    $q = $this->createQuery('region');

    $q->where('region.level > ?', 0);
    $q->orderBy('region.root_id, region.lft');

    return $q;
  }

  public function getForRoute(array $params)
  {
    $id = isset($params['region']) ? $this->getIdBy('token', $params['region']) : null;

    return $this->getById($id);
  }

  public function getDefault(array $params = array())
  {
    $key = $this->getQueryHash('region-default', $params);

    $return = $this->getCachedByKey($key);
    if (!$return)
    {
      $return = $this->createBaseQuery()
        ->where('region.is_default = true')
        ->addWhere('region.type = ?', 'city')
        ->fetchOne()
      ;

      if ($this->isCacheEnabled())
      {
        $this->getCache()->set($key, $return, 2592000); // обновление кеша через 30 дней
      }
    }

    return $return;
  }

  public function getParentRecord($record, array $params = array())
  {
    $key = $this->getQueryHash("region-{$record['id']}/parent", $params);

    $return = $this->getCachedByKey($key);
    if (!$return)
    {
      $return = $record->getNode()->getParent();

      if ($this->isCacheEnabled())
      {
        $this->getCache()->set($key, $return, 151200); // обновление кеша через неделю
        $this->getCache()->addTag("region-{$record['id']}", $key);
      }
    }

    return $return;
  }

  public function getListHavingShops(array $params = array())
  {
    $this->applyDefaultParameters($params);

    $q = $this->createBaseQuery($params);

    $q->select('region.product_price_list_id, region.stock_id, region.token, region.name, region.type, COUNT(shop.id) AS shop_count')
      ->innerJoin('region.Shop shop WITH shop.is_active = ?', 1)
      ->groupBy('region.product_price_list_id, region.stock_id, region.token, region.name, region.type')
      ->having('COUNT(shop.id) > 0')
    ;

    $this->setQueryParameters($q, $params);

    $ids = $this->getIdsByQuery($q, $params);

    return $this->createListByIds($ids, $params);
  }

  public function getCityList(array $params = array())
  {
    $this->applyDefaultParameters($params);

    $key = $this->getQueryHash('region-cityList', $params);

    $return = $this->getCachedByKey($key);
    if (!$return)
    {
      $q = $this->createBaseQuery($params);

      $q->addWhere('region.type = ?', 'city');

      $q->orderBy('region.name');

      $this->setQueryParameters($q, $params);

      $return = $q->execute();
      if ($this->isCacheEnabled())
      {
        $this->getCache()->set($key, $return, 259200); // обновить кеш через 3 дня
      }
    }

    return $return;
  }
}
