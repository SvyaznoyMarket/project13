<?php

/**
 * ProductPhotoTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductPhotoTable extends myDoctrineTable
{
  /**
   * Returns an instance of this class.
   *
   * @return object ProductPhotoTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('ProductPhoto');
  }

  public function getCoreMapping()
  {
    return array(
      'id'      => 'core_id',
      'name'    => 'name',
      'source'  => 'resource',
      'item_id' => array('rel' => 'Product', ),
    );
  }

  public function getByProduct(Product $product)
  {
	  $q = $this->createBaseQuery()->where('product_id = ?', $product->id);
	  return $q->execute();
  }

  public function getOneByProduct(Product $product)
  {
	  $q = $this->createBaseQuery()->where('product_id = ?', $product->id);
	  return $q->fetchOne();
  }

  public function getCacheEraserKeys(myDoctrineRecord $record, $action = null)
  {
    $return = array();

    /*
    $q = ProductTable::getInstance()->createQuery('product')
      ->select('product.core_id')
      ->innerJoin('product.Photo photo')
      ->where('photo.product_id = ?', $record->id)
      ->setHydrationMode(Doctrine_Core::HYDRATE_SINGLE_SCALAR)
    ;

    $ids = $q->execute();
    if (!is_array($ids))
    {
      $ids = array($ids);
    }

    foreach ($ids as $id)
    {
      $return[] = "product-{$id}";
    }
    */


    return $return;
  }
}