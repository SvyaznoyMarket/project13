<?php

/**
 * ProductCategoryTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ProductCategoryTable extends myDoctrineTable
{

  /**
   * Returns an instance of this class.
   *
   * @return object ProductCategoryTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('ProductCategory');
  }

  public function getCoreMapping()
  {
    return array(
      'id'        => 'core_id',
      'parent_id' => 'core_parent_id',
      'name'      => 'name',
    );
  }

  public function createBaseQuery(array $params = array())
  {
    $this->applyDefaultParameters($params);

    $q = $this->createQuery('productCategory');

    $q->orderBy('productCategory.root_id, productCategory.lft');

    return $q;
  }

  public function getForRoute(array $params)
  {
    $id = isset($params['productCategory']) ? $this->getIdBy('token', $params['productCategory']) : null;

    return $this->getById($id, array());
  }

  public function getById($id, array $params = array())
  {
    $this->applyDefaultParameters($params, array(
      'with_filters' => true,
    ));

    $q = $this->createBaseQuery($params);

    $this->setQueryParameters($q);

    $q->addWhere('productCategory.id = ?', $id);

    $q->useResultCache(true, null, $this->getRecordQueryHash($id, $params));

    $record = $q->fetchOne();
    if (!$record)
    {
      return $record;
    }

    if ($params['with_filters'] && $record['filter_group_id'])
    {
      $record['FilterGroup'] = ProductFilterGroupTable::getInstance()->getById($record['filter_group_id']);
    }

    return $record;
  }

  public function getList(array $params = array())
  {
    $q = $this->createBaseQuery($params);
    $this->setQueryParameters($q, $params);

    $q->useResultCache(true, null, $this->getQueryHash('productCategory-all', $params));

    /*
    $ids = $this->getIdsByQuery($q);

    return $this->createListByIds($ids, $params);
    */
    
    return $q->execute();
  }

  public function getRootList(array $params = array())
  {
    $q = $this->createBaseQuery($params);
    $this->setQueryParameters($q, $params);

    $q->addWhere('productCategory.level = ?', 0);

    $q->useResultCache(true, null, $this->getQueryHash('productCategory-root', $params));

    $ids = $this->getIdsByQuery($q);

    return $this->createListByIds($ids, $params);
  }
  
  public function getSubList(array $params = array())
  {
    $q = $this->createBaseQuery($params);
    $this->setQueryParameters($q, $params);

	if (!empty($params['root_id'])) {
		$q->addWhere('productCategory.root_id = ?', (int)$params['root_id']);
	}
	$q->addWhere('productCategory.level >= 1');
	$q->addWhere('productCategory.level <= 2');
    $q->orderBy('productCategory.lft');

    $q->useResultCache(true, null, $this->getQueryHash('productCategory-sub', $params));

	return $q->execute();
	
    $ids = $this->getIdsByQuery($q);

    return $this->createListByIds($ids, $params);
  }
}