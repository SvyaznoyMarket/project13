<?php

/**
 * Order
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Order extends BaseOrder
{
  public function __toString()
  {
    return (string)$this->token;
  }

  public function preSave($event)
  {
    $record = $event->getInvoker();

    if (empty($record->token))
    {
      $record->token = uniqid();
    }
  }

  public function toParams()
  {
    return array(
      'order' => $this->token,
    );
  }

  public function getPersonTypeName()
  {
    $names = array(
      'individual' => 'физическое лицо',
      'legal'      => 'юридическое лицо',
    );

    return isset($names[$this->person_type]) ? $names[$this->person_type] : null;
  }

/*  public function exportToCore()
  {
    $products = $this->getProductRelation();

    foreach ($products as &$product)
    {
      $product = array(
        'product_id'        => $product->product_id,
        'price'             => $product->price,
        'quantity'          => $product->quantity,
        'characteristic_id' => null,
      );
    }

    $data = array(
      'first_name'  => $this->recipient_first_name,
      'last_name'   => $this->recipient_last_name,
      'middle_name' => $this->recipient_middle_name,
      'user_id'     => $this->user_id,
      'sum'         => $this->sum,
      'payment_id'  => $this->payment_method_id ? $this->payment_method_id : 1,
      'delivery_id' => $this->delivery_type_id ? $this->delivery_type_id : 1,
      'geo_id'      => $this->region_id ? $this->region_id : 1,
      'address'     => $this->address ? $this->address : 'The Earth',
      'size_id'     => 0,
      'product'     => $products,
    );
    return $data;
  }*/

  public function exportToCore()
  {
    $data = parent::exportToCore();

    $data['user_id']      = $this->User->core_id;
    $data['payment_id']   = $this->PaymentMethod->core_id;
    $data['geo_id']       = $this->Region->core_id;
    $data['delivery_id']  = $this->DeliveryType->core_id;

    foreach ($this->ProductRelation as $product)
    {
      $data['product'][] = array(
        'product_id'  => $product->Product->core_id,
        'price'       => $product->price,
        'quantity'    => $product->quantity,
      );
    }
  }
}
