<?php

/**
 * NewsTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class NewsTable extends myDoctrineTable
{
  /**
   * Returns an instance of this class.
   *
   * @return object NewsTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('News');
  }

  public function createBaseQuery(array $params = array())
  {
    $this->applyDefaultParameters($params);

    $q = $this->createQuery('news');

    $q->addWhere('news.is_active = ?', true);
    $q->addWhere('news.published_at < NOW()');

    return $q;
  }

  public function getQueryByFilter(array $filter, array $params = array())
  {
    $q = $this->createBaseQuery($params);

    $this->setQueryForFilter($q, $filter);

    $this->setQueryParameters($q, $params);

    return $q;
  }

  public function setQueryForFilter(myDoctrineQuery $q, array $filter, array $params = array())
  {
    $filter = myToolkit::arrayDeepMerge(array(
      'category'  => false,
      'year'      => false,
      'month'     => false,
    ), $filter);

    // категория
    if ($filter['category'])
    {
      $q->addWhere('news.category_id = ?', ($filter['category'] instanceof NewsCategory) ? $filter['category']->id : $filter['category']);
    }

    // год
    if ($filter['year'])
    {
      $q->addWhere('YEAR(news.published_at) = ?', array($filter['year'], ));
    }

    // месяц
    if ($filter['month'])
    {
      $q->addWhere('MONTH(news.published_at) = ?', array($filter['month'], ));
    }

  }

  public function getById($id, array $params = array())
  {
    $q = $this->createBaseQuery($params);
    $q->innerJoin('news.Category category');
    $this->setQueryParameters($q);

    $q->addWhere('news.id = ?', $id);

    $q->useResultCache(true, null, $this->getRecordQueryHash($id, $params));

    $record = $q->fetchOne();

    return $record;
  }

  public function getForRoute(array $params)
  {
    $id = isset($params['news']) ? $this->getIdBy('token', $params['news']) : null;

    if (!$id)
    {
      return null;
    }

    $record = $this->getById($id);
    if ($params['year'] != date_format(new DateTime($record->published_at), "Y")
      || $params['month'] != date_format(new DateTime($record->published_at), "m")
      || $params['newsCategory'] != $record->Category->token
      )
    {
      return null;
    }

    return $record;
  }

  public function getMonthsByCategory(NewsCategory $category, array $params = array())
  {
    $q = $this->createBaseQuery();
    $q->select('count(*) as c, YEAR(published_at) as y, MONTH(published_at) as m');
    $q->addWhere('news.category_id = ?', array($category->id, ));
    $q->groupBy('y, m');
    $q->orderBy('y, m');
    
    return $q->execute();
  }
}