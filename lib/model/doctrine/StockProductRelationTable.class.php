<?php

/**
 * StockProductRelationTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class StockProductRelationTable extends myDoctrineTable
{
  /**
   * Returns an instance of this class.
   *
   * @return object StockProductRelationTable
   */
  public static function getInstance()
  {
      return Doctrine_Core::getTable('StockProductRelation');
  }

  public function getCoreMapping()
  {
    return array(
      'id'          => 'core_id',
      'quantity'    => 'quantity',
      'is_supplier' => 'is_supplied',

      'product_id' => array('rel' => 'Product'),
      'store_id'   => array('rel' => 'Stock'),
      'shop_id'    => array('rel' => 'Shop'),
    );
  }

  public function getCacheEraserKeys(myDoctrineRecord $record, $action)
  {
    $return = array();

    $q = ProductTable::getInstance()->createQuery('product')
      ->select('product.core_id')
      ->innerJoin('product.StockRelation stockProductRelation')
      ->where('stockProductRelation.id = ?', $record->id)
      ->setHydrationMode(Doctrine_Core::HYDRATE_SINGLE_SCALAR)
    ;
    $ids = $q->execute();
    if (!is_array($ids))
    {
      $ids = array($ids);
    }

    foreach ($ids as $id)
    {
      $return[] = "product-{$id}";
    }

    return $return;
  }

}