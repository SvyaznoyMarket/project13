<?php

/**
 * ProductType
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class ProductType extends BaseProductType
{
  public function importFromCore(array $data)
  {
    parent::importFromCore($data);

    // группы тегов
    if (!empty($data['tag_group'])) foreach ($data['tag_group'] as $relationData)
    {
      $relation = new TagGroupProductTypeRelation();
      $relation->fromArray(array(
        //'product_type_id' => $this->id,
        'tag_group_id'    => TagGroupTable::getInstance()->getIdByCoreId($relationData['id']),
        'position'        => $relationData['position'],
      ));
      $this->TagGroupRelation[] = $relation;
    }

    // группы свойств товара
    if (!empty($data['property_group'])) foreach ($data['property_group'] as $relationData)
    {
      $relation = new ProductTypePropertyGroupRelation();
      $relation->fromArray(array(
        'product_type_id'   => $this->id,
        'property_group_id' => ProductPropertyGroupTable::getInstance()->getIdByCoreId($relationData['id']),
        'position'          => $relationData['position'],
      ));
      $this->PropertyGroupRelation[] = $relation;
    }

    // свойства товара
    if (!empty($data['property'])) foreach ($data['property'] as $relationData)
    {
      $relation = new ProductTypePropertyRelation();
      $relation->fromArray(array(
        'product_type_id' => $this->id,
        'property_id'    => ProductPropertyTable::getInstance()->getIdByCoreId($relationData['id']),
        'group_id'       => ProductPropertyGroupTable::getInstance()->getIdByCoreId($relationData['group_id']),
        'position'       => $relationData['position'],
        'group_position' => $relationData['group_position'],
        'view_show'      => true,
        'view_list'      => $relationData['is_view_list'],
      ));
      $this->PropertyRelation[] = $relation;
    }

    // фильтры категорий
    if (!empty($data['property'])) foreach ($data['property'] as $relationData)
    {
      if ($relationData['is_filter'] && !empty($data['category']))
      {
        foreach ($data['category'] as $categoryData)
        {
          $propertyId = ProductPropertyTable::getInstance()->getIdByCoreId($relationData['id']);
          $category = ProductCategoryTable::getInstance()->getByCoreId($categoryData['id']);
          if (!$category) continue;

          $groupId = isset($category->FilterGroup->id) ? $category->FilterGroup->id : null;
          if (!$groupId) continue;

          $filter = ProductFilterTable::getInstance()->createQuery()
            ->where('property_id = ? AND group_id = ?', array($propertyId, $groupId))
            ->fetchOne()
          ;
          if (!$filter)
          {
            $filter = new ProductFilter();
          }

          $filter->fromArray(array(
            'name'        => $relationData['name'],
            'type'        => (6 == $relationData['filter_type_id']) ? 'range' : 'choice',
            'property_id' => $propertyId,
            'group_id'    => $groupId,
            'position'    => $relationData['filter_position'],
            'is_multiple' => $relationData['is_multiple'],
          ));

          $filter->save();
        }
      }
    }
  }
}
