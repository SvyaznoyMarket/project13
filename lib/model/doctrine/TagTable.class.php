<?php

/**
 * TagTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class TagTable extends myDoctrineTable
{

  /**
   * Returns an instance of this class.
   *
   * @return TagTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('Tag');
  }

  public function getCoreMapping()
  {
    return array(
      'id'       => 'core_id',
      'name'     => 'name',
      'added'    => 'created_at',
    );
  }

  public function getDefaultParameters()
  {
    return array(
      'has_products' => false,
    );
  }

  public function createBaseQuery(array $params = array())
  {
    $this->applyDefaultParameters($params);

    $q = $this->createQuery('tag');

    if ($params['has_products'])
    {
      $q->innerJoin('tag.ProductRelation tagProductRelation')
        ->innerJoin('tagProductRelation.Product product WITH product.is_instock = 1')
      ;
    }

    return $q;
  }

  public function getByProduct($product_id, array $params = array())
  {
    // TODO: use cache with key = "product-{$product_id}/tag-all"

    $q = TagTable::getInstance()->createBaseQuery();
    $q->select('tag.*, count(productRelation.product_id) count')
      ->innerJoin('tag.ProductRelation productRelation')
      ->groupBy('productRelation.tag_id')
      ->having('tag.id IN (SELECT tagProductRelation.tag_id FROM TagProductRelation tagProductRelation WHERE tagProductRelation.product_id = ?)', $product_id)
      ->orderBy('count DESC')
    ;

    return $q->execute();
  }

}