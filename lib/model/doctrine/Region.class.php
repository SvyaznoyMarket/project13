<?php

/**
 * Region
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Region extends BaseRegion
{
  public function construct()
  {
    $this->mapValue('parent', null);
  }

  public function importFromCore(array $data)
  {
    parent::importFromCore($data);

    $this->product_price_list_id = ProductPriceListTable::getInstance()->getIdByCoreId($data['price_list_id']);
    $this->stock_id = StockTable::getInstance()->getIdByCoreId($data['store_id']);

    $this->token = empty($this->token) ? (uniqid().'-'.myToolkit::urlize($this->name)) : $this->token;
  }

  public function toParams()
  {
    return array(
      'region' => $this->token,
    );
  }

  public function getLinguisticCase($case = 'и', $field = 'name')
  {
    $cases = array(
      'и' => array(), // именительный
      'р' => array(), // родительный
      'д' => array(), // дательный
      'в' => array(), // винительный
      'т' => array(), // творительный
      'п' => array(   // предложный
        'Москва'          => 'Москве',
        'Санкт-Петербург' => 'Санкт-Петербурге',
      ),
    );

    $value = $this->get($field);

    return isset($cases[$case][$value]) ? $cases[$case][$value] : false;
  }

  public function getPrefix()
  {
    return in_array('city', $this->type) ? 'г.' : '';
  }

  public function isCity()
  {
    $return = false;

    foreach ($this->type as $type)
    {
      if ('city' == $type)
      {
        $return = true;
        break;
      }
    }

    return $return;
  }

  public function getParent(array $params = array())
  {
    return $this->getTable()->getParentRecord($this);
  }
}
