<?php

/**
 * User
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    enter
 * @subpackage model
 * @author     Связной Маркет
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class User extends BaseUser
{
  public function preSave($event)
  {
    parent::preSave($event); // important!

    $record = $event->getInvoker();

    if (empty($record->password) && !$record->exists())
    {
      $password = '';
      for ($i = 0; ($i < 8); $i++)
      {
        $password .= sprintf("%x", mt_rand(0, 15));
      }
      $this->setPassword($password);

      /*
      $this->dispatcher->notify(new myEvent($this, 'user.create', array(
        'record'   => $record,
        'password' => $password,
      )));
      */
    }
  }

  public function getProductRatingByProduct(Product $product)
  {
    $q = UserProductRatingTable::getInstance()->createBaseQuery();

    $q->addWhere('userProductRating.user_id = ? AND userProductRating.product_id = ?', array($this->id, $product->id));

    $userProductRatingList = $q->execute();
    $userProductRatingList->indexBy('property_id');

    $return = UserProductRatingTable::getInstance()->createList();

    $productRatingType = ProductRatingTypeTable::getInstance()->getById($product->Type->rating_type_id);
    foreach ($productRatingType->Property as $i => $productRatingTypeProperty)
    {
      if (!($userProductRating = $userProductRatingList->getByIndex('property_id', $productRatingTypeProperty->id)))
      {
        $userProductRating = new UserProductRating();
        $userProductRating->fromArray(array(
          'product_id' => $product->id,
          'user_id'    => $this->id,
          'position'   => $i,
        ));
      }

      $return[] = $userProductRating;
    }

    return $return;
  }

  public function getAddressList(array $params = array())
  {
    return UserAddressTable::getInstance()->getListByUser($this->id, $params);
  }

  public function getOrderList(array $params = array())
  {
    return OrderTable::getInstance()->getListByUser($this->id, $params);
  }

  public function exportToCore()
  {
    $data = parent::exportToCore();

    $data['sex'] = 0;

    return $data;
  }

  public function importFromCore(array $data)
  {
    parent::importFromCore($data);

    if ('0000-00-00' == $data['birthday'])
    {
      $this->birthday = null;
    }
  }

}
