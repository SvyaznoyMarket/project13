<!DOCTYPE html>
<link rel="stylesheet" href="./qunit.css">
<div data-value="{}" id="page-config"></div>
<h1 id="qunit-header">QUnit-based tests</h1>
<h2 id="qunit-banner"></h2>
<ol id="qunit-tests"></ol>

<script src="/js/tests/qunit.js"></script>
<script src="http://yandex.st/jquery/1.6.4/jquery.min.js"></script>
<script src="/js/loadjs.js"></script>
<script src="/js/prod/library.min.js"></script>
<script>

module('printPrice function')
test("pricing 1234", function() {
    equal( printPrice(1234) , "1 234")
    equal( printPrice(1234.3) , "1 234.3")
    equal( printPrice(1234.56) , "1 234.56")    
    equal( printPrice(12345) , "12 345")
    equal( printPrice(123456) , "123 456")
    equal( printPrice(1234567) , "1 234 567")
})

module('brwsr object')
test("brwsr object", function() {
	var br = new brwsr()
    equal( br.isAndroid , false, 'isAndroid')
    equal( br.isTouch , false, 'isTouch')
});

module('addParameterToUrl');
test("addParameterToUrl", function() {
	var urlWithoutParam = 'http://domen.ru/',
		urlWithParam ='http://domen.ru/?user=true';

	equal( urlWithoutParam.addParameterToUrl('user','true') , 'http://domen.ru/?user=true', 'http://domen.ru/?user=true');
	equal( urlWithParam.addParameterToUrl('someparametr','value') , 'http://domen.ru/?user=true&someparametr=value', 'http://domen.ru/?user=true&someparametr=value');
});

module('JSON object')
test("JSON", function(){
	var foo = {};  
	foo.bar = "new property";  
	foo.baz = 3;  	  
	var JSONfoo = JSON.stringify(foo);
	equal( JSONfoo, '{"bar":"new property","baz":3}', 'stringify');
	var backToJS = JSON.parse(JSONfoo);
	deepEqual( foo, backToJS, 'parse')
});

module('isEmail method')
test("isEmail", function(){
	equal( '123'.isEmail() , false, 'EMAIL is not email');
	equal( 'EMAIL@'.isEmail() , false, 'EMAIL@ is not email');
	equal( 'EMAIL@domen'.isEmail() , false, 'EMAIL@domen is not email');
	equal( 'EMAIL@domen.'.isEmail() , false, 'EMAIL@domen. is not email');
	equal( 'EMAIL@domen.ru'.isEmail() , true, 'EMAIL@domen.ru is email');
});



module('Cookie manager');
test("get-set", function() {
	docCookies.setItem( "test1", "Hello world!");
	docCookies.setItem( "test2", "Hello world!", new Date(2020, 5, 12));
	docCookies.setItem( "test3", "Hello world!", new Date(2027, 2, 3), "/hidden");
	docCookies.setItem( "test4", "Hello world!", "Sun, 06 Nov 2022 21:43:15 GMT");
	docCookies.setItem( "test5", "Hello world!", "Tue, 06 Dec 2022 13:11:07 GMT", "/hidden");
	docCookies.setItem( "test6", "Hello world!", 150);
	docCookies.setItem( "test7", "Hello world!", 245, "/hidden");
	docCookies.setItem( "test8", "Hello world!", null, null, "hidden.com");
	docCookies.setItem( "test9", "Hello world!", null, null, null, true);
	
	equal( docCookies.getItem("test1"), "Hello world!", 'value only');
	equal( docCookies.getItem("test2"), "Hello world!", 'expires date');
	equal( docCookies.getItem("test3"), null, 'expires date plus directory');
	equal( docCookies.getItem("test4"), "Hello world!", 'expires date in GMT');
	equal( docCookies.getItem("test5"), null, 'expires date in GMT plus directory');
	equal( docCookies.getItem("test6"), "Hello world!", 'expires date in secs')	;
	equal( docCookies.getItem("test7"), null, 'expires date in GMT plus directory');
	equal( docCookies.getItem("test8"), null, 'hidden domain');
	equal( docCookies.getItem("test9"), null, 'https protocol only');
});

</script>