
(function($){var
body=$('body'),bonusCard=$('.jsBonusCard'),data;var
cardChangeHandler=function cardChangeHandlerF(){var
newCardData,cardIndex,activeCard=$('.jsActiveCard'),activeCardNumber=$('.jsActiveCard .jsCardNumber'),activeCardDescription=$('.jsActiveCard .jsDescription');var
changeCardImage=function changeCardImageF(){if(!activeCard.length||!newCardData.hasOwnProperty('image')){return;}
activeCard.css('background','url('+newCardData.image+') 260px -3px no-repeat');},changeCardMask=function changeCardMaskF(){if(!activeCardNumber.length||!newCardData.hasOwnProperty('mask')){return;}
activeCardNumber.attr('placeholder',newCardData.mask);activeCardNumber.mask(newCardData.mask,{placeholder:'*'});},changeCardDescription=function changeCardDescriptionF(){if(!activeCardDescription.length||!newCardData.hasOwnProperty('description')){return;}
activeCardDescription.text(newCardData.description);},changeCardValue=function changeCardValueF(){if(!activeCardNumber.length||!newCardData.hasOwnProperty('value')){return;}
activeCardNumber.val(newCardData.value);};if(!activeCard.length){return;}
cardIndex=$('.jsBonusCard input[name="bonus_card"]').index(this);if(-1==cardIndex){return;}
if(!data.hasOwnProperty(cardIndex)){return;}
newCardData=data[cardIndex];console.info('cardChange');console.log(newCardData);changeCardValue();changeCardImage();changeCardMask();changeCardDescription();},setDefaults=function setDefaultsF(){var
activeCardNumber=$('.jsActiveCard .jsCardNumber');var
setMask=function setMaskF(){if(!data[0].hasOwnProperty('mask')){return;}
activeCardNumber.mask(data[0].mask,{placeholder:'*'});},setValue=function setValueF(){if(!data[0].hasOwnProperty('value')){return;}
activeCardNumber.val(data[0].value);};if(!activeCardNumber.length||!data||!data.hasOwnProperty(0)){return;}
console.info('setDefaults');console.log(data[0]);setValue();setMask();};if(!bonusCard.length){return;}
data=bonusCard.data('value');if(!data.length){return;}
console.groupCollapsed('BonusCard');$.mask.definitions['x']='[0-9]';setDefaults();body.on('change','.jsBonusCard input[name="bonus_card"]',cardChangeHandler);console.groupEnd();})(jQuery);
;(function(window,document,$,ENTER){var
utils=ENTER.utils,config=$('#page-config').data('value'),orderData=$('#jsOrderForm').data('value'),subwayArray=$('#metrostations').data('name'),data=$('#jsDeliveryAddress').data('value'),active=config?config.addressAutocomplete:false,token=null,key=null,limit=6,street=$('#order_address_street'),building=$('#order_address_building'),buildingAdd=$('#order_address_number'),metro=$('#order_address_metro'),metroIdFiled=$('#order_subway_id'),error,map=null,map_created=false,cityName=data?data.regionName:'',cityId,mapObj=$('#map'),currentAddr=null;var
getAddress=function(){var
zoom=12,address='',name,type,obj,value;name=$.trim(cityName);type='город';if(name){if(address){address+=', ';}
address+=type+' '+name;zoom=12;}
name=null;type=null;obj=street.kladr('current');value=$.trim(street.val());if(obj){name=obj.name;type=obj.type;}
else if(value){name=value;type='';}
if(name){if(address){address+=', ';}
address+=type+' '+name;zoom=14;}
name=null;type=null;obj=building.kladr('current');value=$.trim(building.val());if(obj){name=obj.name;type='дом';}
else if(value){name=value;type='дом';}
if(name){if(address){address+=', ';}
address+=type+' '+name;zoom=16;}
name=null;type=null;value=$.trim(buildingAdd.val());if(value){name=value;type='корпус';}
if(name){if(address){address+=', ';}
address+=type+' '+name;zoom=16;}
return{address:address,zoom:zoom};},mapUpdate=function(){var
geocode,position,latitude,longitude,addrData=getAddress();if(!addrData.address||!map_created){return;}
if(currentAddr===addrData.address){return;}
console.log(addrData.address);currentAddr=addrData.address;geocode=ymaps.geocode(addrData.address);geocode.then(function(res){position=res.geoObjects.get(0).geometry.getCoordinates();if(!position){return;}
latitude=position[0];longitude=position[1];map.points=[];map.mapWS.geoObjects.each(function(geoObject){map.mapWS.geoObjects.remove(geoObject);});map.points.push({latitude:latitude,longitude:longitude});map._showMarkers();map.mapWS.setCenter(position,addrData.zoom);if(metro.length){metroClosest(latitude,longitude);}});},metroClosest=function(latitude,longitude){var
myGeocoder,nearest,name;if(!metroIdFiled.length){return;}
myGeocoder=ymaps.geocode([latitude,longitude],{kind:'metro'});myGeocoder.then(function(res){nearest=res.geoObjects.get(0);name=nearest.properties.get('name');name=name.replace('метро ','');metro.val(name);metroIdFiled.val('');utils.orderValidator&&utils.orderValidator._unmarkFieldError(metro);if(subwayArray!==undefined){for(var i=subwayArray.length-1;i>=0;i--){if(name===subwayArray[i].label){metroIdFiled.val(subwayArray[i].val);break;}}}},function(err){console.warn('При выполнении запроса произошла ошибка: '+err);metro.val('');metroIdFiled.val('');utils.orderValidator&&utils.orderValidator._markFieldError(metro,"Не выбрана станция метро");});},showError=function(msg){error=$('ul.error_list');if(error.length){error.html('<li>'+msg+'</li>');}
else{$('#map').before($('<ul class="error_list" />').append('<li>'+msg+'</li>'));}
return false;},removeErrors=function(){error=$('ul.error_list');if(error.length){error.html('');}
return false;},setBuilding=function(value){if(''!==$.trim(value)){return;}
$.kladr.api({token:building.kladr('token'),key:building.kladr('key'),type:building.kladr('type'),name:value,parentType:building.kladr('parentType'),parentId:building.kladr('parentId'),limit:1},function(objs){if(!objs.length){return;}
removeErrors();building.kladr('current',objs[0]);});}
defaultValues=function(){if(''==$.trim(orderData['order[address_street]'])){return;}
$.kladr.api({token:token,key:key,type:$.kladr.type.street,name:orderData['order[address_street]'],parentType:$.kladr.type.city,parentId:cityId,limit:1},function(objs){if(!objs.length){return;}
removeErrors();street.kladr('current',objs[0]);building.kladr('parentType',$.kladr.type.street);building.kladr('parentId',objs[0].id);setBuilding(orderData['order[address_building]']);});},fieldsHandler={city:function(){if(!cityName){return null;}
$.kladr.api({token:token,key:key,type:$.kladr.type.city,name:cityName,limit:1},function(objs){if(!objs.length){console.log('КЛАДР не нашел город '+cityName);return;}
cityId=objs[0].id;fieldsHandler.street();fieldsHandler.building();fieldsHandler.buildingAdd();street.kladr('parentType',$.kladr.type.city);street.kladr('parentId',cityId);defaultValues();});},street:function(){street.kladr({token:token,key:key,type:$.kladr.type.street,verify:true,limit:limit,source:function(query){$.kladr.api({token:street.kladr('token'),key:street.kladr('key'),type:street.kladr('type'),name:query,parentType:street.kladr('parentType'),parentId:street.kladr('parentId'),limit:street.kladr('limit')},function(objs){var
items=[],i,obj;if(!objs.length){return;}
removeErrors();street.kladr('current',objs[0]);building.kladr('parentType',$.kladr.type.street);if(objs[0].id!==building.kladr('parentId')){building.kladr('parentId',objs[0].id);setBuilding(building.val());}
mapUpdate();if(1===objs.length){return;}
for(i in objs){obj=objs[i];obj.label=obj.type+' '+obj.name;obj.value=obj.name;items.push(obj);}
street.autocomplete({source:items,appendTo:'.jsInputStreet',minLength:2,select:function(event,ui){removeErrors();street.kladr('current',ui.item);building.kladr('parentType',$.kladr.type.street);if(ui.item.id!==building.kladr('parentId')){building.kladr('parentId',ui.item.id);setBuilding(building.val());}
mapUpdate();}});});}});},building:function(){building.kladr({token:token,key:key,type:$.kladr.type.building,verify:true,limit:limit,source:function(query){$.kladr.api({token:building.kladr('token'),key:building.kladr('key'),type:building.kladr('type'),name:query,parentType:building.kladr('parentType'),parentId:building.kladr('parentId'),limit:building.kladr('limit')},function(objs){var
items=[],i,obj;if(!objs.length){return;}
removeErrors();building.kladr('current',objs[0]);mapUpdate();if(1===objs.length){return;}
for(i in objs){obj=objs[i];obj.label=obj.name;items.push(obj);}
building.autocomplete({source:items,appendTo:'.jsInputBuilding',minLength:0,select:function(event,ui){removeErrors();building.kladr('current',ui.item);mapUpdate();}});});}});},buildingAdd:function(){buildingAdd.change(function(){mapUpdate();});}},fieldsInit=function(){fieldsHandler.city();},mapCreate=function(){var
cityGeocoder,position,addrData=getAddress();if(map_created||!mapObj.length){return;}
currentAddr=addrData.address;mapObj.show().width(477).height(350);map_created=true;cityGeocoder=ymaps.geocode(addrData.address);cityGeocoder.then(function(res){position=res.geoObjects.get(0).geometry.getCoordinates();map=new ENTER.constructors.CreateMap('map',[{latitude:position[0],longitude:position[1]}]);map.points=[];map.mapWS.geoObjects.each(function(geoObject){map.mapWS.geoObjects.remove(geoObject);});if(''!==$.trim(orderData['order[address_street]'])){map.points.push({latitude:position[0],longitude:position[1]});}
map._showMarkers();map.mapWS.setCenter(position,addrData.zoom);},function(err){console.log(err);showError('Не нашли ваш город на карте.');map=new ENTER.constructors.CreateMap('map',[{latitude:55.76,longitude:37.64}]);});};if(!active){return;}
if(data&&data.kladr){token=data.kladr.token?data.kladr.token:null;key=data.kladr.key?data.kladr.key:null;limit=data.kladr.itemLimit?data.kladr.itemLimit:6;}
fieldsInit();$('body').bind('orderdeliverychange',function(){ymaps.ready(mapCreate)});}(this,this.document,this.jQuery,this.ENTER));
;(function(window,document,$,ENTER,ko){var
constructors=ENTER.constructors,utils=ENTER.utils,OrderModel,pageConfig=ENTER.config.pageConfig,prepayment=pageConfig.prepayment,$body=$(document.body);console.info('deliveryBox.js init');console.log(ENTER.OrderModel);constructors.DeliveryBox=(function(){'use strict';function DeliveryBox(products,state,choosenPointForBox){if(!(this instanceof DeliveryBox)){return new DeliveryBox(products,state,choosenPointForBox);}
console.info('Cоздание блока доставки %s (state) для %s (choosenPointForBox)',state,choosenPointForBox,this);OrderModel=ENTER.OrderModel;var
self=this;self.isUnique=OrderModel.orderDictionary.isUniqueDeliveryState(state);self.token=state+'_'+choosenPointForBox;self.products=[];self.fullPrice=ko.observable(0);self.totalBlockSum=0;self.state=state;self.deliveryName=OrderModel.orderDictionary.getNameOfState(state);self.deliveryPrice=Number.NEGATIVE_INFINITY;self.choosenDate=ko.observable();self.choosenNameOfWeek=ko.observable();self.choosenPoint=ko.observable({id:choosenPointForBox});self.choosenInterval=ko.observable();self.showPopupWithPoints=ko.observable(false);self.hasPointDelivery=OrderModel.orderDictionary.hasPointDelivery(state);self.isExpensiveOrder=ko.computed(function(){if(prepayment.enabled){return prepayment.priceLimit<=(parseInt(self.fullPrice(),10)+parseInt(self.deliveryPrice,10))?true:false;}else return false;});self.hasProductWithPrepayment=false;self.allDatesForBlock=ko.observableArray([]);self.pointList=[];self.changePointButtonText=OrderModel.orderDictionary.getChangeButtonText(state);if(self.hasPointDelivery&&!OrderModel.orderDictionary.getPointByStateAndId(self.state,choosenPointForBox)){console.info('есть точки доставки для выбранного метода доставки, но выбранная точка не доступна для этого метода доставки. Берем первую точку для выбранного метода доставки');self.choosenPoint(OrderModel.orderDictionary.getFirstPointByState(self.state));}
else if(self.hasPointDelivery){console.info('есть точки доставки для выбранного метода доставки, и выбранная точка доступна для этого метода доставки');self.choosenPoint(OrderModel.orderDictionary.getPointByStateAndId(self.state,choosenPointForBox));}
else{console.info('для выбранного метода доставки не нужна точка доставки');OrderModel.hasHomeDelivery(true);$('body').trigger('orderdeliverychange',[true]);}
self.calendarSliderLeft=ko.observable(0);try{console.groupCollapsed('Таблица продуктов для блока %s',self.token);var consoleProducts=[];for(var a in products){var temp=products[a],chPoint=Object.keys(products[a].deliveries[self.state])[0];temp.choosenPoint=chPoint;temp.deliveries_types=JSON.stringify(Object.keys(products[a].deliveries));temp.firstDate=products[a].deliveries[self.state][chPoint].dates[0].name;temp.lastDate=products[a].deliveries[self.state][chPoint].dates[products[a].deliveries[self.state][chPoint].dates.length-1].name;consoleProducts.push(temp);}
console.table(consoleProducts,['id','name','price','sum','quantity','stock','isPrepayment','choosenPoint','deliveries_types','firstDate','lastDate']);}catch(e){console.debug('Delivery\'s box self.state: %s, self.choosenPoint.id: %s',self.state,self.choosenPoint().id);console.debug('Products',products);console.error(e);}finally{console.groupEnd();}
self.addProductGroup(products);if(self.products.length===0){console.warn('в блоке '+self.token+' не осталось товаров');return;}
OrderModel.deliveryBoxes.push(self);}
DeliveryBox.prototype._makePointList=function(){console.info('Создание списка точек доставки');var
self=this,res=true,tmpPoint=null,point,i,j;for(point in self.products[0].deliveries[self.state]){for(i=self.products.length-1;i>=0;i--){res=self.products[i].deliveries[self.state].hasOwnProperty(point);if(!res){break;}}
if(res){tmpPoint=OrderModel.orderDictionary.getPointByStateAndId(self.state,point);if(self.isUniquePointIdInPointList(point,self.pointList)){console.warn('Add point '+point+' to pointList');self.pointList.push(tmpPoint);}}
else{for(j in self.pointList){if(undefined===self.pointList[j]['id'])continue;if(point===self.pointList[j]['id']){console.warn('Delete point '+point+' from pointList');self.pointList.splice(j);}}}}
console.log('Точки доставки созданы');console.log(self.pointList);};DeliveryBox.prototype.isUniquePointIdInPointList=function(pointId,pointList){var
defaultValue=true,point;if(undefined===pointId||undefined===pointList){return defaultValue;}
for(point in pointList){if(pointList[point]['id']==pointId){return false;}}
return true;}
DeliveryBox.prototype.addUniqueSuffix=function(str){var
randSuff;str=str||'';randSuff=Math.floor((Math.random()*10000)+1);str+='_'+randSuff;return str;};DeliveryBox.prototype.selectPoint=function(data){var self=this,newToken=self.state+'_'+data.id,choosenBlock=null,productIds=[],i;if(OrderModel.hasDeliveryBox(newToken)){for(i=self.products.length-1;i>=0;i--){self.products[i].id&&productIds.push(self.products[i].id);}
if(!self._hasProductsAlreadyAdded(productIds)){choosenBlock=OrderModel.getDeliveryBoxByToken(newToken);choosenBlock.addProductGroup(self.products);OrderModel.removeDeliveryBox(self.token);}}
else{if(self.isUnique){newToken+=self.addUniqueSuffix();}
console.info('удаляем старый блок');console.log('старый токен '+self.token);console.log('новый токен '+newToken);self.token=newToken;self.choosenPoint(OrderModel.orderDictionary.getPointByStateAndId(self.state,data.id));ENTER.OrderModel.choosenPoint(data.id);choosenBlock=OrderModel.getDeliveryBoxByToken(newToken);choosenBlock.allDatesForBlock([]);choosenBlock.calculateDate();console.log(OrderModel.deliveryBoxes());if(OrderModel.paypalECS()){console.info('PayPal ECS включен. Необходимо сохранить выбранную точку доставки в cookie');window.docCookies.setItem('chPoint_paypalECS',data.id,10*60);}}
OrderModel.showPopupWithPoints(false);return false;};DeliveryBox.prototype.changePoint=function(){var
self=this,i;for(i=self.pointList.length-1;i>=0;i--){self.pointList[i].parentBoxToken=self.token;}
OrderModel.popupWithPoints({header:'Выберите точку доставки',points:self.pointList});OrderModel.showPopupWithPoints(true);return false;};DeliveryBox.prototype._getFirstPropertyName=function(obj){for(var i in obj){return i;}};DeliveryBox.prototype._addProduct=function(product){var self=this,productDeliveryPrice=null,token=null,firstAvaliblePoint=null,tempProductArray=[],nowTotalSum,deletedBlock,newState,choosenBlock=null,tmpProduct={};if(self._hasProductsAlreadyAdded([product.id])){return;}
if(!product.deliveries[self.state].hasOwnProperty(self.choosenPoint().id)&&!/_shipped$/.test(self.token)){console.warn('Для товара '+product.id+' нет пункта доставки '+self.choosenPoint().id+' Необходимо создать новый блок');firstAvaliblePoint=self._getFirstPropertyName(product.deliveries[self.state]);token=self.state+'_'+firstAvaliblePoint;tempProductArray.push(product);if(OrderModel.hasDeliveryBox(token)){console.log('Блок для этого типа доставки в этот пункт уже существует. Добавляем продукт в блок',token);choosenBlock=OrderModel.getDeliveryBoxByToken(token);deletedBlock=OrderModel.removeDeliveryBox(token);nowTotalSum=OrderModel.totalSum()-deletedBlock.fullPrice()-choosenBlock.deliveryPrice;OrderModel.totalSum(nowTotalSum);choosenBlock.addProductGroup(tempProductArray);OrderModel.deliveryBoxes.push(choosenBlock);}
else{new DeliveryBox(tempProductArray,self.state,firstAvaliblePoint);}
return;}
if(/_shipped$/.test(self.token))self.choosenPoint({id:0});productDeliveryPrice=parseInt(product.deliveries[self.state][self.choosenPoint().id].price,10);self.deliveryPrice=(self.deliveryPrice<productDeliveryPrice)?productDeliveryPrice:self.deliveryPrice;tmpProduct={id:product.id,name:product.name,price:(product.sum)?product.sum:product.price,quantity:product.quantity,stock:product.stock,deleteUrl:product.deleteUrl,setUrl:product.setUrl,productUrl:product.url,productImg:(product.image)?product.image:product.productImg,deliveries:{},isPrepayment:product.isPrepayment};if(self.isUnique&&(product.oldQuantity-1)>0){console.log('Переделываем deleteUrl:');console.log(tmpProduct.deleteUrl);tmpProduct.deleteUrl=tmpProduct.deleteUrl.replace('delete-','add-');tmpProduct.deleteUrl+='?quantity='+(product.oldQuantity-1);console.log(tmpProduct.deleteUrl);}
if(tmpProduct.isPrepayment){self.hasProductWithPrepayment=true;}
tmpProduct.deliveries[self.state]=product.deliveries[self.state];self.fullPrice(ENTER.utils.numMethods.sumDecimal(tmpProduct.price,self.fullPrice()));self.products.push(tmpProduct);};DeliveryBox.prototype._hasProductsAlreadyAdded=function(ids){var
self=this,exist=false,i;if(ids===undefined||!ids.length){return exist;}
for(i=self.products.length-1;i>=0;i--){if(-1!==$.inArray(self.products[i].id,ids)){exist=true;}}
return exist;};DeliveryBox.prototype.updateTotalPrice=function(){console.info('Перерасчет общей стоимости заказа');var self=this,nowTotalSum=OrderModel.totalSum();self.totalBlockSum=ENTER.utils.numMethods.sumDecimal(self.fullPrice(),self.deliveryPrice);nowTotalSum=ENTER.utils.numMethods.sumDecimal(self.totalBlockSum,nowTotalSum);OrderModel.totalSum(nowTotalSum);console.log(OrderModel.totalSum());};DeliveryBox.prototype.addProductGroup=function(products){var
self=this,shipped=[],i;console.groupCollapsed('Добавление товаров в блок, количество товаров: %s',products.length);if(!/_shipped$/.test(self.token)){for(i=products.length-1;i>=0;i--){console.log(i+'-ый товар: ',products[i]);if(products[i].stock!=9223372036854776000)self._addProduct(products[i]);else shipped.push(products[i]);}}
if(/_shipped$/.test(self.token)){for(i=products.length-1;i>=0;i--){console.log(i+'-ый товар: ',products[i]);self._addProduct(products[i]);}}
console.groupEnd();if(shipped.length&&!/_shipped$/.test(self.token))new DeliveryBox(shipped,self.state,'shipped');if(!self.products.length){console.warn('в блоке '+self.token+' нет товаров');return;}
self.calculateDate();self.updateTotalPrice();if(self.hasPointDelivery){console.info('У товара есть точки доставки. Создаем список точек доставки');self._makePointList();}};DeliveryBox.prototype._getNameDayOfWeek=function(dayOfWeek){var
days=['Вс','Пн','Вт','Ср','Чт','Пт','Сб'];return days[dayOfWeek];};DeliveryBox.prototype._getFullNameDayOfWeek=function(dayOfWeek){var
days=['воскресенье','понедельник','вторник','среда','четверг','пятница','суббота'];return days[dayOfWeek];};DeliveryBox.prototype._hasDateInAllProducts=function(checkTS){var
self=this,nowProductDates=null,nowTS=null,res=true,len,i,j;for(i=0;i<self.products.length;i++){nowProductDates=self.products[i].deliveries[self.state][self.choosenPoint().id].dates;for(j=0,len=nowProductDates.length;j<len;j++){nowTS=nowProductDates[j].value;if(nowTS===checkTS){res=true;break;}
else{res=false;}}
if(!res){break;}}
return res;};DeliveryBox.prototype.clickCalendarDay=function(data){var
self=this,oldDate=self.choosenDate(),daysDiff;if(!data.avalible){return false;}
try{daysDiff=(data.value-oldDate.value)/(24*60*60*1000);$body.trigger('trackUserAction',['1_4_1 Смена даты',daysDiff]);}catch(e){console.error(e);}
if(OrderModel.paypalECS()){console.info('PayPal ECS включен. Необходимо сохранить выбранную дату в cookie');window.docCookies.setItem('chDate_paypalECS',JSON.stringify(data),10*60);}
self.choosenNameOfWeek(self._getFullNameDayOfWeek(data.dayOfWeek));self.choosenDate(data);};DeliveryBox.prototype._hasDateInAllDatesForBlock=function(date){for(var i=0;i<this.allDatesForBlock().length;i++){if(this.allDatesForBlock()[i].value===date.value){return true}}
return false;};DeliveryBox.prototype.calculateDate=function(){console.info('Вычисление общей даты для продуктов в блоке',this);var
self=this,todayTS=OrderModel.orderDictionary.getToday(),nowProductDates=null,nowTS=null,newToken='',tempProduct=null,tempDate=null,tempProductArray=[],dateFromCookie=null,chooseDate=null,len,j,i;if(!self.products.length){console.warn('Нет продуктов для этого блока, выходим из calculateDate()');return;}
console.log('Сегодняшняя дата с сервера '+todayTS);if(/_shipped$/.test(self.token))self.choosenPoint({id:0});nowProductDates=self.products[0].deliveries[self.state][self.choosenPoint().id].dates;for(i=0,len=nowProductDates.length;i<len;i++){nowTS=nowProductDates[i].value;if(self._hasDateInAllProducts(nowTS)&&nowTS>=todayTS&&!self._hasDateInAllDatesForBlock(nowProductDates[i])){nowProductDates[i].avalible=true;nowProductDates[i].humanDayOfWeek=self._getNameDayOfWeek(nowProductDates[i].dayOfWeek);self.allDatesForBlock().push(nowProductDates[i]);}}
if(!self.allDatesForBlock().length){console.warn('Нет общих дат для блока. Необходимо разделить продукты в блоке.');console.info('Выделяем в отдельный блок товары от поставщика');var shipperProductArray=[];shipperProductArray=self.products.reduceRight(function(previousValue,currentValue,index,arr){if(9223372036854776000==currentValue.stock){arr.splice(index,1);previousValue.push(currentValue);self.fullPrice(ENTER.utils.numMethods.sumDecimal(self.fullPrice(),-currentValue.price));}
return previousValue;},[]);console.log('Количество товаров от поставщика = %s',shipperProductArray.length);if(shipperProductArray.length){new DeliveryBox(shipperProductArray,self.state,self.choosenPoint().id);}
tempProductArray=self.products.reduceRight(function(previousValue,currentValue,index,arr){var currFirstDate=currentValue.deliveries[self.state][self.choosenPoint().id].dates[0].value;if(tempDate===null)tempDate=currFirstDate;if(tempDate==currFirstDate){arr.splice(index,1);previousValue.push(currentValue);self.fullPrice(ENTER.utils.numMethods.sumDecimal(self.fullPrice(),-currentValue.price));}
return previousValue;},[]);console.log('Продукты в новом блоке:',tempProductArray);newToken=self.state+'_'+self.choosenPoint().id+'_'+self.addUniqueSuffix();console.log('новый токен '+newToken);console.log(self);new DeliveryBox(tempProductArray,self.state,self.choosenPoint().id);self.calculateDate();}
if(OrderModel.paypalECS()&&window.docCookies.hasItem('chDate_paypalECS')){console.info('PayPal ECS включен. Необходимо взять выбранную дату из cookie');dateFromCookie=window.docCookies.getItem('chDate_paypalECS');chooseDate=JSON.parse(dateFromCookie);}
else{chooseDate=self.getFirstAvalibleDate();}
console.log('Выбранная дата (chooseDate) ',chooseDate);console.log('Все даты для блока ',self.allDatesForBlock());if(chooseDate&&true===chooseDate.avalible){self.choosenDate(chooseDate);}
else{console.warn('Блок недоступен. Вычисление общей даты для продуктов в блоке невозможно. Выходим.');return false;}
if(undefined===typeof(self.choosenDate().intervals)){console.warn('В блоке нет интервалов. Вычисление даты невозможно. Выходим.');return false;}
self.choosenNameOfWeek(self._getFullNameDayOfWeek(self.choosenDate().dayOfWeek));if(self.choosenDate().intervals.length!==0){self.choosenInterval(self.choosenDate().intervals[0]);}
self.makeCalendar();};DeliveryBox.prototype.getFirstAvalibleDate=function(){var
self=this,i;for(i=0;i<self.allDatesForBlock().length;i++){if(self.allDatesForBlock()[i].avalible){return self.allDatesForBlock()[i];}}
return false;};DeliveryBox.prototype.makeCalendar=function(){console.groupCollapsed('Создание календаря, округление до целых недель');console.log(this);var
self=this,addCountDays=0,tmpDay={},tmpVal=null,tmpDate=null,ONE_DAY=24*60*60*1000,i,j,k;console.info(self.allDatesForBlock());for(k=0;k<self.allDatesForBlock().length;k++){console.log('k',k);if(self.allDatesForBlock()[k+1]===undefined){console.info('Следущая дата последняя. заканчиваем цикл');break;}
if(k>99){break;}
tmpDay={};tmpVal=self.allDatesForBlock()[k].value+ONE_DAY;tmpDate=new Date(tmpVal);if(tmpVal>self.allDatesForBlock()[k+1].value){console.warn('однозначная ошибка, следующая дата меньше текущей');break;}
if(tmpVal!==self.allDatesForBlock()[k+1].value){console.info('следующая дата',self.allDatesForBlock()[k+1].value);console.info('текущая дата',tmpVal,tmpDate);tmpDay={value:tmpVal,avalible:false,humanDayOfWeek:self._getNameDayOfWeek(tmpDate.getDay()),dayOfWeek:tmpDate.getDay(),day:tmpDate.getDate()};console.log('предыдущая дата была '+new Date(self.allDatesForBlock()[k].value).getDate()+' новая дата вклинилась '+tmpDate.getDate()+' следущая дата '+new Date(self.allDatesForBlock()[k+1].value).getDate());self.allDatesForBlock.splice(k+1,0,tmpDay);}}
if(self.allDatesForBlock()[0].dayOfWeek!==1){addCountDays=(self.allDatesForBlock()[0].dayOfWeek===0)?6:self.allDatesForBlock()[0].dayOfWeek-1;tmpVal=self.allDatesForBlock()[0].value;console.info('добавляем в начало',addCountDays);for(i=addCountDays;i>0;i--){tmpVal-=ONE_DAY;tmpDate=new Date(tmpVal);tmpDay={value:tmpVal,avalible:false,humanDayOfWeek:self._getNameDayOfWeek(tmpDate.getDay()),dayOfWeek:tmpDate.getDay(),day:tmpDate.getDate()};self.allDatesForBlock.unshift(tmpDay);}}
if(self.allDatesForBlock()[self.allDatesForBlock().length-1].dayOfWeek!==0){addCountDays=7-self.allDatesForBlock()[self.allDatesForBlock().length-1].dayOfWeek;tmpVal=self.allDatesForBlock()[self.allDatesForBlock().length-1].value;console.info('добавляем в конец',addCountDays);for(j=addCountDays;j>0;j--){tmpVal+=ONE_DAY;tmpDate=new Date(tmpVal);tmpDay={value:tmpVal,avalible:false,humanDayOfWeek:self._getNameDayOfWeek(tmpDate.getDay()),dayOfWeek:tmpDate.getDay(),day:tmpDate.getDate()};self.allDatesForBlock.push(tmpDay);}}
console.groupEnd();};DeliveryBox.prototype.calendarLeftBtn=function(){var
self=this,nowLeft=parseInt(self.calendarSliderLeft(),10);nowLeft+=380;self.calendarSliderLeft(nowLeft);};DeliveryBox.prototype.calendarRightBtn=function(){var
self=this,nowLeft=parseInt(self.calendarSliderLeft(),10);nowLeft-=380;self.calendarSliderLeft(nowLeft);};return DeliveryBox;}());}(this,this.document,this.jQuery,this.ENTER,this.ko));
;(function(window){console.info('orderCredit.js init...');var
bankWrap=$('div.bBankWrap'),creditInit=function creditInit(){var
bankField=$('#selectedBank'),selectBank=function selectBank(){var
checked=$('input:checked',bankWrap),chosenBankId=checked.val();console.log('selectBank with ID',chosenBankId);if('undefined'!==chosenBankId){$('.bSelectInput',bankWrap).addClass('bUnchecked');checked.closest('.bSelectInput',bankWrap).removeClass('bUnchecked');bankField.val(chosenBankId);}};bankWrap.change(selectBank);if(typeof(window.DirectCredit)&&'function'===typeof(window.DirectCredit.init)){window.DirectCredit.init($('#jsCreditBank').data('value'),$('.credit_pay'));}};if(bankWrap.length){creditInit();}}(this));
;(function(window,document,$,ENTER){console.info('orderDictionary.js init...');var
constructors=ENTER.constructors;constructors.OrderDictionary=(function(){'use strict';function OrderDictionary(orderData){if(!(this instanceof OrderDictionary)){return new OrderDictionary(orderData);}
this.orderData=orderData;this.serverTime=this.orderData.time;this.deliveryTypes=this.orderData.deliveryTypes;this.deliveryStates=this.orderData.deliveryStates;this.pointsByDelivery=this.orderData.pointsByDelivery;this.products=this.orderData.products;this.defPoints=this.orderData.defPoints||{};console.debug('OrderDictionary',this);}
OrderDictionary.prototype.getNameOfState=function(state){if(!this.hasDeliveryState(state)){console.warn('Не найден метод доставки '+state);return false;}
return this.deliveryStates[state].name;};OrderDictionary.prototype.getToday=function(){return this.serverTime;};OrderDictionary.prototype.getDefaultPointId=function(token){return this.defPoints.hasOwnProperty(token)?this.defPoints[token]:0;};OrderDictionary.prototype.hasDeliveryState=function(state){return this.deliveryStates.hasOwnProperty(state);};OrderDictionary.prototype.isUniqueDeliveryState=function(state){var
st;if(this.hasDeliveryState(state)){st=this.deliveryStates[state];return st['unique'];}
return false;};OrderDictionary.prototype.hasPointDelivery=function(state){if(!this.hasDeliveryState(state)){return false;}
return this.pointsByDelivery.hasOwnProperty(state);};OrderDictionary.prototype.getPointByStateAndId=function(state,pointId){var
points=this.getAllPointsByState(state),i;pointId=pointId+'';for(i=points.length-1;i>=0;i--){if(points[i].id===pointId){return window.ENTER.utils.cloneObject(points[i]);}}
return false;};OrderDictionary.prototype.getFirstPointByState=function(state){var
points=this.getAllPointsByState(state);return(points[0])?ENTER.utils.cloneObject(points[0]):false;};OrderDictionary.prototype.getAllPointsByState=function(state){if(!this.hasDeliveryState(state)){return false;}
var
point=this.pointsByDelivery[state],pointName=point?point.token:false,ret=pointName?this.orderData[pointName]:false,retNew=[],i,type;if(state=="now"||state=="self"||state=='self_svyaznoy'){for(i in ret){for(type in ret[i].products){type==state&&retNew.push(ret[i]);}}
ret=retNew;}
return ret||false;};OrderDictionary.prototype.getChangeButtonText=function(state){var
text=(this.pointsByDelivery[state])?this.pointsByDelivery[state].changeName:'Сменить';return text;};OrderDictionary.prototype.getProductFromState=function(state){if(!this.hasDeliveryState(state)){console.warn('Не найден метод доставки '+state);return false;}
return this.deliveryStates[state].products;};OrderDictionary.prototype.getProductById=function(productId){if(!this.products.hasOwnProperty(productId)){console.warn('Такого продукта не найдено');return false;}
return this.products[productId];};OrderDictionary.prototype.getStateToProductByDeliveryID=function(productId,pointId){console.info('Перебираем все методы доставок и ищем среди них со схожим типом точек доставок');var
productDeliveries=this.products[productId].deliveries,deliveriesType;console.log('productId '+productId);console.log('pointId '+pointId);console.log(productDeliveries);for(deliveriesType in productDeliveries){console.log('ищем в '+deliveriesType);if(productDeliveries.hasOwnProperty(deliveriesType)&&productDeliveries[deliveriesType].hasOwnProperty(pointId)){console.log('возвращаем '+deliveriesType);return deliveriesType;}}
console.warn('не нашли...((');return false;};return OrderDictionary;}());}(this,this.document,this.jQuery,this.ENTER));
;(function(window){console.info('orderSertificate init...');if(!$('#paymentMethod-10').length){console.warn('нет метода оплаты сертификатом');return false;}
var
sertificateWrap=$('#paymentMethod-10').parent(),code=sertificateWrap.find('.mCardNumber'),pin=sertificateWrap.find('.mCardPin'),fieldsWrap=sertificateWrap.find('.bPayMethodAction'),urlCheck=fieldsWrap.attr('data-url');var SertificateCard=(function(){var
checked=false,processTmpl='processBlock';var
getCode=function getCode(){return code.val().replace(/[^0-9]/g,'');},getPIN=function getPIN(){return pin.val().replace(/[^0-9]/g,'');},getParams=function getParams(){return{code:getCode(),pin:getPIN()};},isActive=function isActive(){if(checked&&getCode()!==''&&getCode().length===14&&getPIN()!==''&&getPIN().length===4){return true;}
return false;},checkCard=function checkCard(){if(pin.val().length!==4){console.warn('пин код мал');return false;}
if(!code.val().length){console.warn('номер карты не введен');return false;}
setProcessingStatus('mOrange','Проверка по номеру карты');$.post(urlCheck,getParams(),function(data){if(!('success'in data)){return false;}
if(!data.success){var err=(typeof(data.error)!=='undefined')?data.error:'ERROR';setProcessingStatus('mRed',err);return false;}
setProcessingStatus('mGreen',data.data);});},setProcessingStatus=function setProcessingStatus(status,data){console.info('setProcessingStatus');var
blockProcess=$('.process').first(),options={typeNum:status};if(!blockProcess.hasClass('picked')){blockProcess.remove();}
switch(status){case'mOrange':options.text=data;checked=false;break;case'mRed':options.text='Произошла ошибка: '+data;checked=false;break;case'mGreen':if('activated'in data){options.text='Карта '+data.code+' на сумму '+data.sum+' активирована!';}
else{options.text='Карта '+data.code+' имеет номинал '+data.sum;}
checked=true;break;}
fieldsWrap.after(tmpl(processTmpl,options));if(typeof data['activated']!=='undefined'){$('.process').first().addClass('picked');}};return{checkCard:checkCard,setProcessingStatus:setProcessingStatus,isActive:isActive,getCode:getCode,getPIN:getPIN};})();code.bind('change',function(){SertificateCard.checkCard();});pin.bind('change',function(){SertificateCard.checkCard();});$.mask.definitions['n']='[0-9]';pin.mask('nnnn',{completed:SertificateCard.checkCard,placeholder:'*'});}(this));
;(function(){var
w=window,_gaq=w._gaq||[],ga=w[w['GoogleAnalyticsObject']],$=w.jQuery,body=$(document.body),region=$('#jsDeliveryAddress').data('value')['regionName'],sendAnalytic=function sendAnalyticF(event,step,action){var act=action||'',st=step||'';if(event&&event.data){if(event.data.step)st=event.data.step;if(event.data.action)act=event.data.action;}
if(typeof ga==='undefined')ga=window[window['GoogleAnalyticsObject']];if(typeof _gaq==='object')_gaq.push(['_trackEvent','воронка_'+region,st,act]);if(typeof ga==='function')ga('send','event','воронка_'+region,st,act);console.log('[Google Analytics] Step "%s" sended with action "%s" for воронка_%s',st,act,region);};console.log('[Init] Google Analytics Tracking');body.on('trackUserAction.orderTracking',sendAnalytic);body.on('click.orderTracking','a.bBackCart',function(e){if($(e.target).hasClass('mOrdeRead'))body.trigger('trackUserAction',['3 Редактировать товары']);else body.trigger('trackUserAction',['1_3 Доставка, ушел в корзину']);});body.on('click.orderTracking','a#auth-link',{step:'4_0 Авторизация'},sendAnalytic);body.on('focusin.orderTracking',function(e){var $target=$(e.target);switch($target.attr('id')){case'order_recipient_first_name':body.trigger('trackUserAction',['4_1 Имя']);break;case'order_recipient_last_name':body.trigger('trackUserAction',['4_2 Фамилия']);break;case'order_recipient_email':body.trigger('trackUserAction',['4_3 Email']);break;case'order_recipient_phonenumbers':body.trigger('trackUserAction',['4_4 телефон']);for(var i in ENTER.OrderModel.deliveryBoxes()){if(/standart/.test(ENTER.OrderModel.deliveryBoxes()[i].state)){body.trigger('trackUserAction',['4_5_1 ЛД Доставка - Адрес']);break;}}
break;case'order_address_street':body.trigger('trackUserAction',['4_5_2 ЛД Доставка - Улица']);break;case'order_address_building':body.trigger('trackUserAction',['4_5_3 ЛД Доставка - Дом']);break;case'order_address_metro':body.trigger('trackUserAction',['4_5_4 ЛД Доставка - Метро']);break;case'bonus-card-number':body.trigger('trackUserAction',['5 Связной-клуб']);break;}});body.on('click.orderTracking','.mPayMethods .bCustomLabel',function(e){body.trigger('trackUserAction',['6 Тип оплаты',$(e.target).text()]);});body.on('click.orderTracking','.mRules .bCustomLabel',function(e){var $target=$(e.target);if($target.hasClass('bCustomLabel'))body.trigger('trackUserAction',['7 Согласие']);if($target.attr('href')=='/terms')body.trigger('trackUserAction',['7_1 Условия']);if($target.attr('href')=='/legal')body.trigger('trackUserAction',['7_2 Право']);});body.on('focus','select.bSelect',function(){var oldIndex=$(this).prop('selectedIndex');$(this).off('blur').on('blur',function(){var diff=oldIndex-$(this).prop('selectedIndex');if(diff==0)body.trigger('trackUserAction',['1_4_2 Смена времени','оставил']);else body.trigger('trackUserAction',['1_4_2 Смена времени','сменил']);})});body.trigger('trackUserAction',['0 Вход'])})();
;(function(window,document,$,ENTER){console.info('orderValidation.js init');var
utils=ENTER.utils,orderValidator={},subwayArray=$('#metrostations').data('name'),firstNameField=$('#order_recipient_first_name'),lastNameField=$('#order_recipient_last_name'),emailField=$('#order_recipient_email'),phoneField=$('#order_recipient_phonenumbers'),subwayField=$('#order_address_metro'),metroIdFiled=$('#order_subway_id'),streetField=$('#order_address_street'),buildingField=$('#order_address_building'),bonusCardNumber=$('#bonus-card-number'),paymentRadio=$('.jsCustomRadio[name="order[payment_method_id]"]'),qiwiPhone=$('#qiwi-phone'),orderAgreed=$('#order_agreed'),orderCompleteBtn=$('#completeOrder'),ajaxStart=null,ajaxStop=null,ajaxDelta=null,validationConfig={fields:[{fieldNode:firstNameField,require:true,customErr:'Введите имя получателя',validateOnChange:true},{fieldNode:emailField,validBy:'isEmail',customErr:'Некорректно введен e-mail',validateOnChange:true},{fieldNode:phoneField,require:true,customErr:'Некорректно введен телефон',validateOnChange:true},{fieldNode:orderAgreed,require:true,customErr:'Необходимо согласие'},{fieldNode:bonusCardNumber,customErr:'Некорректно введен номер карты лояльности'}]},subwayAutocompleteConfig={source:subwayArray,appendTo:'#metrostations',minLength:2,select:function(event,ui){metroIdFiled.val(ui.item.val);}};console.log(ENTER.OrderModel);console.log('orderValidation:: vars initd');orderValidator=new FormValidator(validationConfig);utils.orderValidator=orderValidator;var
showError=function showError(msg,callback){var
content='<div class="popupbox width290">'+'<div class="font18 pb18"> '+msg+'</div>'+'</div>'+'<p style="text-align:center"><a href="#" class="closePopup bBigOrangeButton">OK</a></p>',block=$('<div>').addClass('popup').html(content);block.appendTo('body');var
errorPopupCloser=function(){block.trigger('close');block.remove();if(callback!==undefined){callback();}
return false;};block.lightbox_me({centered:true,onClose:errorPopupCloser});block.find('.closePopup').bind('click',errorPopupCloser);},formErrorHandler=function formErrorHandler(formError){console.warn('Ошибка в поле');var field=$('[name="order['+formError.field+']"]');var clearError=function clearError(){orderValidator._unmarkFieldError($(this));};orderValidator._markFieldError(field,formError.message);field.bind('focus',clearError);},serverErrorHandler={'default':function(res){console.log('Обработчик ошибки');if('undefined'===typeof(res.redirect)){res.redirect='/cart';}
if(res.error&&res.error.message){showError(res.error.message,function(){if(0!==res.redirect){document.location.href=res.redirect;}});return;}
document.location.href=res.redirect;},0:function(res){console.warn('Обработка ошибок формы');var formError=null;if(res.redirect){showError(res.error.message,function(){document.location.href=res.redirect;});return;}
showError(res.error.message);for(var i=res.form.error.length-1;i>=0;i--){formError=res.form.error[i];console.warn(formError);formErrorHandler(formError);}
$.scrollTo($('.mError').eq(0),500,{offset:-15});},743:function(res){showError(res.error.message);}},completeAnalytics=function completeAnalytics(){if(typeof _gaq!=='undefined'){for(var i=ENTER.OrderModel.deliveryBoxes().length-1;i>=0;i--){_gaq.push(['_trackEvent','Order card','Completed','выбрана '+ENTER.OrderModel.choosenDeliveryTypeId+' доставят '+ENTER.OrderModel.deliveryBoxes()[i].state]);}
_gaq.push(['_trackEvent','Order complete',ENTER.OrderModel.deliveryBoxes().length,ENTER.OrderModel.orderDictionary.products.length]);_gaq.push(['_trackTiming','Order complete','DB response',ajaxDelta]);}
if(typeof window.yaCounter10503055!=='undefined'){window.yaCounter10503055.reachGoal('\\orders\\complete');}
$(document.body).trigger('trackUserAction',['9 Завершение - успех']);},processingResponse=function processingResponse(res){console.info('данные отправлены. получен ответ от сервера');ajaxStop=new Date().getTime();ajaxDelta=ajaxStop-ajaxStart;console.log(res);if(!res.success){console.log('ошибка оформления заказа');$(document.body).trigger('trackUserAction',['8 Завершение - ошибка',res.error.code]);utils.blockScreen.unblock();if(serverErrorHandler.hasOwnProperty(res.error.code)){console.log('Есть обработчик');serverErrorHandler[res.error.code](res);}
else{console.log('Стандартный обработчик');serverErrorHandler['default'](res);}
return false;}
completeAnalytics();if(ENTER.OrderModel.paypalECS()&&!orderCompleteBtn.hasClass('mConfirm')){console.info('PayPal ECS включен. Заказ оформлен. Необходимо удалить выбранные параметры из cookie');window.docCookies.removeItem('chDate_paypalECS','/');window.docCookies.removeItem('chTypeBtn_paypalECS','/');window.docCookies.removeItem('chPoint_paypalECS','/');window.docCookies.removeItem('chTypeId_paypalECS','/');window.docCookies.removeItem('chStetesPriority_paypalECS','/');}
document.location.href=res.redirect;},preparationData=function preparationData(){var
currentDeliveryBox=null,choosePoint,parts=[],dataToSend=[],tmpPart={},i,j,orderForm=$('#order-form');utils.blockScreen.block('Ваш заказ оформляется');dataToSend=orderForm.serializeArray();console.info('Перебираем блоки доставки');for(i=ENTER.OrderModel.deliveryBoxes().length-1;i>=0;i--){tmpPart={};currentDeliveryBox=ENTER.OrderModel.deliveryBoxes()[i];choosePoint=currentDeliveryBox.choosenPoint();console.log('currentDeliveryBox:');console.log(currentDeliveryBox);tmpPart={deliveryMethod_token:currentDeliveryBox.state,date:currentDeliveryBox.choosenDate().value,interval:[(currentDeliveryBox.choosenInterval())?currentDeliveryBox.choosenInterval().start:'',(currentDeliveryBox.choosenInterval())?currentDeliveryBox.choosenInterval().end:''],point_id:choosePoint.id,products:[],deliveryPrice:currentDeliveryBox.deliveryPrice};console.log('choosePoint:');console.log(choosePoint);if('pickpoint'===currentDeliveryBox.state){console.log('Is PickPoint!');tmpPart.point_id=choosePoint['number'];tmpPart.point_address={street:choosePoint['street'],house:choosePoint['house']};tmpPart.point_name=choosePoint.point_name;}
for(j=currentDeliveryBox.products.length-1;j>=0;j--){tmpPart.products.push(currentDeliveryBox.products[j].id);}
console.log('tmpPart:');console.log(tmpPart);parts.push(tmpPart);}
dataToSend.push({name:'order[delivery_type_id]',value:ENTER.OrderModel.choosenDeliveryTypeId});dataToSend.push({name:'order[part]',value:JSON.stringify(parts)});if(typeof(window.KM)!=='undefined'){dataToSend.push({name:'kiss_session',value:window.KM.i});}
console.log('dataToSend:');console.log(dataToSend);ajaxStart=new Date().getTime();$.ajax({url:orderForm.attr('action'),timeout:120000,type:'POST',data:dataToSend,success:processingResponse,statusCode:{500:function(){showError('Не удалось создать заказ. Попробуйте позднее. 500');},504:function(){showError('Не удалось создать заказ. Попробуйте позднее. 504');}}});},orderCompleteBtnHandler=function orderCompleteBtnHandler(){console.info('Завершить оформление заказа');if(ENTER.OrderModel.lifeGift()){preparationData();return false;}
orderValidator.validate({onInvalid:function(err){console.warn('invalid');console.log(err);$.scrollTo(err[err.length-1].fieldNode,500,{offset:-15});},onValid:preparationData});return false;},subwayChange=function subwayChange(){for(var i=subwayArray.length-1;i>=0;i--){if(subwayField.val()===subwayArray[i].label){return;}}
subwayField.val('');},orderDeliveryChangeHandler=function orderDeliveryChangeHandler(event,hasHomeDelivery){if(hasHomeDelivery){orderValidator.setValidate(streetField,{require:true,customErr:'Не введено название улицы',validateOnChange:true});orderValidator.setValidate(buildingField,{require:true,customErr:'Не введен номер дома',validateOnChange:true});if(subwayArray!==undefined){orderValidator.setValidate(subwayField,{fieldNode:subwayField,customErr:'Не выбрана станция метро',require:true,validateOnChange:true});}}
else{orderValidator.setValidate(streetField,{require:false});orderValidator.setValidate(buildingField,{require:false});if(subwayArray!==undefined){orderValidator.setValidate(subwayField,{require:false});}}
console.info('Изменен тип доставки');console.log(orderValidator);};$.mask.definitions['n']='[0-9]';bonusCardNumber.mask('2 98nnnn nnnnnn',{placeholder:'*'});qiwiPhone.mask('(nnn) nnn-nn-nn');phoneField.mask('(nnn) nnn-nn-nn');if(window.docCookies.getItem('emails')){console.log('AB TEST: e-mail require');orderValidator.setValidate(emailField,{require:true});}
var defaultValueToField=function defaultValueToField(fields){var
fieldNode=null,field;console.groupCollapsed('Подстановка значений в поля defaultValueToField()');for(field in fields){console.log('поле '+field);if(fields[field]){console.log('для поля есть значение '+fields[field]);fieldNode=$('input[name="'+field+'"]');if(fieldNode.attr('type')==='radio'){fieldNode.filter('[value="'+fields[field]+'"]').attr('checked','checked').trigger('change');continue;}
fieldNode.val(fields[field]);}}
console.groupEnd();};defaultValueToField($('#jsOrderForm').data('value'));if(subwayArray!==undefined){subwayField.autocomplete(subwayAutocompleteConfig);subwayField.bind('change',subwayChange);for(var i=subwayArray.length-1;i>=0;i--){if(parseInt(metroIdFiled.val(),10)===subwayArray[i].val){subwayField.val(subwayArray[i].label);break;}}}
$('body').bind('orderdeliverychange',orderDeliveryChangeHandler);orderCompleteBtn.bind('click',orderCompleteBtnHandler);console.log('orderValidation.js inited');}(this,this.document,this.jQuery,this.ENTER));
;(function(window,document,$,ENTER,ko){console.info('separate-order.js init');var
serverData=$('#jsOrderDelivery').data('value'),utils=ENTER.utils,body=$(document.body);var
separateOrder=function separateOrder(statesPriority){var
preparedProducts={},productInState=[],productsToNewBox=[],choosenPointForBox=null,token=null,nowState=null,nowProduct=null,choosenBlock=null,isUnique=null,nowProductsToNewBox=[],oldDeliveryBoxes=[],discounts=ENTER.OrderModel.orderDictionary.orderData.discounts||[],deliveryBoxFound;if(ENTER.OrderModel.paypalECS()){console.info('PayPal ECS включен. Необходимо сохранить выбранные параметры в cookie');window.docCookies.setItem('chTypeBtn_paypalECS',ENTER.OrderModel.deliveryTypesButton,10*60);window.docCookies.setItem('chPoint_paypalECS',ENTER.OrderModel.choosenPoint(),10*60);window.docCookies.setItem('chTypeId_paypalECS',ENTER.OrderModel.choosenDeliveryTypeId,10*60);window.docCookies.setItem('chStetesPriority_paypalECS',JSON.stringify(ENTER.OrderModel.statesPriority),10*60);}
if(ENTER.OrderModel.deliveryBoxes().length){oldDeliveryBoxes=ko.toJS(ENTER.OrderModel.deliveryBoxes());console.info('[DeliveryBox] Существуют старые блоки доставки',oldDeliveryBoxes);}
ENTER.OrderModel.deliveryBoxes.removeAll();ENTER.OrderModel.hasCoupons(false);console.log('Маркируем выбранный способ доставки');$('#'+ENTER.OrderModel.deliveryTypesButton).attr('checked','checked').trigger('change');ENTER.OrderModel.totalSum(0);ENTER.OrderModel.hasHomeDelivery(false);body.trigger('orderdeliverychange',[false]);for(var i=0,len=statesPriority.length;i<len;i++){nowState=statesPriority[i];isUnique=ENTER.OrderModel.orderDictionary.isUniqueDeliveryState(nowState);console.info('перебирем '+(isUnique?'уникальный* ':'')+'метод '+nowState);productsToNewBox=[];if(!ENTER.OrderModel.orderDictionary.hasDeliveryState(nowState)){console.info('для метода '+nowState+' нет товаров');continue;}
productInState=ENTER.OrderModel.orderDictionary.getProductFromState(nowState);for(var j=productInState.length-1;j>=0;j--){nowProduct=productInState[j];if(preparedProducts[nowProduct]){console.log('товар '+nowProduct+' уже определялся к блоку');continue;}
console.log('добавляем товар '+nowProduct+' в блок для метода '+nowState);preparedProducts[nowProduct]=true;productsToNewBox.push(ENTER.OrderModel.orderDictionary.getProductById(nowProduct));}
if(productsToNewBox.length){choosenPointForBox=(ENTER.OrderModel.orderDictionary.hasPointDelivery(nowState))?ENTER.OrderModel.choosenPoint():ENTER.OrderModel.orderDictionary.getDefaultPointId(nowState);token=nowState+'_'+choosenPointForBox;if(ENTER.OrderModel.hasDeliveryBox(token)){choosenBlock=ENTER.OrderModel.getDeliveryBoxByToken(token);choosenBlock.addProductGroup(productsToNewBox);}
else if(isUnique){nowProductsToNewBox=ENTER.OrderModel.prepareProductsQuantityByUniq(productsToNewBox);for(j=nowProductsToNewBox.length-1;j>=0;j--){nowProduct=[nowProductsToNewBox[j]];ENTER.constructors.DeliveryBox(nowProduct,nowState,choosenPointForBox);}}else{ENTER.constructors.DeliveryBox(productsToNewBox,nowState,choosenPointForBox);}}}
for(var a in oldDeliveryBoxes){if(ENTER.OrderModel.hasDeliveryBox(oldDeliveryBoxes[a].token)){deliveryBoxFound=ENTER.OrderModel.getDeliveryBoxByToken(oldDeliveryBoxes[a].token);console.log('[Deliverybox] Обнаружен старый блок доставки: ',oldDeliveryBoxes[a].token,' c выбранной датой ',oldDeliveryBoxes[a].choosenDate);console.info('[Deliverybox] Применяю старую дату на блок ',oldDeliveryBoxes[a].token);console.warn(oldDeliveryBoxes[a].allDatesForBlock);console.warn(oldDeliveryBoxes[a].allDatesForBlock.length);deliveryBoxFound.choosenDate(oldDeliveryBoxes[a].choosenDate);deliveryBoxFound.allDatesForBlock.removeAll();deliveryBoxFound.allDatesForBlock(oldDeliveryBoxes[a].allDatesForBlock);console.log(deliveryBoxFound.allDatesForBlock());console.log(deliveryBoxFound.allDatesForBlock().length);}}
console.info('Созданные блоки:',ENTER.OrderModel.deliveryBoxes());if(ENTER.OrderModel.deliveryBoxes().length>1)body.trigger('trackUserAction',['1_2 Доставка, заказ разбит',ENTER.OrderModel.deliveryBoxes().length]);ENTER.OrderModel.couponsBox(discounts);ENTER.OrderModel.couponUrl($('.bSaleList__eItem:visible .jsCustomRadio').eq(0).val());$('.bSaleList__eItem:visible .jsCustomRadio').eq(0).trigger('change');if(0===$('.bPayMethod:visible .jsCustomRadio:checked').length){$('.bPayMethod:visible .jsCustomRadio').eq(0).attr('checked','checked').trigger('change');}
if((ENTER.OrderModel.hasCoupons()&&ENTER.OrderModel.deliveryBoxes().length>1)||(ENTER.OrderModel.appliedCoupon()&&ENTER.OrderModel.appliedCoupon().sum&&(parseFloat(ENTER.OrderModel.totalSum())+parseFloat(ENTER.OrderModel.appliedCoupon().sum)<=parseFloat(ENTER.OrderModel.appliedCoupon().sum)))){console.warn('Нужно удалить купон');var msg='Купон не может быть применен при текущем разбиении заказа и будет удален';var callback=function(){console.log('удаление');ENTER.OrderModel.deleteItem(ENTER.OrderModel.appliedCoupon());};$.when(showError(msg)).then(callback);return false;}
if(preparedProducts.length!==ENTER.OrderModel.orderDictionary.orderData.products.length){console.warn('не все товары были обработаны');}
console.warn('end');$('.bCountSection').goodsCounter({onChange:function(count){console.info('counter change',count);body.trigger('trackUserAction',['1_4_3 Число товаров']);var
seturl=$(this).data('seturl')||'',newURl=seturl.addParameterToUrl('quantity',count),reqArray;console.log(seturl);console.log(newURl);var
spinnerAnalytics=function spinnerAnalytics(data){var
_rutarget=window._rutarget||[],result;if(!data.product||!data.regionId){return;}
result={'event':'updateInCart','sku':data.product.id,'qty':data.product.quantity,'regionId':data.regionId};console.info('RuTarget updateInCart. Клики кнопок увеличения/уменьшения кол-ва товара.');console.log(result);_rutarget.push(result);},spinnerResponceHandler=function spinnerResponceHandler(res){if(!res.success){ENTER.OrderModel.couponError(res.error.message);utils.blockScreen.unblock();return;}
ENTER.OrderModel.couponNumber('');spinnerAnalytics(res);};utils.blockScreen.block('Обновляем');reqArray=[{type:'GET',url:newURl,callback:spinnerResponceHandler},{type:'GET',url:ENTER.OrderModel.updateUrl,callback:ENTER.OrderModel.modelUpdate}];utils.packageReq(reqArray);}});};ko.bindingHandlers.popupShower={update:function(element,valueAccessor){var val=valueAccessor(),unwrapVal=ko.utils.unwrapObservable(val),map=null;if(unwrapVal){map=new ENTER.constructors.CreateMap('pointPopupMap',ENTER.OrderModel.popupWithPoints().points,$('#mapInfoBlock'));$(element).lightbox_me({centered:true,onClose:function(){console.info('закрываем');val(false);}});map._showMarkers();}
else{$('#pointPopupMap').empty();$(element).trigger('close');}}};ko.bindingHandlers.payBlockVisible={update:function(element){var
node=$(element),vars=node.data('vars'),toHide=(vars&&vars.toHide)?vars.toHide:false,choosenDeliveryTypeId=ENTER.OrderModel.choosenDeliveryTypeId,deliveryBoxes=ENTER.OrderModel.deliveryBoxes(),dCount=deliveryBoxes.length,testDeliveryId,testPaymentId,nodeHidded=1;if(!dCount){return;}
if(1===dCount){nodeHidded=0;console.log('Кол-во deliveryBoxes == 1: Показываем payBlock');}
else{nodeHidded=1;console.log('Кол-во deliveryBoxes > 1: Скрываем payBlock');}
if(toHide){for(testDeliveryId in toHide){if('undefined'===typeof toHide[testDeliveryId].length){if($.inArray(choosenDeliveryTypeId,toHide)>=0){nodeHidded=1;console.log('toHide NoArr: Скрываем payBlock');}}
else if(choosenDeliveryTypeId===testDeliveryId){for(testPaymentId in toHide[testDeliveryId]){if(testPaymentId===vars.typeId){nodeHidded=1;console.log('toHide Arr: Скрываем payBlock');}}}}}
nodeHidded?node.hide():node.show();}};ko.bindingHandlers.paymentMethodVisible={update:function(element,valueAccessor){var
val=valueAccessor(),unwrapVal=ko.utils.unwrapObservable(val),node=$(element),nodeData=node.data('value'),maxSum=parseInt(nodeData['max-sum'],10),minSum=parseInt(nodeData['min-sum'],10),methodId=nodeData['method_id'],isAvailableToPickpoint=nodeData['isAvailableToPickpoint'];if((6===ENTER.OrderModel.choosenDeliveryTypeId&&false===isAvailableToPickpoint)||(4===ENTER.OrderModel.choosenDeliveryTypeId&&13===methodId&&ENTER.OrderModel.lifeGift()===false)||(!isNaN(maxSum)&&maxSum<unwrapVal)||(!isNaN(minSum)&&minSum>unwrapVal)){node.hide();return;}
node.show();}};ko.bindingHandlers.calendarSlider={update:function(element,valueAccessor,allBindingsAccessor,viewModel,bindingContext){var
slider=$(element),nowLeft=valueAccessor(),dateItem=slider.find('.bBuyingDatesItem'),dateItemW=dateItem.width()+parseInt(dateItem.css('marginRight'),10)+parseInt(dateItem.css('marginLeft'),10);slider.width(dateItem.length*dateItemW);if(nowLeft>0){nowLeft-=380;bindingContext.box.calendarSliderLeft(nowLeft);return;}
if(nowLeft<-slider.width()){nowLeft+=380;bindingContext.box.calendarSliderLeft(nowLeft);return;}
slider.animate({'left':nowLeft});}};ko.bindingHandlers.couponsVisible={update:function(element,valueAccessor){var
val=valueAccessor(),unwrapVal=ko.utils.unwrapObservable(val),node=$(element),fieldNode=node.find('.mSaleInput'),buttonNode=node.find('.mSaleBtn'),emptyBlock=node.find('.bSaleData__eEmptyBlock'),i;$('.bSaleList__eItem').removeClass('hidden');for(i=unwrapVal.length-1;i>=0;i--){node.find('.bSaleList__eItem[data-type="'+unwrapVal[i].type+'"]').addClass('hidden');if(unwrapVal[i].type==='coupon'){console.log('Есть примененный купон');ENTER.OrderModel.hasCoupons(true);ENTER.OrderModel.appliedCoupon(unwrapVal[i]);}}
if($('.bSaleList__eItem.hidden').length===$('.bSaleList__eItem').length||$('.bSaleList__eItem:hidden').length===$('.bSaleList__eItem').length){fieldNode.attr('disabled','disabled');buttonNode.attr('disabled','disabled').addClass('mDisabled');emptyBlock.show();}
else{fieldNode.removeAttr('disabled');buttonNode.removeAttr('disabled').removeClass('mDisabled');emptyBlock.hide();}}};ENTER.OrderModel={updateUrl:$('#jsOrderDelivery').data('url'),prepareData:ko.observable(false),showPopupWithPoints:ko.observable(false),deliveryTypesButton:null,tmpStatesPriority:null,statesPriority:null,lifeGift:ko.observable(false),oneClick:ko.observable(false),paypalECS:ko.observable(false),cartSum:null,orderDictionary:null,choosenPoint:ko.observable(),hasHomeDelivery:ko.observable(false),deliveryTypes:ko.observableArray([]),deliveryBoxes:ko.observableArray([]),popupWithPoints:ko.observable({}),totalSum:ko.observable(0),hasCoupons:ko.observable(false),appliedCoupon:ko.observable(),couponNumber:ko.observable(),couponUrl:ko.observable(),couponError:ko.observable(),couponsBox:ko.observableArray([]),hasDeliveryBox:function(token){console.info('Существует ли блок доставки '+token);var i=null;for(i=ENTER.OrderModel.deliveryBoxes().length-1;i>=0;i--){if(ENTER.OrderModel.deliveryBoxes()[i].token===token){return true;}}
return false;},getDeliveryBoxByToken:function(token){console.info('Получить ссылку на блок по токену '+token);var i=null;for(i=ENTER.OrderModel.deliveryBoxes().length-1;i>=0;i--){if(ENTER.OrderModel.deliveryBoxes()[i].token===token){return ENTER.OrderModel.deliveryBoxes()[i];}}
return false;},removeDeliveryBox:function(token){console.info('Поиск для удаления блока по токену '+token);var
i,ret=null,dBoxes=ENTER.OrderModel.deliveryBoxes(),dBCount=dBoxes.length;for(i=dBCount-1;i>=0;i--){if(dBoxes[i].token===token){console.info('Удаление блока по токену '+token);ret=ENTER.OrderModel.deliveryBoxes.splice(i,1);if('object'===typeof(ret[0])){ret=ret[0];}
break;}}
return ret;},checkCoupon:function(){console.info('проверяем купон');var dataToSend={number:ENTER.OrderModel.couponNumber()},url=ENTER.OrderModel.couponUrl(),reqArray;var couponResponceHandler=function couponResponceHandler(res){if(!res.success){ENTER.OrderModel.couponError(res.error.message);utils.blockScreen.unblock();body.trigger('trackUserAction',['2 Купон','Отказ']);return;}
body.trigger('trackUserAction',['2 Купон','Принят']);ENTER.OrderModel.couponNumber('');};ENTER.OrderModel.couponError('');if(url===undefined){console.warn('Не выбран тип скидки');ENTER.OrderModel.couponError('Не выбран тип скидки');return;}
if(dataToSend.number===undefined||!dataToSend.number.length){console.warn('Не введен номер');ENTER.OrderModel.couponError('Не введен номер');return;}
utils.blockScreen.block('Применяем купон');reqArray=[{type:'POST',url:url,data:dataToSend,callback:couponResponceHandler},{type:'GET',url:ENTER.OrderModel.updateUrl,callback:ENTER.OrderModel.modelUpdate}];utils.packageReq(reqArray);return false;},selectPoint:function(data){console.info('point selected...');console.log(data.parentBoxToken);var choosenBlock=null;if(data.parentBoxToken){choosenBlock=ENTER.OrderModel.getDeliveryBoxByToken(data.parentBoxToken);console.log(choosenBlock);choosenBlock.selectPoint.apply(choosenBlock,[data]);return false;}
ENTER.OrderModel.statesPriority=ENTER.OrderModel.tmpStatesPriority;ENTER.OrderModel.choosenPoint(data.id);ENTER.OrderModel.showPopupWithPoints(false);separateOrder(ENTER.OrderModel.statesPriority);return false;},chooseDeliveryTypes:function(data,event){console.info('chooseDeliveryTypes');var
priorityState=data.states[0],checkedInputId=event.target.htmlFor;console.log(priorityState);console.log(checkedInputId);body.trigger('trackUserAction',['1_1 Доставка',data.shortName]);if($('#'+checkedInputId).attr('checked')){console.warn('Этот пункт '+checkedInputId+' уже был выбран');return false;}
ENTER.OrderModel.deliveryTypesButton=checkedInputId;console.log(ENTER.OrderModel.deliveryTypesButton);ENTER.OrderModel.tmpStatesPriority=data.states;console.log(ENTER.OrderModel.tmpStatesPriority);ENTER.OrderModel.choosenDeliveryTypeId=data.id;console.log(ENTER.OrderModel.choosenDeliveryTypeId);if(ENTER.OrderModel.orderDictionary.hasPointDelivery(priorityState)){console.log('Необходимо показать окно с выбором точки доставки');ENTER.OrderModel.popupWithPoints({header:data.name,points:ENTER.OrderModel.orderDictionary.getAllPointsByState(priorityState)});ENTER.OrderModel.showPopupWithPoints(true);return false;}
console.log('Выбор точки доставки не требуется');ENTER.OrderModel.statesPriority=ENTER.OrderModel.tmpStatesPriority;ENTER.OrderModel.choosenPoint(0);console.info('Отправляем данные на разбивку');separateOrder(ENTER.OrderModel.statesPriority);return false;},modelUpdate:function(res){console.info('обновление данных с сервера');renderOrderData(res);separateOrder(ENTER.OrderModel.statesPriority);},deleteItem:function(data){console.info('удаление товара');var reqArray=null;utils.blockScreen.block('Удаляем');var itemDeleteAnalytics=function itemDeleteAnalytics(data){var products=ENTER.OrderModel.orderDictionary.products,totalPrice=0,totalQuan=0,toKISS={},_rutarget=window._rutarget||[],result;if(!data.product){return false;}
for(var product in products){totalPrice+=products[product].price;totalQuan+=products[product].quantity;}
toKISS={'Checkout Step 1 SKU Quantity':totalQuan,'Checkout Step 1 SKU Total':totalPrice};if(typeof _kmq!=='undefined'){_kmq.push(['set',toKISS]);}
if(typeof _gaq!=='undefined'){_gaq.push(['_trackEvent','Order card','Item deleted']);}
if(data.regionId){result={'event':'removeFromCart','sku':data.product.id,'regionId':data.regionId}
console.info('RuTarget removeFromCart');console.log(result);_rutarget.push(result);}
if('undefined'!=typeof(JSREObject)){console.info('Lamoda removeFromCart');console.log('product_id='+data.product.id);JSREObject('cart_remove',data.product.id);}},deleteItemResponceHandler=function deleteItemResponceHandler(res){console.info('deleteItemResponceHandler');console.log(res);if(!res.success){console.warn('не удалось удалить товар');utils.blockScreen.unblock();return false;}
itemDeleteAnalytics(res);if(res.product){var productId=res.product.id;var categoryId=res.category_id;(function(s){var d=document,i=d.createElement('IMG'),b=d.body;s=s.replace(/!\[rnd\]/,Math.round(Math.random()*9999999))+'&tail256='+escape(d.referrer||'unknown');i.style.position='absolute';i.style.width=i.style.height='0px';i.onload=i.onerror=function(){b.removeChild(i);i=b=null;};i.src=s;b.insertBefore(i,b.firstChild);})('http://ad.adriver.ru/cgi-bin/rle.cgi?sid=182615&sz=del_basket&bt=55&pz=0&custom=10='+productId+';11='+categoryId+'&![rnd]');}};console.log(data.deleteUrl);reqArray=[{type:'GET',url:data.deleteUrl,callback:deleteItemResponceHandler},{type:'GET',url:ENTER.OrderModel.updateUrl,callback:ENTER.OrderModel.modelUpdate}];utils.packageReq(reqArray);return false;},prepareProductsQuantityByUniq:function prepareProductsQuantityByUniq(productsToNewBox){var productsUniq=[],nowProduct,j,k;for(j=productsToNewBox.length-1;j>=0;j--){nowProduct=ENTER.utils.cloneObject(productsToNewBox[j]);nowProduct.sum=nowProduct.price;nowProduct.quantity=1;nowProduct.oldQuantity=productsToNewBox[j].quantity;for(k=productsToNewBox[j].quantity-1;k>=0;k--){productsUniq.push(nowProduct);}}
return productsUniq;}};ko.applyBindings(ENTER.OrderModel);var
showError=function showError(msg){var content='<div class="popupbox width290">'+'<div class="font18 pb18"> '+msg+'</div>'+'</div>'+'<p style="text-align:center"><a href="#" class="closePopup bBigOrangeButton">OK</a></p>',block=$('<div>').addClass('popup').html(content),popupIsClose=$.Deferred();block.appendTo('body');var errorPopupCloser=function(){block.trigger('close');block.remove();popupIsClose.resolve();};block.lightbox_me({centered:true,closeClick:false,closeEsc:false});block.find('.closePopup').bind('click',errorPopupCloser);return popupIsClose.promise();},productError={'default':function(product){var msg='Товар '+product.name+' недоступен для продажи.',productErrorIsResolve=$.Deferred();$.when(showError(msg)).then(function(){$.ajax({type:'GET',url:product.deleteUrl}).then(productErrorIsResolve.resolve);});return productErrorIsResolve.promise();},708:function(product){var msg='',productErrorIsResolve=$.Deferred();if(product.name&&product.error.message&&product.quantity){msg='Вы заказали товар '+product.name+' в количестве '+product.quantity+' шт. <br/ >'+product.error.message;}
else{msg='Товар недоступен для продажи';}
$.when(showError(msg)).then(function(){var reqArray=[{type:'GET',url:product.setUrl,callback:productErrorIsResolve.resolve},{type:'GET',url:ENTER.OrderModel.updateUrl,callback:ENTER.OrderModel.modelUpdate}];utils.packageReq(reqArray);return productErrorIsResolve.promise();});}},allErrorHandler=function allErrorHandler(res){var product=null,productsWithError=[];for(product in res.products){if(res.products[product].error&&res.products[product].error.code){productsWithError.push(res.products[product]);}}
var errorCatcher=function errorCatcher(i,callback){var code=null;if(i<0){console.warn('return');callback();return;}
code=productsWithError[i].error.code;code=(productError.hasOwnProperty(code))?code:'default';$.when(productError[code](productsWithError[i])).then(function(){var newI=i-1;errorCatcher(newI,callback);});};if(productsWithError.length===0&&res.error.message){$.when(showError(res.error.message)).then(function(){if(res.redirect){document.location.href=res.redirect;}});}
else{errorCatcher(productsWithError.length-1,function(){console.warn('1 этап закончен');if(res.redirect){document.location.href=res.redirect;}});}},renderOrderData=function renderOrderData(res){var data,firstPoint;utils.blockScreen.unblock();if(!res.success){console.warn('Данные содержат ошибки');console.log(res.error);allErrorHandler(res);return false;}
console.info('Данные с сервера получены');ENTER.OrderModel.orderDictionary=new ENTER.constructors.OrderDictionary(res);if(res.paypalECS){console.info('paypal true');ENTER.OrderModel.paypalECS(true);}
if(res.cart&&res.cart.sum){console.info('Есть первоначальная сумма корзины : '+res.cart.sum);ENTER.OrderModel.cartSum=res.cart.sum;}
ENTER.OrderModel.deliveryTypes(res.deliveryTypes);ENTER.OrderModel.lifeGift(res.lifeGift||false);ENTER.OrderModel.oneClick(res.oneClick||false);ENTER.OrderModel.prepareData(true);if(ENTER.OrderModel.paypalECS()&&window.docCookies.hasItem('chTypeBtn_paypalECS')&&window.docCookies.hasItem('chPoint_paypalECS')&&window.docCookies.hasItem('chTypeId_paypalECS')&&window.docCookies.hasItem('chStetesPriority_paypalECS')){console.info('PayPal ECS включен. Необходимо применить параметры из cookie');ENTER.OrderModel.deliveryTypesButton=window.docCookies.getItem('chTypeBtn_paypalECS');ENTER.OrderModel.choosenPoint(window.docCookies.getItem('chPoint_paypalECS'));ENTER.OrderModel.choosenDeliveryTypeId=window.docCookies.getItem('chTypeId_paypalECS');ENTER.OrderModel.statesPriority=JSON.parse(window.docCookies.getItem('chStetesPriority_paypalECS'));separateOrder(ENTER.OrderModel.statesPriority);}
if(1===res.deliveryTypes.length){data=res.deliveryTypes[0];firstPoint=ENTER.OrderModel.orderDictionary.getFirstPointByState(data.states[0])||data.id;console.log('Обнаружен только 1 способ доставки: '+data.name+' — выбираем его.');console.log('Выбран первый пункт* доставки:');console.log(firstPoint);ENTER.OrderModel.statesPriority=data.states;ENTER.OrderModel.deliveryTypesButton='method_'+data.id;ENTER.OrderModel.choosenDeliveryTypeId=data.id;ENTER.OrderModel.choosenPoint(firstPoint);separateOrder(ENTER.OrderModel.statesPriority);}},selectPointOnBaloon=function selectPointOnBaloon(event){console.log('selectPointOnBaloon');console.log(event);console.log($(this).data('pointid'));console.log($(this).data('parentbox'));ENTER.OrderModel.selectPoint({id:$(this).data('pointid'),parentBoxToken:$(this).data('parentbox')});return false;},analyticsStep_1=function analyticsStep1(orderData){console.info('analyticsStep_1');var
totalPrice=0,totalQuan=0,basketProd=[],toKISS={},product;for(product in orderData.products){totalPrice+=orderData.products[product].price;totalQuan+=orderData.products[product].quantity;basketProd.push({'id':orderData.products[product].id,'name':orderData.products[product]['name'],'price':orderData.products[product].price,'quantity':orderData.products[product].quantity});}
toKISS={'Checkout Step 1 SKU Quantity':totalQuan,'Checkout Step 1 SKU Total':totalPrice,'Checkout Step 1 Order Type':'cart order'};if(typeof _gaq!=='undefined'){_gaq.push(['_trackEvent','New order','Items',totalQuan]);}
if(typeof _kmq!=='undefined'){_kmq.push(['record','Checkout Step 1',toKISS]);}
window.APRT_DATA=window.APRT_DATA||{};window.APRT_DATA.pageType=5;window.APRT_DATA.orderInfo=window.APRT_DATA.orderInfo||{};window.APRT_DATA.orderInfo.totalPrice=totalPrice;window.APRT_DATA.basketProducts=basketProd;};console.log(ENTER.OrderModel);renderOrderData(serverData);analyticsStep_1(serverData);body.on('click','.shopchoose',selectPointOnBaloon);}(this,this.document,this.jQuery,this.ENTER,this.ko));
//@ sourceMappingURL=order-new-v5.js.map