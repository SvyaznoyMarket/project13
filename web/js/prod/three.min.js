var THREE=THREE||{REVISION:"55"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var t=e+"",r=this.lastIndexOf(t);return(r>-1&&r)===this.length-t.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;t.length>r&&!window.requestAnimationFrame;++r)window.requestAnimationFrame=window[t[r]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[r]+"CancelAnimationFrame"]||window[t[r]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),n=window.setTimeout(function(){t(r+i)},i);return e=r+i,n}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSV:function(e,t,r){var i,n,o,a,s;return 0===r?this.r=this.g=this.b=0:(i=Math.floor(6*e),n=6*e-i,o=r*(1-t),a=r*(1-t*n),s=r*(1-t*(1-n)),0===i?(this.r=r,this.g=s,this.b=o):1===i?(this.r=a,this.g=r,this.b=o):2===i?(this.r=o,this.g=r,this.b=s):3===i?(this.r=o,this.g=a,this.b=r):4===i?(this.r=s,this.g=o,this.b=r):5===i&&(this.r=r,this.g=o,this.b=a)),this},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){var t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},getHSV:function(e){var t,r,i=this.r,n=this.g,o=this.b,a=Math.max(Math.max(i,n),o),s=Math.min(Math.min(i,n),o),l=a;if(s===a)t=0,r=0;else{var c=a-s;r=c/a,t=i===a?(n-o)/c:n===a?2+(o-i)/c:4+(i-n)/c,t/=6,0>t&&(t+=1),t>1&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=r,e.v=l,e},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var r=Math.cos(e.x/2),i=Math.cos(e.y/2),n=Math.cos(e.z/2),o=Math.sin(e.x/2),a=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=o*i*n+r*a*s,this.y=r*a*n-o*i*s,this.z=r*i*s+o*a*n,this.w=r*i*n-o*a*s):"YXZ"===t?(this.x=o*i*n+r*a*s,this.y=r*a*n-o*i*s,this.z=r*i*s-o*a*n,this.w=r*i*n+o*a*s):"ZXY"===t?(this.x=o*i*n-r*a*s,this.y=r*a*n+o*i*s,this.z=r*i*s+o*a*n,this.w=r*i*n-o*a*s):"ZYX"===t?(this.x=o*i*n-r*a*s,this.y=r*a*n+o*i*s,this.z=r*i*s-o*a*n,this.w=r*i*n+o*a*s):"YZX"===t?(this.x=o*i*n+r*a*s,this.y=r*a*n+o*i*s,this.z=r*i*s-o*a*n,this.w=r*i*n-o*a*s):"XZY"===t&&(this.x=o*i*n-r*a*s,this.y=r*a*n-o*i*s,this.z=r*i*s+o*a*n,this.w=r*i*n+o*a*s),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(r),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],n=r[4],o=r[8],a=r[1],s=r[5],l=r[9],c=r[2],h=r[6],u=r[10],p=i+s+u;return p>0?(t=.5/Math.sqrt(p+1),this.w=.25/t,this.x=(h-l)*t,this.y=(o-c)*t,this.z=(a-n)*t):i>s&&i>u?(t=2*Math.sqrt(1+i-s-u),this.w=(h-l)/t,this.x=.25*t,this.y=(n+a)/t,this.z=(o+c)/t):s>u?(t=2*Math.sqrt(1+s-i-u),this.w=(o-c)/t,this.x=(n+a)/t,this.y=.25*t,this.z=(l+h)/t):(t=2*Math.sqrt(1+u-i-s),this.w=(a-n)/t,this.x=(o+c)/t,this.y=(l+h)/t,this.z=.25*t),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.x=0,this.y=0,this.z=0,this.w=1):(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e.x,i=e.y,n=e.z,o=e.w,a=t.x,s=t.y,l=t.z,c=t.w;return this.x=r*c+o*a+i*l-n*s,this.y=i*c+o*s+n*a-r*l,this.z=n*c+o*l+r*s-i*a,this.w=o*c-r*a-i*s-n*l,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this.x,i=this.y,n=this.z,o=this.w,a=o*e.w+r*e.x+i*e.y+n*e.z;if(0>a?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,a=-a):this.copy(e),a>=1)return this.w=o,this.x=r,this.y=i,this.z=n,this;var s=Math.acos(a),l=Math.sqrt(1-a*a);if(.001>Math.abs(l))return this.w=.5*(o+this.w),this.x=.5*(r+this.x),this.y=.5*(i+this.y),this.z=.5*(n+this.z),this;var c=Math.sin((1-t)*s)/l,h=Math.sin(t*s)/l;return this.w=o*c+this.w*h,this.x=r*c+this.x*h,this.y=i*c+this.y*h,this.z=n*c+this.z*h,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6]*i,this.y=n[1]*t+n[4]*r+n[7]*i,this.z=n[2]*t+n[5]*r+n[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i+n[12],this.y=n[1]*t+n[5]*r+n[9]*i+n[13],this.z=n[2]*t+n[6]*r+n[10]*i+n[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements,o=1/(n[3]*t+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*t+n[4]*r+n[8]*i+n[12])*o,this.y=(n[1]*t+n[5]*r+n[9]*i+n[13])*o,this.z=(n[2]*t+n[6]*r+n[10]*i+n[14])*o,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,o=e.y,a=e.z,s=e.w,l=s*t+o*i-a*r,c=s*r+a*t-n*i,h=s*i+n*r-o*t,u=-n*t-o*r-a*i;return this.x=l*s+u*-n+c*-a-h*-o,this.y=c*s+u*-o+h*-n-l*-a,this.z=h*s+u*-a+l*-o-c*-n,this},applyEuler:function(e,t){var r=THREE.Vector3.__q1.setFromEuler(e,t);return this.applyQuaternion(r),this},applyAxisAngle:function(e,t){var r=THREE.Vector3.__q1.setFromAxisAngle(e,t);return this.applyQuaternion(r),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):(this.x=0,this.y=0,this.z=0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.elements,n=i[0],o=i[4],a=i[8],s=i[1],l=i[5],c=i[9],h=i[2],u=i[6],p=i[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(r(a)),.99999>Math.abs(a)?(this.x=Math.atan2(-c,p),this.z=Math.atan2(-o,n)):(this.x=Math.atan2(u,l),this.z=0)):"YXZ"===t?(this.x=Math.asin(-r(c)),.99999>Math.abs(c)?(this.y=Math.atan2(a,p),this.z=Math.atan2(s,l)):(this.y=Math.atan2(-h,n),this.z=0)):"ZXY"===t?(this.x=Math.asin(r(u)),.99999>Math.abs(u)?(this.y=Math.atan2(-h,p),this.z=Math.atan2(-o,l)):(this.y=0,this.z=Math.atan2(s,n))):"ZYX"===t?(this.y=Math.asin(-r(h)),.99999>Math.abs(h)?(this.x=Math.atan2(u,p),this.z=Math.atan2(s,n)):(this.x=0,this.z=Math.atan2(-o,l))):"YZX"===t?(this.z=Math.asin(r(s)),.99999>Math.abs(s)?(this.x=Math.atan2(-c,l),this.y=Math.atan2(-h,n)):(this.x=0,this.y=Math.atan2(a,p))):"XZY"===t&&(this.z=Math.asin(-r(o)),.99999>Math.abs(o)?(this.x=Math.atan2(u,l),this.y=Math.atan2(a,n)):(this.x=Math.atan2(-c,p),this.y=0)),this},setEulerFromQuaternion:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.x*e.x,n=e.y*e.y,o=e.z*e.z,a=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),a-i-n+o),this.y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a+i-n-o)):"YXZ"===t?(this.x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a-i-n+o),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a-i+n-o)):"ZXY"===t?(this.x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),a-i-n+o),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),a-i+n-o)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),a-i-n+o),this.y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),a+i-n-o)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),a-i+n-o),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),a+i-n-o),this.z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),a-i+n-o),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),a+i-n-o),this.z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector3.__q1=new THREE.Quaternion,THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w,o=e.elements;return this.x=o[0]*t+o[4]*r+o[8]*i+o[12]*n,this.y=o[1]*t+o[5]*r+o[9]*i+o[13]*n,this.z=o[2]*t+o[6]*r+o[10]*i+o[14]*n,this.w=o[3]*t+o[7]*r+o[11]*i+o[15]*n,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.x=0,this.y=0,this.z=0,this.w=1),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,n,o=.01,a=.1,s=e.elements,l=s[0],c=s[4],h=s[8],u=s[1],p=s[5],f=s[9],d=s[2],m=s[6],E=s[10];if(o>Math.abs(c-u)&&o>Math.abs(h-d)&&o>Math.abs(f-m)){if(a>Math.abs(c+u)&&a>Math.abs(h+d)&&a>Math.abs(f+m)&&a>Math.abs(l+p+E-3))return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,v=(p+1)/2,y=(E+1)/2,T=(c+u)/4,R=(h+d)/4,x=(f+m)/4;return g>v&&g>y?o>g?(r=0,i=.707106781,n=.707106781):(r=Math.sqrt(g),i=T/r,n=R/r):v>y?o>v?(r=.707106781,i=0,n=.707106781):(i=Math.sqrt(v),r=T/i,n=x/i):o>y?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(y),r=R/n,i=x/n),this.set(r,i,n,t),this}var b=Math.sqrt((m-f)*(m-f)+(h-d)*(h-d)+(u-c)*(u-c));return.001>Math.abs(b)&&(b=1),this.x=(m-f)/b,this.y=(h-d)/b,this.z=(u-c)/b,this.w=Math.acos((l+p+E-1)/2),this}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)t=e[r],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var r=THREE.Box2.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector2;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=THREE.Box2.__v1.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box2.__v1=new THREE.Vector2,THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)t=e[r],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var r=THREE.Box3.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return t||new THREE.Vector3,(new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=THREE.Box3.__v1.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function(e){var t=e||new THREE.Sphere;return t.center=this.center(),t.radius=.5*this.size(THREE.Box3.__v0).length(),t},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},transform:function(e){var t=[THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v1.set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v2.set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z).applyMatrix4(e)];return this.makeEmpty(),this.setFromPoints(t),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Box3.__v0=new THREE.Vector3,THREE.Box3.__v1=new THREE.Vector3,THREE.Box3.__v2=new THREE.Vector3,THREE.Box3.__v3=new THREE.Vector3,THREE.Box3.__v4=new THREE.Vector3,THREE.Box3.__v5=new THREE.Vector3,THREE.Box3.__v6=new THREE.Vector3,THREE.Box3.__v7=new THREE.Vector3,THREE.Matrix3=function(e,t,r,i,n,o,a,s,l){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,r||0,i||0,void 0!==n?n:1,o||0,a||0,s||0,void 0!==l?l:1)
},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,o,a,s,l){var c=this.elements;return c[0]=e,c[3]=t,c[6]=r,c[1]=i,c[4]=n,c[7]=o,c[2]=a,c[5]=s,c[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix3.__v1,r=0,i=e.length;i>r;r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],t.applyMatrix3(this),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],o=e[4],a=e[5],s=e[6],l=e[7],c=e[8];return t*o*c-t*a*l-r*n*c+r*a*s+i*n*l-i*o*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===n){var o="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw Error(o);return console.warn(o),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,r,i,n,o,a,s,l,c,h,u,p,f,d,m){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,r||0,i||0,n||0,void 0!==o?o:1,a||0,s||0,l||0,c||0,void 0!==h?h:1,u||0,p||0,f||0,d||0,void 0!==m?m:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,o,a,s,l,c,h,u,p,f,d,m){var E=this.elements;return E[0]=e,E[4]=t,E[8]=r,E[12]=i,E[1]=n,E[5]=o,E[9]=a,E[13]=s,E[2]=l,E[6]=c,E[10]=h,E[14]=u,E[3]=p,E[7]=f,E[11]=d,E[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15]),this},setRotationFromEuler:function(e,t){var r=this.elements,i=e.x,n=e.y,o=e.z,a=Math.cos(i),s=Math.sin(i),l=Math.cos(n),c=Math.sin(n),h=Math.cos(o),u=Math.sin(o);if(void 0===t||"XYZ"===t){var p=a*h,f=a*u,d=s*h,m=s*u;r[0]=l*h,r[4]=-l*u,r[8]=c,r[1]=f+d*c,r[5]=p-m*c,r[9]=-s*l,r[2]=m-p*c,r[6]=d+f*c,r[10]=a*l}else if("YXZ"===t){var E=l*h,g=l*u,v=c*h,y=c*u;r[0]=E+y*s,r[4]=v*s-g,r[8]=a*c,r[1]=a*u,r[5]=a*h,r[9]=-s,r[2]=g*s-v,r[6]=y+E*s,r[10]=a*l}else if("ZXY"===t){var E=l*h,g=l*u,v=c*h,y=c*u;r[0]=E-y*s,r[4]=-a*u,r[8]=v+g*s,r[1]=g+v*s,r[5]=a*h,r[9]=y-E*s,r[2]=-a*c,r[6]=s,r[10]=a*l}else if("ZYX"===t){var p=a*h,f=a*u,d=s*h,m=s*u;r[0]=l*h,r[4]=d*c-f,r[8]=p*c+m,r[1]=l*u,r[5]=m*c+p,r[9]=f*c-d,r[2]=-c,r[6]=s*l,r[10]=a*l}else if("YZX"===t){var T=a*l,R=a*c,x=s*l,b=s*c;r[0]=l*h,r[4]=b-T*u,r[8]=x*u+R,r[1]=u,r[5]=a*h,r[9]=-s*h,r[2]=-c*h,r[6]=R*u+x,r[10]=T-b*u}else if("XZY"===t){var T=a*l,R=a*c,x=s*l,b=s*c;r[0]=l*h,r[4]=-u,r[8]=c*h,r[1]=T*u+b,r[5]=a*h,r[9]=R*u-x,r[2]=x*u-R,r[6]=s*h,r[10]=b*u+T}return this},setRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,o=e.w,a=r+r,s=i+i,l=n+n,c=r*a,h=r*s,u=r*l,p=i*s,f=i*l,d=n*l,m=o*a,E=o*s,g=o*l;return t[0]=1-(p+d),t[4]=h-g,t[8]=u+E,t[1]=h+g,t[5]=1-(c+d),t[9]=f-m,t[2]=u-E,t[6]=f+m,t[10]=1-(c+p),this},lookAt:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;return a.subVectors(e,t).normalize(),0===a.length()&&(a.z=1),n.crossVectors(r,a).normalize(),0===n.length()&&(a.x+=1e-4,n.crossVectors(r,a).normalize()),o.crossVectors(a,n),i[0]=n.x,i[4]=o.x,i[8]=a.x,i[1]=n.y,i[5]=o.y,i[9]=a.y,i[2]=n.z,i[6]=o.z,i[10]=a.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,o=r[0],a=r[4],s=r[8],l=r[12],c=r[1],h=r[5],u=r[9],p=r[13],f=r[2],d=r[6],m=r[10],E=r[14],g=r[3],v=r[7],y=r[11],T=r[15],R=i[0],x=i[4],b=i[8],H=i[12],w=i[1],S=i[5],_=i[9],M=i[13],C=i[2],A=i[6],D=i[10],L=i[14],P=i[3],F=i[7],N=i[11],U=i[15];return n[0]=o*R+a*w+s*C+l*P,n[4]=o*x+a*S+s*A+l*F,n[8]=o*b+a*_+s*D+l*N,n[12]=o*H+a*M+s*L+l*U,n[1]=c*R+h*w+u*C+p*P,n[5]=c*x+h*S+u*A+p*F,n[9]=c*b+h*_+u*D+p*N,n[13]=c*H+h*M+u*L+p*U,n[2]=f*R+d*w+m*C+E*P,n[6]=f*x+d*S+m*A+E*F,n[10]=f*b+d*_+m*D+E*N,n[14]=f*H+d*M+m*L+E*U,n[3]=g*R+v*w+y*C+T*P,n[7]=g*x+v*S+y*A+T*F,n[11]=g*b+v*_+y*D+T*N,n[15]=g*H+v*M+y*L+T*U,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix4.__v1,r=0,i=e.length;i>r;r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],t.applyProjection(this),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return e.x=r*t[0]+i*t[4]+n*t[8],e.y=r*t[1]+i*t[5]+n*t[9],e.z=r*t[2]+i*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,r=new THREE.Vector4;return r.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,r.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,r.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,r.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,r},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],o=e[1],a=e[5],s=e[9],l=e[13],c=e[2],h=e[6],u=e[10],p=e[14],f=e[3],d=e[7],m=e[11],E=e[15];return f*(+n*s*h-i*l*h-n*a*u+r*l*u+i*a*p-r*s*p)+d*(+t*s*p-t*l*u+n*o*u-i*o*p+i*l*c-n*s*c)+m*(+t*l*h-t*a*p-n*o*h+r*o*p+n*a*c-r*l*c)+E*(-i*a*c-t*s*h+t*a*u+i*o*h-r*o*u+r*s*c)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],o=i[4],a=i[8],s=i[12],l=i[1],c=i[5],h=i[9],u=i[13],p=i[2],f=i[6],d=i[10],m=i[14],E=i[3],g=i[7],v=i[11],y=i[15];r[0]=h*m*g-u*d*g+u*f*v-c*m*v-h*f*y+c*d*y,r[4]=s*d*g-a*m*g-s*f*v+o*m*v+a*f*y-o*d*y,r[8]=a*u*g-s*h*g+s*c*v-o*u*v-a*c*y+o*h*y,r[12]=s*h*f-a*u*f-s*c*d+o*u*d+a*c*m-o*h*m,r[1]=u*d*E-h*m*E-u*p*v+l*m*v+h*p*y-l*d*y,r[5]=a*m*E-s*d*E+s*p*v-n*m*v-a*p*y+n*d*y,r[9]=s*h*E-a*u*E-s*l*v+n*u*v+a*l*y-n*h*y,r[13]=a*u*p-s*h*p+s*l*d-n*u*d-a*l*m+n*h*m,r[2]=c*m*E-u*f*E+u*p*g-l*m*g-c*p*y+l*f*y,r[6]=s*f*E-o*m*E-s*p*g+n*m*g+o*p*y-n*f*y,r[10]=o*u*E-s*c*E+s*l*g-n*u*g-o*l*y+n*c*y,r[14]=s*c*p-o*u*p-s*l*f+n*u*f+o*l*m-n*c*m,r[3]=h*f*E-c*d*E-h*p*g+l*d*g+c*p*v-l*f*v,r[7]=o*d*E-a*f*E+a*p*g-n*d*g-o*p*v+n*f*v,r[11]=a*c*E-o*h*E-a*l*g+n*h*g+o*l*v-n*c*v,r[15]=o*h*p-a*c*p+a*l*f-n*h*f-o*l*d+n*c*d;var T=i[0]*r[0]+i[1]*r[4]+i[2]*r[8]+i[3]*r[12];if(0==T){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/T),this},compose:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__m1,o=THREE.Matrix4.__m2;return n.identity(),n.setRotationFromQuaternion(t),o.makeScale(r.x,r.y,r.z),this.multiplyMatrices(n,o),i[12]=e.x,i[13]=e.y,i[14]=e.z,this},decompose:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__v1,o=THREE.Matrix4.__v2,a=THREE.Matrix4.__v3;n.set(i[0],i[1],i[2]),o.set(i[4],i[5],i[6]),a.set(i[8],i[9],i[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,r=r instanceof THREE.Vector3?r:new THREE.Vector3,r.x=n.length(),r.y=o.length(),r.z=a.length(),e.x=i[12],e.y=i[13],e.z=i[14];var s=THREE.Matrix4.__m1;return s.copy(this),s.elements[0]/=r.x,s.elements[1]/=r.x,s.elements[2]/=r.x,s.elements[4]/=r.y,s.elements[5]/=r.y,s.elements[6]/=r.y,s.elements[8]/=r.z,s.elements[9]/=r.z,s.elements[10]/=r.z,t.setFromRotationMatrix(s),[e,t,r]},extractPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(e){var t=this.elements,r=e.elements,i=THREE.Matrix4.__v1,n=1/i.set(r[0],r[1],r[2]).length(),o=1/i.set(r[4],r[5],r[6]).length(),a=1/i.set(r[8],r[9],r[10]).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[4]=r[4]*o,t[5]=r[5]*o,t[6]=r[6]*o,t[8]=r[8]*a,t[9]=r[9]*a,t[10]=r[10]*a,this},translate:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return t[12]=t[0]*r+t[4]*i+t[8]*n+t[12],t[13]=t[1]*r+t[5]*i+t[9]*n+t[13],t[14]=t[2]*r+t[6]*i+t[10]*n+t[14],t[15]=t[3]*r+t[7]*i+t[11]*n+t[15],this},rotateX:function(e){var t=this.elements,r=t[4],i=t[5],n=t[6],o=t[7],a=t[8],s=t[9],l=t[10],c=t[11],h=Math.cos(e),u=Math.sin(e);return t[4]=h*r+u*a,t[5]=h*i+u*s,t[6]=h*n+u*l,t[7]=h*o+u*c,t[8]=h*a-u*r,t[9]=h*s-u*i,t[10]=h*l-u*n,t[11]=h*c-u*o,this},rotateY:function(e){var t=this.elements,r=t[0],i=t[1],n=t[2],o=t[3],a=t[8],s=t[9],l=t[10],c=t[11],h=Math.cos(e),u=Math.sin(e);return t[0]=h*r-u*a,t[1]=h*i-u*s,t[2]=h*n-u*l,t[3]=h*o-u*c,t[8]=h*a+u*r,t[9]=h*s+u*i,t[10]=h*l+u*n,t[11]=h*c+u*o,this},rotateZ:function(e){var t=this.elements,r=t[0],i=t[1],n=t[2],o=t[3],a=t[4],s=t[5],l=t[6],c=t[7],h=Math.cos(e),u=Math.sin(e);return t[0]=h*r+u*a,t[1]=h*i+u*s,t[2]=h*n+u*l,t[3]=h*o+u*c,t[4]=h*a-u*r,t[5]=h*s-u*i,t[6]=h*l-u*n,t[7]=h*c-u*o,this},rotateByAxis:function(e,t){var r=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var i=e.x,n=e.y,o=e.z,a=Math.sqrt(i*i+n*n+o*o);i/=a,n/=a,o/=a;var s=i*i,l=n*n,c=o*o,h=Math.cos(t),u=Math.sin(t),p=1-h,f=i*n*p,d=i*o*p,m=n*o*p,E=i*u,g=n*u,v=o*u,y=s+(1-s)*h,T=f+v,R=d-g,x=f-v,b=l+(1-l)*h,H=m+E,w=d+g,S=m-E,_=c+(1-c)*h,M=r[0],C=r[1],A=r[2],D=r[3],L=r[4],P=r[5],F=r[6],N=r[7],U=r[8],B=r[9],O=r[10],I=r[11];return r[12],r[13],r[14],r[15],r[0]=y*M+T*L+R*U,r[1]=y*C+T*P+R*B,r[2]=y*A+T*F+R*O,r[3]=y*D+T*N+R*I,r[4]=x*M+b*L+H*U,r[5]=x*C+b*P+H*B,r[6]=x*A+b*F+H*O,r[7]=x*D+b*N+H*I,r[8]=w*M+S*L+_*U,r[9]=w*C+S*P+_*B,r[10]=w*A+S*F+_*O,r[11]=w*D+S*N+_*I,this},scale:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return t[0]*=r,t[4]*=i,t[8]*=n,t[1]*=r,t[5]*=i,t[9]*=n,t[2]*=r,t[6]*=i,t[10]*=n,t[3]*=r,t[7]*=i,t[11]*=n,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,o=e.x,a=e.y,s=e.z,l=n*o,c=n*a;return this.set(l*o+r,l*a-i*s,l*s+i*a,0,l*a+i*s,c*a+r,c*s-i*o,0,l*s-i*a,c*s+i*o,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeFrustum:function(e,t,r,i,n,o){var a=this.elements,s=2*n/(t-e),l=2*n/(i-r),c=(t+e)/(t-e),h=(i+r)/(i-r),u=-(o+n)/(o-n),p=-2*o*n/(o-n);return a[0]=s,a[4]=0,a[8]=c,a[12]=0,a[1]=0,a[5]=l,a[9]=h,a[13]=0,a[2]=0,a[6]=0,a[10]=u,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this},makePerspective:function(e,t,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*e)),o=-n,a=o*t,s=n*t;return this.makeFrustum(a,s,o,n,r,i)},makeOrthographic:function(e,t,r,i,n,o){var a=this.elements,s=t-e,l=r-i,c=o-n,h=(t+e)/s,u=(r+i)/l,p=(o+n)/c;return a[0]=2/s,a[4]=0,a[8]=0,a[12]=-h,a[1]=0,a[5]=2/l,a[9]=0,a[13]=-u,a[2]=0,a[6]=0,a[10]=-2/c,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var r=t||new THREE.Vector3;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(e){return this.origin.copy(this.at(e,THREE.Ray.__v1)),this},closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(e){var t=THREE.Ray.__v1.subVectors(e,this.origin).dot(this.direction);return THREE.Ray.__v1.copy(this.direction).multiplyScalar(t).add(this.origin),THREE.Ray.__v1.distanceTo(e)},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.normal.dot(this.direction);return 0!=t?!0:0==e.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:void 0;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return void 0===r?void 0:this.at(r,t)},transform:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Ray.__v1=new THREE.Vector3,THREE.Ray.__v2=new THREE.Vector3,THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var r=0,i=0,n=t.length;n>i;i++){var o=e.distanceToSquared(t[i]);r=Math.max(r,o)}return this.center=e,this.radius=Math.sqrt(r),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return t*t>=e.center.distanceToSquared(this.center)},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},transform:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,n,o){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==o?o:new THREE.Plane]},THREE.Frustum.prototype={set:function(e,t,r,i,n,o){var a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(r),a[3].copy(i),a[4].copy(n),a[5].copy(o),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],n=r[1],o=r[2],a=r[3],s=r[4],l=r[5],c=r[6],h=r[7],u=r[8],p=r[9],f=r[10],d=r[11],m=r[12],E=r[13],g=r[14],v=r[15];return t[0].setComponents(a-i,h-s,d-u,v-m).normalize(),t[1].setComponents(a+i,h+s,d+u,v+m).normalize(),t[2].setComponents(a+n,h+l,d+p,v+E).normalize(),t[3].setComponents(a-n,h-l,d-p,v-E).normalize(),t[4].setComponents(a-o,h-c,d-f,v-g).normalize(),t[5].setComponents(a+o,h+c,d+f,v+g).normalize(),this},intersectsObject:function(e){for(var t=e.matrixWorld,r=this.planes,i=t.getPosition(),n=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis(),o=0;6>o;o++){var a=r[o].distanceToPoint(i);if(n>a)return!1}return!0},intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,n=0;6>n;n++){var o=t[n].distanceToPoint(r);if(i>o)return!1}return!0},containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,r){var i=THREE.Plane.__v1.subVectors(r,t).cross(THREE.Plane.__v2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e),i=t||new THREE.Vector3;return i.copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e,t){var r=this.distanceToPoint(e),i=this.distanceToPoint(t);return 0>r&&i>0||0>i&&r>0},intersectLine:function(e,t,r){var i=r||new THREE.Vector3,n=THREE.Plane.__v1.subVectors(t,e),o=this.normal.dot(n);if(0==o)return 0==this.distanceToPoint(e)?i.copy(e):void 0;var a=-(e.dot(this.normal)+this.constant)/o;return 0>a||a>1?void 0:i.copy(n).multiplyScalar(a).add(e)},coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},transform:function(e,t){t=t||(new THREE.Matrix3).getInverse(e).transpose();var r=THREE.Plane.__v1.copy(this.normal).applyMatrix3(t),i=this.coplanarPoint(THREE.Plane.__v2);return i.applyMatrix4(e),this.setFromNormalAndCoplanarPoint(r,i),this},translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Plane.__vZero=new THREE.Vector3(0,0,0),THREE.Plane.__v1=new THREE.Vector3,THREE.Plane.__v2=new THREE.Vector3,THREE.Math={clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(e){return e*THREE.Math.__d2r},radToDeg:function(e){return e*THREE.Math.__r2d}},THREE.Math.__d2r=Math.PI/180,THREE.Math.__r2d=180/Math.PI,THREE.Spline=function(e){function t(e,t,r,i,n,o,a){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*a+(-3*(t-r)-2*s-l)*o+s*n+t}this.points=e;var r,i,n,o,a,s,l,c,h,u=[],p={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;e.length>t;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],l=this.points[u[1]],c=this.points[u[2]],h=this.points[u[3]],o=n*n,a=n*o,p.x=t(s.x,l.x,c.x,h.x,n,o,a),p.y=t(s.y,l.y,c.y,h.y,n,o,a),p.z=t(s.z,l.z,c.z,h.z,n,o,a),p},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;r>e;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n,o=0,a=0,s=0,l=new THREE.Vector3,c=new THREE.Vector3,h=[],u=0;for(h[0]=0,e||(e=100),i=this.points.length*e,l.copy(this.points[0]),t=1;i>t;t++)r=t/i,n=this.getPoint(r),c.copy(n),u+=c.distanceTo(l),l.copy(n),o=(this.points.length-1)*r,a=Math.floor(o),a!=s&&(h[a]=u,s=a);return h[h.length]=u,{chunks:h,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,n,o,a,s,l,c=[],h=new THREE.Vector3,u=this.getLength();for(c.push(h.copy(this.points[0]).clone()),t=1;this.points.length>t;t++){for(a=u.chunks[t]-u.chunks[t-1],s=Math.ceil(e*a/u.total),n=(t-1)/(this.points.length-1),o=t/(this.points.length-1),r=1;s-1>r;r++)i=n+r*(1/s)*(o-n),l=this.getPoint(i),c.push(h.copy(l).clone());c.push(h.copy(this.points[t]).clone())}this.points=c}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(e,t,r,i){var n=i||new THREE.Vector3;n.subVectors(r,t),THREE.Triangle.__v0.subVectors(e,t),n.cross(THREE.Triangle.__v0);var o=n.lengthSq();return o>0?n.multiplyScalar(1/Math.sqrt(o)):n.set(0,0,0)},THREE.Triangle.barycoordFromPoint=function(e,t,r,i,n){THREE.Triangle.__v0.subVectors(i,t),THREE.Triangle.__v1.subVectors(r,t),THREE.Triangle.__v2.subVectors(e,t);var o=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),a=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),s=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),l=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),c=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),h=o*l-a*a,u=n||new THREE.Vector3;if(0==h)return u.set(-2,-1,-1);var p=1/h,f=(l*s-a*c)*p,d=(o*c-a*s)*p;return u.set(1-f-d,d,f)},THREE.Triangle.containsPoint=function(e,t,r,i){var n=THREE.Triangle.barycoordFromPoint(e,t,r,i,THREE.Triangle.__v3);return n.x>=0&&n.y>=0&&1>=n.x+n.y},THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){return THREE.Triangle.__v0.subVectors(this.c,this.b),THREE.Triangle.__v1.subVectors(this.a,this.b),.5*THREE.Triangle.__v0.cross(THREE.Triangle.__v1).length()},midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Triangle.__v0=new THREE.Vector3,THREE.Triangle.__v1=new THREE.Vector3,THREE.Triangle.__v2=new THREE.Vector3,THREE.Triangle.__v3=new THREE.Vector3,THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.startTime=Date.now(),this.oldTime=this.startTime,this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e},THREE.EventDispatcher=function(){var e={};this.addEventListener=function(t,r){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(r)&&e[t].push(r)},this.removeEventListener=function(t,r){var i=e[t].indexOf(r);-1!==i&&e[t].splice(i,1)},this.dispatchEvent=function(t){var r=e[t.type];if(void 0!==r){t.target=this;for(var i=0,n=r.length;n>i;i++)r[i].call(this,t)}}},function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r),this.ray.direction.length()>0&&this.ray.direction.normalize(),this.near=i||0,this.far=n||1/0};var t=new e.Sphere,r=new e.Ray,i=new e.Plane,n=new e.Vector3,o=new e.Matrix4,a=function(e,t){return e.distance-t.distance},s=function(a,s,l){if(a instanceof e.Particle){var c=s.ray.distanceToPoint(a.matrixWorld.getPosition());if(c>a.scale.x)return l;l.push({distance:c,point:a.position,face:null,object:a})}else if(a instanceof e.Mesh){if(t.set(a.matrixWorld.getPosition(),a.geometry.boundingSphere.radius*a.matrixWorld.getMaxScaleOnAxis()),!s.ray.isIntersectionSphere(t))return l;var h,u,p,f,d=a.geometry,m=d.vertices,E=a.material instanceof e.MeshFaceMaterial,g=E===!0?a.material.materials:null,v=a.material.side,y=s.precision;a.matrixRotationWorld.extractRotation(a.matrixWorld),o.getInverse(a.matrixWorld),r.copy(s.ray).transform(o);for(var T=0,R=d.faces.length;R>T;T++){var x=d.faces[T],b=E===!0?g[x.materialIndex]:a.material;if(void 0!==b){i.setFromNormalAndCoplanarPoint(x.normal,m[x.a]);var H=r.distanceToPlane(i);if(!(y>Math.abs(H)||0>H)){if(v=b.side,v!==e.DoubleSide){var w=r.direction.dot(i.normal);if(!(v===e.FrontSide?0>w:w>0))continue}if(!(s.near>H||H>s.far)){if(n=r.at(H,n),x instanceof e.Face3){if(h=m[x.a],u=m[x.b],p=m[x.c],!e.Triangle.containsPoint(n,h,u,p))continue}else{if(!(x instanceof e.Face4))throw Error("face type not supported");if(h=m[x.a],u=m[x.b],p=m[x.c],f=m[x.d],!e.Triangle.containsPoint(n,h,u,f)&&!e.Triangle.containsPoint(n,u,p,f))continue}l.push({distance:H,point:s.ray.at(H),face:x,faceIndex:T,object:a})}}}}}},l=function(e,t,r){for(var i=e.getDescendants(),n=0,o=i.length;o>n;n++)s(i[n],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),this.ray.direction.length()>0&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return t===!0&&l(e,this,r),s(e,this,r),r.sort(a),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,n=e.length;n>i;i++)s(e[i],this,r),t===!0&&l(e[i],this,r);return r.sort(a),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix);var t=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(t,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(this.useQuaternion===!1?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)return console.warn("THREE.Object3D.add: An object can't be added as a child of itself."),void 0;if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r];if(n.name===e)return n;if(t===!0&&(n=n.getChildByName(e,t),void 0!==n))return n}return void 0},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;r>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion===!1?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);
for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;this.children.length>t;t++){var r=this.children[t];e.add(r.clone())}return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(c===R){var e=new THREE.RenderableObject;return T.push(e),R++,c++,e}return T[c++]}function t(){if(u===b){var e=new THREE.RenderableVertex;return x.push(e),b++,u++,e}return x[u++]}function r(){if(f===w){var e=new THREE.RenderableFace3;return H.push(e),w++,f++,e}return H[f++]}function i(){if(d===_){var e=new THREE.RenderableFace4;return S.push(e),_++,d++,e}return S[d++]}function n(){if(E===C){var e=new THREE.RenderableLine;return M.push(e),C++,E++,e}return M[E++]}function o(){if(v===D){var e=new THREE.RenderableParticle;return A.push(e),D++,v++,e}return A[v++]}function a(e,t){return t.z-e.z}function s(e,t){var r=0,i=1,n=e.z+e.w,o=t.z+t.w,a=-e.z+e.w,s=-t.z+t.w;return n>=0&&o>=0&&a>=0&&s>=0?!0:0>n&&0>o||0>a&&0>s?!1:(0>n?r=Math.max(r,n/(n-o)):0>o&&(i=Math.min(i,n/(n-o))),0>a?r=Math.max(r,a/(a-s)):0>s&&(i=Math.min(i,a/(a-s))),r>i?!1:(e.lerp(t,r),t.lerp(e,1-i),!0))}var l,c,h,u,p,f,d,m,E,g,v,y,T=[],R=0,x=[],b=0,H=[],w=0,S=[],_=0,M=[],C=0,A=[],D=0,L={objects:[],sprites:[],lights:[],elements:[]},P=new THREE.Vector3,F=new THREE.Vector4,N=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),U=new THREE.Box3,B=Array(3),O=Array(4),I=new THREE.Matrix4,z=new THREE.Matrix4,V=new THREE.Matrix4,k=new THREE.Matrix3,j=new THREE.Matrix3,G=new THREE.Vector3,W=new THREE.Frustum,q=new THREE.Vector4,X=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),z.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(z)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),z.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(z)},this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var Y=function(t,r){c=0,L.objects.length=0,L.sprites.length=0,L.lights.length=0;var i=function(t){for(var r=0,n=t.children.length;n>r;r++){var o=t.children[r];o.visible!==!1&&(o instanceof THREE.Light?L.lights.push(o):o instanceof THREE.Mesh||o instanceof THREE.Line?(o.frustumCulled===!1||W.intersectsObject(o)===!0)&&(l=e(),l.object=o,null!==o.renderDepth?l.z=o.renderDepth:(P.copy(o.matrixWorld.getPosition()),P.applyProjection(z),l.z=P.z),L.objects.push(l)):o instanceof THREE.Sprite||o instanceof THREE.Particle?(l=e(),l.object=o,null!==o.renderDepth?l.z=o.renderDepth:(P.copy(o.matrixWorld.getPosition()),P.applyProjection(z),l.z=P.z),L.sprites.push(l)):(l=e(),l.object=o,null!==o.renderDepth?l.z=o.renderDepth:(P.copy(o.matrixWorld.getPosition()),P.applyProjection(z),l.z=P.z),L.objects.push(l)),i(o))}};return i(t),r===!0&&L.objects.sort(a),L};this.projectScene=function(e,l,c,T){var R,b,H,w,S,_,M,C,A,D,P,K,J,$,Q,Z,et,tt,rt,it,nt,ot,at,st,lt,ct,ht=!1;for(f=0,d=0,E=0,v=0,L.elements.length=0,e.updateMatrixWorld(),void 0===l.parent&&l.updateMatrixWorld(),I.copy(l.matrixWorldInverse.getInverse(l.matrixWorld)),z.multiplyMatrices(l.projectionMatrix,I),j.getInverse(I),j.transpose(),W.setFromMatrix(z),L=Y(e,c),R=0,b=L.objects.length;b>R;R++)if(J=L.objects[R].object,y=J.matrixWorld,u=0,J instanceof THREE.Mesh){for($=J.geometry,Q=$.vertices,Z=$.faces,rt=$.faceVertexUvs,k.getInverse(y),k.transpose(),lt=J.material instanceof THREE.MeshFaceMaterial,ct=lt===!0?J.material:null,H=0,w=Q.length;w>H;H++)h=t(),h.positionWorld.copy(Q[H]).applyMatrix4(y),h.positionScreen.copy(h.positionWorld).applyMatrix4(z),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.positionScreen.z/=h.positionScreen.w,h.visible=!(-1>h.positionScreen.x||h.positionScreen.x>1||-1>h.positionScreen.y||h.positionScreen.y>1||-1>h.positionScreen.z||h.positionScreen.z>1);for(S=0,_=Z.length;_>S;S++){et=Z[S];var ut=lt===!0?ct.materials[et.materialIndex]:J.material;if(void 0!==ut){var pt=ut.side;if(et instanceof THREE.Face3){if(nt=x[et.a],ot=x[et.b],at=x[et.c],B[0]=nt.positionScreen,B[1]=ot.positionScreen,B[2]=at.positionScreen,nt.visible!==!0&&ot.visible!==!0&&at.visible!==!0&&!N.isIntersectionBox(U.setFromPoints(B)))continue;if(ht=0>(at.positionScreen.x-nt.positionScreen.x)*(ot.positionScreen.y-nt.positionScreen.y)-(at.positionScreen.y-nt.positionScreen.y)*(ot.positionScreen.x-nt.positionScreen.x),pt!==THREE.DoubleSide&&ht!==(pt===THREE.FrontSide))continue;p=r(),p.v1.copy(nt),p.v2.copy(ot),p.v3.copy(at)}else if(et instanceof THREE.Face4){if(nt=x[et.a],ot=x[et.b],at=x[et.c],st=x[et.d],O[0]=nt.positionScreen,O[1]=ot.positionScreen,O[2]=at.positionScreen,O[3]=st.positionScreen,nt.visible!==!0&&ot.visible!==!0&&at.visible!==!0&&st.visible!==!0&&!N.isIntersectionBox(U.setFromPoints(O)))continue;if(ht=0>(st.positionScreen.x-nt.positionScreen.x)*(ot.positionScreen.y-nt.positionScreen.y)-(st.positionScreen.y-nt.positionScreen.y)*(ot.positionScreen.x-nt.positionScreen.x)||0>(ot.positionScreen.x-at.positionScreen.x)*(st.positionScreen.y-at.positionScreen.y)-(ot.positionScreen.y-at.positionScreen.y)*(st.positionScreen.x-at.positionScreen.x),pt!==THREE.DoubleSide&&ht!==(pt===THREE.FrontSide))continue;p=i(),p.v1.copy(nt),p.v2.copy(ot),p.v3.copy(at),p.v4.copy(st)}for(p.normalModel.copy(et.normal),ht!==!1||pt!==THREE.BackSide&&pt!==THREE.DoubleSide||p.normalModel.negate(),p.normalModel.applyMatrix3(k).normalize(),p.normalModelView.copy(p.normalModel).applyMatrix3(j),p.centroidModel.copy(et.centroid).applyMatrix4(y),tt=et.vertexNormals,M=0,C=tt.length;C>M;M++){var ft=p.vertexNormalsModel[M];ft.copy(tt[M]),ht!==!1||pt!==THREE.BackSide&&pt!==THREE.DoubleSide||ft.negate(),ft.applyMatrix3(k).normalize();var dt=p.vertexNormalsModelView[M];dt.copy(ft).applyMatrix3(j)}for(p.vertexNormalsLength=tt.length,A=0,D=rt.length;D>A;A++)if(it=rt[A][S],void 0!==it)for(P=0,K=it.length;K>P;P++)p.uvs[A][P]=it[P];p.color=et.color,p.material=ut,G.copy(p.centroidModel).applyProjection(z),p.z=G.z,L.elements.push(p)}}}else if(J instanceof THREE.Line){V.multiplyMatrices(z,y),Q=J.geometry.vertices,nt=t(),nt.positionScreen.copy(Q[0]).applyMatrix4(V);var mt=J.type===THREE.LinePieces?2:1;for(H=1,w=Q.length;w>H;H++)nt=t(),nt.positionScreen.copy(Q[H]).applyMatrix4(V),(H+1)%mt>0||(ot=x[u-2],q.copy(nt.positionScreen),X.copy(ot.positionScreen),s(q,X)===!0&&(q.multiplyScalar(1/q.w),X.multiplyScalar(1/X.w),m=n(),m.v1.positionScreen.copy(q),m.v2.positionScreen.copy(X),m.z=Math.max(q.z,X.z),m.material=J.material,L.elements.push(m)))}for(R=0,b=L.sprites.length;b>R;R++)J=L.sprites[R].object,y=J.matrixWorld,J instanceof THREE.Particle&&(F.set(y.elements[12],y.elements[13],y.elements[14],1),F.applyMatrix4(z),F.z/=F.w,F.z>0&&1>F.z&&(g=o(),g.object=J,g.x=F.x/F.w,g.y=F.y/F.w,g.z=F.z,g.rotation=J.rotation.z,g.scale.x=J.scale.x*Math.abs(g.x-(F.x+l.projectionMatrix.elements[0])/(F.w+l.projectionMatrix.elements[12])),g.scale.y=J.scale.y*Math.abs(g.y-(F.y+l.projectionMatrix.elements[5])/(F.w+l.projectionMatrix.elements[13])),g.material=J.material,L.elements.push(g)));return T===!0&&L.elements.sort(a),L}},THREE.Face3=function(e,t,r,i,n,o){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,n,o,a){this.a=e,this.b=t,this.c=r,this.d=i,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=o instanceof THREE.Color?o:new THREE.Color,this.vertexColors=o instanceof Array?o:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Geometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getInverse(e).transpose(),r=0,i=this.vertices.length;i>r;r++){var n=this.vertices[r];n.applyMatrix4(e)}for(var r=0,i=this.faces.length;i>r;r++){var o=this.faces[r];o.normal.applyMatrix3(t).normalize();for(var a=0,s=o.vertexNormals.length;s>a;a++)o.vertexNormals[a].applyMatrix3(t).normalize();o.centroid.applyMatrix4(e)}},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],r.centroid.set(0,0,0),r instanceof THREE.Face3?(r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.divideScalar(3)):r instanceof THREE.Face4&&(r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.add(this.vertices[r.d]),r.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,r,i,n,o,a=new THREE.Vector3,s=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],i=this.vertices[r.a],n=this.vertices[r.b],o=this.vertices[r.c],a.subVectors(o,n),s.subVectors(i,n),a.cross(s),a.normalize(),r.normal.copy(a)},computeVertexNormals:function(e){var t,r,i,n,o,a;if(void 0===this.__tmpVertices){for(this.__tmpVertices=Array(this.vertices.length),a=this.__tmpVertices,t=0,r=this.vertices.length;r>t;t++)a[t]=new THREE.Vector3;for(i=0,n=this.faces.length;n>i;i++)o=this.faces[i],o instanceof THREE.Face3?o.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:o instanceof THREE.Face4&&(o.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(a=this.__tmpVertices,t=0,r=this.vertices.length;r>t;t++)a[t].set(0,0,0);if(e){var s,l,c,h,u=new THREE.Vector3,p=new THREE.Vector3,f=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;for(i=0,n=this.faces.length;n>i;i++)o=this.faces[i],o instanceof THREE.Face3?(s=this.vertices[o.a],l=this.vertices[o.b],c=this.vertices[o.c],u.subVectors(c,l),p.subVectors(s,l),u.cross(p),a[o.a].add(u),a[o.b].add(u),a[o.c].add(u)):o instanceof THREE.Face4&&(s=this.vertices[o.a],l=this.vertices[o.b],c=this.vertices[o.c],h=this.vertices[o.d],f.subVectors(h,l),p.subVectors(s,l),f.cross(p),a[o.a].add(f),a[o.b].add(f),a[o.d].add(f),d.subVectors(h,c),m.subVectors(l,c),d.cross(m),a[o.b].add(d),a[o.c].add(d),a[o.d].add(d))}else for(i=0,n=this.faces.length;n>i;i++)o=this.faces[i],o instanceof THREE.Face3?(a[o.a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal)):o instanceof THREE.Face4&&(a[o.a].add(o.normal),a[o.b].add(o.normal),a[o.c].add(o.normal),a[o.d].add(o.normal));for(t=0,r=this.vertices.length;r>t;t++)a[t].normalize();for(i=0,n=this.faces.length;n>i;i++)o=this.faces[i],o instanceof THREE.Face3?(o.vertexNormals[0].copy(a[o.a]),o.vertexNormals[1].copy(a[o.b]),o.vertexNormals[2].copy(a[o.c])):o instanceof THREE.Face4&&(o.vertexNormals[0].copy(a[o.a]),o.vertexNormals[1].copy(a[o.b]),o.vertexNormals[2].copy(a[o.c]),o.vertexNormals[3].copy(a[o.d]))},computeMorphNormals:function(){var e,t,r,i,n;for(r=0,i=this.faces.length;i>r;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var o=new THREE.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var a,s,l=this.morphNormals[e].faceNormals,c=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],a=new THREE.Vector3,s=n instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},l.push(a),c.push(s)}var h=this.morphNormals[e];o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();var a,s;for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],a=h.faceNormals[r],s=h.vertexNormals[r],a.copy(n.normal),n instanceof THREE.Face3?(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])):(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2]),s.d.copy(n.vertexNormals[3]))}for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function e(e,t,r,i,n,o,a){c=e.vertices[t],h=e.vertices[r],u=e.vertices[i],p=l[n],f=l[o],d=l[a],m=h.x-c.x,E=u.x-c.x,g=h.y-c.y,v=u.y-c.y,y=h.z-c.z,T=u.z-c.z,R=f.x-p.x,x=d.x-p.x,b=f.y-p.y,H=d.y-p.y,w=1/(R*H-x*b),D.set((H*m-b*E)*w,(H*g-b*v)*w,(H*y-b*T)*w),L.set((R*E-x*m)*w,(R*v-x*g)*w,(R*T-x*y)*w),C[t].add(D),C[r].add(D),C[i].add(D),A[t].add(L),A[r].add(L),A[i].add(L)}var t,r,i,n,o,a,s,l,c,h,u,p,f,d,m,E,g,v,y,T,R,x,b,H,w,S,_,M,C=[],A=[],D=new THREE.Vector3,L=new THREE.Vector3,P=new THREE.Vector3,F=new THREE.Vector3,N=new THREE.Vector3;for(i=0,n=this.vertices.length;n>i;i++)C[i]=new THREE.Vector3,A[i]=new THREE.Vector3;for(t=0,r=this.faces.length;r>t;t++)s=this.faces[t],l=this.faceVertexUvs[0][t],s instanceof THREE.Face3?e(this,s.a,s.b,s.c,0,1,2):s instanceof THREE.Face4&&(e(this,s.a,s.b,s.d,0,1,3),e(this,s.b,s.c,s.d,1,2,3));var U=["a","b","c","d"];for(t=0,r=this.faces.length;r>t;t++)for(s=this.faces[t],o=0;s.vertexNormals.length>o;o++)N.copy(s.vertexNormals[o]),a=s[U[o]],S=C[a],P.copy(S),P.sub(N.multiplyScalar(N.dot(S))).normalize(),F.crossVectors(s.vertexNormals[o],S),_=F.dot(A[a]),M=0>_?-1:1,s.vertexTangents[o]=new THREE.Vector4(P.x,P.y,P.z,M);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;i>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e,t,r,i,n,o,a,s,l,c={},h=[],u=[],p=4,f=Math.pow(10,p);for(this.__tmpVertices=void 0,r=0,i=this.vertices.length;i>r;r++)e=this.vertices[r],t=[Math.round(e.x*f),Math.round(e.y*f),Math.round(e.z*f)].join("_"),void 0===c[t]?(c[t]=r,h.push(this.vertices[r]),u[r]=h.length-1):u[r]=u[c[t]];var d=[];for(r=0,i=this.faces.length;i>r;r++)if(n=this.faces[r],n instanceof THREE.Face3){n.a=u[n.a],n.b=u[n.b],n.c=u[n.c],o=[n.a,n.b,n.c];for(var m=-1,E=0;3>E;E++)if(o[E]==o[(E+1)%3]){m=E,d.push(r);break}}else if(n instanceof THREE.Face4){n.a=u[n.a],n.b=u[n.b],n.c=u[n.c],n.d=u[n.d],o=[n.a,n.b,n.c,n.d];for(var m=-1,E=0;4>E;E++)o[E]==o[(E+1)%4]&&(m>=0&&d.push(r),m=E);if(m>=0){o.splice(m,1);var g=new THREE.Face3(o[0],o[1],o[2],n.normal,n.color,n.materialIndex);for(a=0,s=this.faceVertexUvs.length;s>a;a++)l=this.faceVertexUvs[a][r],l&&l.splice(m,1);n.vertexNormals&&n.vertexNormals.length>0&&(g.vertexNormals=n.vertexNormals,g.vertexNormals.splice(m,1)),n.vertexColors&&n.vertexColors.length>0&&(g.vertexColors=n.vertexColors,g.vertexColors.splice(m,1)),this.faces[r]=g}}for(r=d.length-1;r>=0;r--)for(this.faces.splice(r,1),a=0,s=this.faceVertexUvs.length;s>a;a++)this.faceVertexUvs[a].splice(r,1);var v=this.vertices.length-h.length;return this.vertices=h,v},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;i>r;r++)e.vertices.push(t[r].clone());for(var n=this.faces,r=0,i=n.length;i>r;r++)e.faces.push(n[r].clone());for(var o=this.faceVertexUvs[0],r=0,i=o.length;i>r;r++){for(var a=o[r],s=[],l=0,c=a.length;c>l;l++)s.push(new THREE.Vector2(a[l].x,a[l].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,r;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(r=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==r){var i=new THREE.Matrix3;i.getInverse(e).transpose(),i.multiplyVector3Array(r),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,r,i,n=this.boundingBox;e.length>=3&&(n.min.x=n.max.x=e[0],n.min.y=n.max.y=e[1],n.min.z=n.max.z=e[2]);for(var o=3,a=e.length;a>o;o+=3)t=e[o],r=e[o+1],i=e[o+2],n.min.x>t?n.min.x=t:t>n.max.x&&(n.max.x=t),n.min.y>r?n.min.y=r:r>n.max.y&&(n.max.y=r),n.min.z>i?n.min.z=i:i>n.max.z&&(n.max.z=i)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,r,i,n,o=0,a=0,s=e.length;s>a;a+=3)r=e[a],i=e[a+1],n=e[a+2],t=r*r+i*i+n*n,t>o&&(o=t);this.boundingSphere.radius=Math.sqrt(o)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,n=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n),numItems:n};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var o,a,s,l,c,h,u=this.attributes.position.array,p=this.attributes.normal.array,f=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,E=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,y=this.offsets;for(r=0,i=y.length;i>r;++r){var T=y[r].start,R=y[r].count,x=y[r].index;for(e=T,t=T+R;t>e;e+=3)o=x+v[e],a=x+v[e+1],s=x+v[e+2],l=u[3*o],c=u[3*o+1],h=u[3*o+2],f.set(l,c,h),l=u[3*a],c=u[3*a+1],h=u[3*a+2],d.set(l,c,h),l=u[3*s],c=u[3*s+1],h=u[3*s+2],m.set(l,c,h),E.subVectors(m,d),g.subVectors(f,d),E.cross(g),p[3*o]+=E.x,p[3*o+1]+=E.y,p[3*o+2]+=E.z,p[3*a]+=E.x,p[3*a+1]+=E.y,p[3*a+2]+=E.z,p[3*s]+=E.x,p[3*s+1]+=E.y,p[3*s+2]+=E.z}}else for(e=0,t=u.length;t>e;e+=9)l=u[e],c=u[e+1],h=u[e+2],f.set(l,c,h),l=u[e+3],c=u[e+4],h=u[e+5],d.set(l,c,h),l=u[e+6],c=u[e+7],h=u[e+8],m.set(l,c,h),E.subVectors(m,d),g.subVectors(f,d),E.cross(g),p[e]=E.x,p[e+1]=E.y,p[e+2]=E.z,p[e+3]=E.x,p[e+4]=E.y,p[e+5]=E.z,p[e+6]=E.x,p[e+7]=E.y,p[e+8]=E.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,r,i,n=this.attributes.normal.array,o=0,a=n.length;a>o;o+=3)e=n[o],t=n[o+1],r=n[o+2],i=1/Math.sqrt(e*e+t*t+r*r),n[o]*=i,n[o+1]*=i,n[o+2]*=i},computeTangents:function(){function e(e,t,r){p=i[3*e],f=i[3*e+1],d=i[3*e+2],m=i[3*t],E=i[3*t+1],g=i[3*t+2],v=i[3*r],y=i[3*r+1],T=i[3*r+2],R=o[2*e],x=o[2*e+1],b=o[2*t],H=o[2*t+1],w=o[2*r],S=o[2*r+1],_=m-p,M=v-p,C=E-f,A=y-f,D=g-d,L=T-d,P=b-R,F=w-R,N=H-x,U=S-x,B=1/(P*U-F*N),W.set((U*_-N*M)*B,(U*C-N*A)*B,(U*D-N*L)*B),q.set((P*M-F*_)*B,(P*A-F*C)*B,(P*L-F*D)*B),c[e].add(W),c[t].add(W),c[r].add(W),h[e].add(q),h[t].add(q),h[r].add(q)}function t(e){rt.x=n[3*e],rt.y=n[3*e+1],rt.z=n[3*e+2],it.copy(rt),Q=c[e],et.copy(Q),et.sub(rt.multiplyScalar(rt.dot(Q))).normalize(),tt.crossVectors(it,Q),Z=tt.dot(h[e]),$=0>Z?-1:1,l[4*e]=et.x,l[4*e+1]=et.y,l[4*e+2]=et.z,l[4*e+3]=$}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()"),void 0;var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,o=this.attributes.uv.array,a=i.length/3;if(void 0===this.attributes.tangent){var s=4*a;this.attributes.tangent={itemSize:4,array:new Float32Array(s),numItems:s}}for(var l=this.attributes.tangent.array,c=[],h=[],u=0;a>u;u++)c[u]=new THREE.Vector3,h[u]=new THREE.Vector3;var p,f,d,m,E,g,v,y,T,R,x,b,H,w,S,_,M,C,A,D,L,P,F,N,U,B,O,I,z,V,k,j,G,W=new THREE.Vector3,q=new THREE.Vector3,X=this.offsets;for(z=0,V=X.length;V>z;++z){var Y=X[z].start,K=X[z].count,J=X[z].index;for(O=Y,I=Y+K;I>O;O+=3)k=J+r[O],j=J+r[O+1],G=J+r[O+2],e(k,j,G)}var $,Q,Z,et=new THREE.Vector3,tt=new THREE.Vector3,rt=new THREE.Vector3,it=new THREE.Vector3;for(z=0,V=X.length;V>z;++z){var Y=X[z].start,K=X[z].count,J=X[z].index;for(O=Y,I=Y+K;I>O;O+=3)k=J+r[O],j=J+r[O+1],G=J+r[O+2],t(k),t(j),t(G)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),this.rotationAutoUpdate===!0&&(this.useQuaternion===!1?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,r,i,n,o){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,o){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=o,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,n=e*t,o=Math.abs(n-i),a=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*o/this.fullWidth,i+(this.x+this.width)*o/this.fullWidth,t-(this.y+this.height)*a/this.fullHeight,t-this.y*a/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,r,i,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/2,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t+=e.total?(100*e.loaded/e.total).toFixed(0)+"%":(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(1>t.length?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var r=[],i=0;e.length>i;++i)r[i]=THREE.Loader.prototype.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;r>t;t++){var i=e[t];if(i instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){function r(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function i(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function n(e,t){var n=new Image;n.onload=function(){if(r(this.width)&&r(this.height))e.image=this;else{var t=i(this.width),n=i(this.height);e.image.width=t,e.image.height=n,e.image.getContext("2d").drawImage(this,0,0,t,n)}e.needsUpdate=!0},n.crossOrigin=s.crossOrigin,n.src=t}function o(e,r,i,o,a,s,l){var c=i.toLowerCase().endsWith(".dds"),h=t+"/"+i;if(c){var u=THREE.ImageUtils.loadCompressedTexture(h);e[r]=u}else{var u=document.createElement("canvas");e[r]=new THREE.Texture(u)}if(e[r].sourceFile=i,o&&(e[r].repeat.set(o[0],o[1]),1!==o[0]&&(e[r].wrapS=THREE.RepeatWrapping),1!==o[1]&&(e[r].wrapT=THREE.RepeatWrapping)),a&&e[r].offset.set(a[0],a[1]),s){var p={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==p[s[0]]&&(e[r].wrapS=p[s[0]]),void 0!==p[s[1]]&&(e[r].wrapT=p[s[1]])}l&&(e[r].anisotropy=l),c||n(e[r],h)}function a(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s=this,l="MeshLambertMaterial",c={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var h=e.shading.toLowerCase();"phong"===h?l="MeshPhongMaterial":"basic"===h&&(l="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(c.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(c.transparent=e.transparent),void 0!==e.depthTest&&(c.depthTest=e.depthTest),void 0!==e.depthWrite&&(c.depthWrite=e.depthWrite),void 0!==e.visible&&(c.visible=e.visible),void 0!==e.flipSided&&(c.side=THREE.BackSide),void 0!==e.doubleSided&&(c.side=THREE.DoubleSide),void 0!==e.wireframe&&(c.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?c.vertexColors=THREE.FaceColors:e.vertexColors&&(c.vertexColors=THREE.VertexColors)),e.colorDiffuse?c.color=a(e.colorDiffuse):e.DbgColor&&(c.color=e.DbgColor),e.colorSpecular&&(c.specular=a(e.colorSpecular)),e.colorAmbient&&(c.ambient=a(e.colorAmbient)),e.transparency&&(c.opacity=e.transparency),e.specularCoef&&(c.shininess=e.specularCoef),e.mapDiffuse&&t&&o(c,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&o(c,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&o(c,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&o(c,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&o(c,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(c.bumpScale=e.mapBumpScale),e.mapNormal){var u=THREE.ShaderLib.normalmap,p=THREE.UniformsUtils.clone(u.uniforms);p.tNormal.value=c.normalMap,e.mapNormalFactor&&p.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),c.map&&(p.tDiffuse.value=c.map,p.enableDiffuse.value=!0),c.specularMap&&(p.tSpecular.value=c.specularMap,p.enableSpecular.value=!0),c.lightMap&&(p.tAO.value=c.lightMap,p.enableAO.value=!0),p.uDiffuseColor.value.setHex(c.color),p.uSpecularColor.value.setHex(c.specular),p.uAmbientColor.value.setHex(c.ambient),p.uShininess.value=c.shininess,void 0!==c.opacity&&(p.uOpacity.value=c.opacity);
var f={fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:p,lights:!0,fog:!0},d=new THREE.ShaderMaterial(f);c.transparent&&(d.transparent=!0)}else var d=new THREE[l](c);return void 0!==e.DbgName&&(d.name=e.DbgName),d}},THREE.ImageLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var r=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){r.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){r.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),r.crossOrigin&&(t.crossOrigin=r.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var o=new XMLHttpRequest,a=0;o.onreadystatechange=function(){if(o.readyState===o.DONE)if(200===o.status||0===o.status){if(o.responseText){var s=JSON.parse(o.responseText);e.createModel(s,r,i)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+o.status+"]");else o.readyState===o.LOADING?n&&(0===a&&(a=o.getResponseHeader("Content-Length")),n({total:a,loaded:o.responseText.length})):o.readyState===o.HEADERS_RECEIVED&&(a=o.getResponseHeader("Content-Length"))},o.open("GET",t,!0),o.withCredentials=this.withCredentials,o.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,r){function i(t){function r(e,t){return e&1<<t}var i,n,o,s,l,c,h,u,p,f,d,m,E,g,v,y,T,R,x,b,H,w,S,_,M,C,A,D=e.faces,L=e.vertices,P=e.normals,F=e.colors,N=0;for(i=0;e.uvs.length>i;i++)e.uvs[i].length&&N++;for(i=0;N>i;i++)a.faceUvs[i]=[],a.faceVertexUvs[i]=[];for(s=0,l=L.length;l>s;)b=new THREE.Vector3,b.x=L[s++]*t,b.y=L[s++]*t,b.z=L[s++]*t,a.vertices.push(b);for(s=0,l=D.length;l>s;){if(d=D[s++],m=r(d,0),E=r(d,1),g=r(d,2),v=r(d,3),y=r(d,4),T=r(d,5),R=r(d,6),x=r(d,7),m?(H=new THREE.Face4,H.a=D[s++],H.b=D[s++],H.c=D[s++],H.d=D[s++],c=4):(H=new THREE.Face3,H.a=D[s++],H.b=D[s++],H.c=D[s++],c=3),E&&(f=D[s++],H.materialIndex=f),o=a.faces.length,g)for(i=0;N>i;i++)_=e.uvs[i],p=D[s++],C=_[2*p],A=_[2*p+1],a.faceUvs[i][o]=new THREE.Vector2(C,A);if(v)for(i=0;N>i;i++){for(_=e.uvs[i],M=[],n=0;c>n;n++)p=D[s++],C=_[2*p],A=_[2*p+1],M[n]=new THREE.Vector2(C,A);a.faceVertexUvs[i][o]=M}if(y&&(u=3*D[s++],S=new THREE.Vector3,S.x=P[u++],S.y=P[u++],S.z=P[u],H.normal=S),T)for(i=0;c>i;i++)u=3*D[s++],S=new THREE.Vector3,S.x=P[u++],S.y=P[u++],S.z=P[u],H.vertexNormals.push(S);if(R&&(h=D[s++],w=new THREE.Color(F[h]),H.color=w),x)for(i=0;c>i;i++)h=D[s++],w=new THREE.Color(F[h]),H.vertexColors.push(w);a.faces.push(H)}}function n(){var t,r,i,n,o,s,l,c,h,u;if(e.skinWeights)for(t=0,r=e.skinWeights.length;r>t;t+=2)i=e.skinWeights[t],n=e.skinWeights[t+1],o=0,s=0,a.skinWeights.push(new THREE.Vector4(i,n,o,s));if(e.skinIndices)for(t=0,r=e.skinIndices.length;r>t;t+=2)l=e.skinIndices[t],c=e.skinIndices[t+1],h=0,u=0,a.skinIndices.push(new THREE.Vector4(l,c,h,u));a.bones=e.bones,a.animation=e.animation}function o(t){if(void 0!==e.morphTargets){var r,i,n,o,s,l;for(r=0,i=e.morphTargets.length;i>r;r++)for(a.morphTargets[r]={},a.morphTargets[r].name=e.morphTargets[r].name,a.morphTargets[r].vertices=[],s=a.morphTargets[r].vertices,l=e.morphTargets[r].vertices,n=0,o=l.length;o>n;n+=3){var c=new THREE.Vector3;c.x=l[n]*t,c.y=l[n+1]*t,c.z=l[n+2]*t,s.push(c)}}if(void 0!==e.morphColors){var r,i,h,u,p,f,d;for(r=0,i=e.morphColors.length;i>r;r++)for(a.morphColors[r]={},a.morphColors[r].name=e.morphColors[r].name,a.morphColors[r].colors=[],p=a.morphColors[r].colors,f=e.morphColors[r].colors,h=0,u=f.length;u>h;h+=3)d=new THREE.Color(16755200),d.setRGB(f[h],f[h+1],f[h+2]),p.push(d)}}var a=new THREE.Geometry,s=void 0!==e.scale?1/e.scale:1;i(s),n(),o(s),a.computeCentroids(),a.computeFaceNormals();var l=this.initMaterials(e.materials,r);this.needsTangents(l)&&a.computeTangents(),t(a,l)},THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var e=this,t=0,r=0,i=function(){t++,e.dispatchEvent({type:"progress",loaded:t,total:r}),t===r&&e.dispatchEvent({type:"load"})};this.add=function(e){r++,e.addEventListener("load",i,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var r=this,i=new XMLHttpRequest;i.onreadystatechange=function(){if(4===i.readyState)if(200===i.status||0===i.status){var n=JSON.parse(i.responseText);r.parse(n,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+i.status+"]")},i.open("GET",e,!0),i.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,r){function i(e,t){return"relativeToHTML"==t?e:M+"/"+e}function n(){o(S.scene,A.objects)}function o(e,t){var r,n,a,s,l,h;for(var u in t)if(void 0===S.objects[u]){var p=t[u],E=null;if(p.type&&p.type in _.hierarchyHandlerMap){if(void 0===p.loading){var g={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},v={};for(var x in p)x in g||(v[x]=p[x]);d=S.materials[p.material],p.loading=!0;var b=_.hierarchyHandlerMap[p.type].loaderObject;b.options?b.load(i(p.url,A.urlBaseType),c(u,e,d,p)):b.load(i(p.url,A.urlBaseType),c(u,e,d,p),v)}}else if(void 0!==p.geometry){if(f=S.geometries[p.geometry]){var H=!1;if(d=S.materials[p.material],H=d instanceof THREE.ShaderMaterial,a=p.position,s=p.rotation,l=p.scale,r=p.matrix,h=p.quaternion,p.material||(d=new THREE.MeshFaceMaterial(S.face_materials[p.geometry])),d instanceof THREE.MeshFaceMaterial&&0===d.materials.length&&(d=new THREE.MeshFaceMaterial(S.face_materials[p.geometry])),d instanceof THREE.MeshFaceMaterial)for(var w=0;d.materials.length>w;w++)H=H||d.materials[w]instanceof THREE.ShaderMaterial;H&&f.computeTangents(),p.skin?E=new THREE.SkinnedMesh(f,d):p.morph?(E=new THREE.MorphAnimMesh(f,d),void 0!==p.duration&&(E.duration=p.duration),void 0!==p.time&&(E.time=p.time),void 0!==p.mirroredLoop&&(E.mirroredLoop=p.mirroredLoop),d.morphNormals&&f.computeMorphNormals()):E=new THREE.Mesh(f,d),E.name=u,r?(E.matrixAutoUpdate=!1,E.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(E.position.set(a[0],a[1],a[2]),h?(E.quaternion.set(h[0],h[1],h[2],h[3]),E.useQuaternion=!0):E.rotation.set(s[0],s[1],s[2]),E.scale.set(l[0],l[1],l[2])),E.visible=p.visible,E.castShadow=p.castShadow,E.receiveShadow=p.receiveShadow,e.add(E),S.objects[u]=E}}else"DirectionalLight"===p.type||"PointLight"===p.type||"AmbientLight"===p.type?(T=void 0!==p.color?p.color:16777215,R=void 0!==p.intensity?p.intensity:1,"DirectionalLight"===p.type?(a=p.direction,y=new THREE.DirectionalLight(T,R),y.position.set(a[0],a[1],a[2]),p.target&&(C.push({object:y,targetName:p.target}),y.target=null)):"PointLight"===p.type?(a=p.position,n=p.distance,y=new THREE.PointLight(T,R,n),y.position.set(a[0],a[1],a[2])):"AmbientLight"===p.type&&(y=new THREE.AmbientLight(T)),e.add(y),y.name=u,S.lights[u]=y,S.objects[u]=y):"PerspectiveCamera"===p.type||"OrthographicCamera"===p.type?("PerspectiveCamera"===p.type?m=new THREE.PerspectiveCamera(p.fov,p.aspect,p.near,p.far):"OrthographicCamera"===p.type&&(m=new THREE.OrthographicCamera(p.left,p.right,p.top,p.bottom,p.near,p.far)),a=p.position,m.position.set(a[0],a[1],a[2]),e.add(m),m.name=u,S.cameras[u]=m,S.objects[u]=m):(a=p.position,s=p.rotation,l=p.scale,h=p.quaternion,E=new THREE.Object3D,E.name=u,E.position.set(a[0],a[1],a[2]),h?(E.quaternion.set(h[0],h[1],h[2],h[3]),E.useQuaternion=!0):E.rotation.set(s[0],s[1],s[2]),E.scale.set(l[0],l[1],l[2]),E.visible=void 0!==p.visible?p.visible:!1,e.add(E),S.objects[u]=E,S.empties[u]=E);if(E){if(void 0!==p.properties)for(var M in p.properties){var D=p.properties[M];E.properties[M]=D}if(void 0!==p.groups)for(var w=0;p.groups.length>w;w++){var L=p.groups[w];void 0===S.groups[L]&&(S.groups[L]=[]),S.groups[L].push(u)}void 0!==p.children&&o(E,p.children)}}}function a(e,t,r){S.geometries[r]=e,S.face_materials[r]=t,n()}function s(e,t,r,i,o){var a=o.position,s=o.rotation,l=o.quaternion,c=o.scale;e.position.set(a[0],a[1],a[2]),l?(e.quaternion.set(l[0],l[1],l[2],l[3]),e.useQuaternion=!0):e.rotation.set(s[0],s[1],s[2]),e.scale.set(c[0],c[1],c[2]),i&&e.traverse(function(e){e.material=i});var h=void 0!==o.visible?o.visible:!0;e.traverse(function(e){e.visible=h}),r.add(e),e.name=t,S.objects[t]=e,n()}function l(e){return function(t,r){a(t,r,e),x-=1,_.onLoadComplete(),u()}}function c(e,t,r,i){return function(n){var o;o=n.content?n.content:n.dae?n.scene:n,s(o,e,t,r,i),x-=1,_.onLoadComplete(),u()}}function h(e){return function(t,r){S.geometries[e]=t,S.face_materials[e]=r}}function u(){var e={totalModels:H,totalTextures:w,loadedModels:H-x,loadedTextures:w-b};_.callbackProgress(e,S),_.onLoadProgress(),0===x&&0===b&&(p(),t(S))}function p(){for(var e=0;C.length>e;e++){var t=C[e],r=S.objects[t.targetName];r?t.object.target=r:(t.object.target=new THREE.Object3D,S.scene.add(t.object.target)),t.object.target.properties.targetInverse=t.object}}var f,d,m,E,g,v,y,T,R,x,b,H,w,S,_=this,M=THREE.Loader.prototype.extractUrlBase(r),C=[],A=e;for(var D in this.geometryHandlerMap){var L=this.geometryHandlerMap[D].loaderClass;this.geometryHandlerMap[D].loaderObject=new L}for(var D in this.hierarchyHandlerMap){var L=this.hierarchyHandlerMap[D].loaderClass;this.hierarchyHandlerMap[D].loaderObject=new L}if(x=0,b=0,S={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},A.transform){var P=A.transform.position,F=A.transform.rotation,N=A.transform.scale;P&&S.scene.position.set(P[0],P[1],P[2]),F&&S.scene.rotation.set(F[0],F[1],F[2]),N&&S.scene.scale.set(N[0],N[1],N[2]),(P||F||N)&&(S.scene.updateMatrix(),S.scene.updateMatrixWorld())}var U,B,O=function(e){b-=e,u(),_.onLoadComplete()},I=function(e){return function(){O(e)}};for(U in A.fogs)B=A.fogs[U],"linear"===B.type?E=new THREE.Fog(0,B.near,B.far):"exp2"===B.type&&(E=new THREE.FogExp2(0,B.density)),v=B.color,E.color.setRGB(v[0],v[1],v[2]),S.fogs[U]=E;var z,V;for(z in A.geometries)V=A.geometries[z],V.type in this.geometryHandlerMap&&(x+=1,_.onLoadStart());var k,j;for(k in A.objects)j=A.objects[k],j.type&&j.type in this.hierarchyHandlerMap&&(x+=1,_.onLoadStart());H=x;for(z in A.geometries)if(V=A.geometries[z],"cube"===V.type)f=new THREE.CubeGeometry(V.width,V.height,V.depth,V.widthSegments,V.heightSegments,V.depthSegments),S.geometries[z]=f;else if("plane"===V.type)f=new THREE.PlaneGeometry(V.width,V.height,V.widthSegments,V.heightSegments),S.geometries[z]=f;else if("sphere"===V.type)f=new THREE.SphereGeometry(V.radius,V.widthSegments,V.heightSegments),S.geometries[z]=f;else if("cylinder"===V.type)f=new THREE.CylinderGeometry(V.topRad,V.botRad,V.height,V.radSegs,V.heightSegs),S.geometries[z]=f;else if("torus"===V.type)f=new THREE.TorusGeometry(V.radius,V.tube,V.segmentsR,V.segmentsT),S.geometries[z]=f;else if("icosahedron"===V.type)f=new THREE.IcosahedronGeometry(V.radius,V.subdivisions),S.geometries[z]=f;else if(V.type in this.geometryHandlerMap){var G={};for(var W in V)"type"!==W&&"url"!==W&&(G[W]=V[W]);var q=this.geometryHandlerMap[V.type].loaderObject;q.load(i(V.url,A.urlBaseType),l(z),G)}else if("embedded"===V.type){var X=A.embeds[V.id],Y="";if(X.metadata=A.metadata,X){var K=this.geometryHandlerMap.ascii.loaderObject;K.createModel(X,h(z),Y)}}var J,$;for(J in A.textures)if($=A.textures[J],$.url instanceof Array){b+=$.url.length;for(var Q=0;$.url.length>Q;Q++)_.onLoadStart()}else b+=1,_.onLoadStart();w=b;for(J in A.textures){if($=A.textures[J],void 0!==$.mapping&&void 0!==THREE[$.mapping]&&($.mapping=new THREE[$.mapping]),$.url instanceof Array){for(var Z=$.url.length,et=[],tt=0;Z>tt;tt++)et[tt]=i($.url[tt],A.urlBaseType);var rt=et[0].endsWith(".dds");g=rt?THREE.ImageUtils.loadCompressedTextureCube(et,$.mapping,I(Z)):THREE.ImageUtils.loadTextureCube(et,$.mapping,I(Z))}else{var rt=$.url.toLowerCase().endsWith(".dds"),it=i($.url,A.urlBaseType),nt=I(1);if(g=rt?THREE.ImageUtils.loadCompressedTexture(it,$.mapping,nt):THREE.ImageUtils.loadTexture(it,$.mapping,nt),void 0!==THREE[$.minFilter]&&(g.minFilter=THREE[$.minFilter]),void 0!==THREE[$.magFilter]&&(g.magFilter=THREE[$.magFilter]),$.anisotropy&&(g.anisotropy=$.anisotropy),$.repeat&&(g.repeat.set($.repeat[0],$.repeat[1]),1!==$.repeat[0]&&(g.wrapS=THREE.RepeatWrapping),1!==$.repeat[1]&&(g.wrapT=THREE.RepeatWrapping)),$.offset&&g.offset.set($.offset[0],$.offset[1]),$.wrap){var ot={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==ot[$.wrap[0]]&&(g.wrapS=ot[$.wrap[0]]),void 0!==ot[$.wrap[1]]&&(g.wrapT=ot[$.wrap[1]])}}S.textures[J]=g}var at,st,lt;for(at in A.materials){st=A.materials[at];for(lt in st.parameters)if("envMap"===lt||"map"===lt||"lightMap"===lt||"bumpMap"===lt)st.parameters[lt]=S.textures[st.parameters[lt]];else if("shading"===lt)st.parameters[lt]="flat"===st.parameters[lt]?THREE.FlatShading:THREE.SmoothShading;else if("side"===lt)st.parameters[lt]="double"==st.parameters[lt]?THREE.DoubleSide:"back"==st.parameters[lt]?THREE.BackSide:THREE.FrontSide;else if("blending"===lt)st.parameters[lt]=st.parameters[lt]in THREE?THREE[st.parameters[lt]]:THREE.NormalBlending;else if("combine"===lt)st.parameters[lt]=st.parameters[lt]in THREE?THREE[st.parameters[lt]]:THREE.MultiplyOperation;else if("vertexColors"===lt)"face"==st.parameters[lt]?st.parameters[lt]=THREE.FaceColors:st.parameters[lt]&&(st.parameters[lt]=THREE.VertexColors);else if("wrapRGB"===lt){var ct=st.parameters[lt];st.parameters[lt]=new THREE.Vector3(ct[0],ct[1],ct[2])}if(void 0!==st.parameters.opacity&&1>st.parameters.opacity&&(st.parameters.transparent=!0),st.parameters.normalMap){var ht=THREE.ShaderLib.normalmap,ut=THREE.UniformsUtils.clone(ht.uniforms),pt=st.parameters.color,ft=st.parameters.specular,dt=st.parameters.ambient,mt=st.parameters.shininess;ut.tNormal.value=S.textures[st.parameters.normalMap],st.parameters.normalScale&&ut.uNormalScale.value.set(st.parameters.normalScale[0],st.parameters.normalScale[1]),st.parameters.map&&(ut.tDiffuse.value=st.parameters.map,ut.enableDiffuse.value=!0),st.parameters.envMap&&(ut.tCube.value=st.parameters.envMap,ut.enableReflection.value=!0,ut.uReflectivity.value=st.parameters.reflectivity),st.parameters.lightMap&&(ut.tAO.value=st.parameters.lightMap,ut.enableAO.value=!0),st.parameters.specularMap&&(ut.tSpecular.value=S.textures[st.parameters.specularMap],ut.enableSpecular.value=!0),st.parameters.displacementMap&&(ut.tDisplacement.value=S.textures[st.parameters.displacementMap],ut.enableDisplacement.value=!0,ut.uDisplacementBias.value=st.parameters.displacementBias,ut.uDisplacementScale.value=st.parameters.displacementScale),ut.uDiffuseColor.value.setHex(pt),ut.uSpecularColor.value.setHex(ft),ut.uAmbientColor.value.setHex(dt),ut.uShininess.value=mt,st.parameters.opacity&&(ut.uOpacity.value=st.parameters.opacity);var Et={fragmentShader:ht.fragmentShader,vertexShader:ht.vertexShader,uniforms:ut,lights:!0,fog:!0};d=new THREE.ShaderMaterial(Et)}else d=new THREE[st.type](st.parameters);S.materials[at]=d}for(at in A.materials)if(st=A.materials[at],st.parameters.materials){for(var gt=[],tt=0;st.parameters.materials.length>tt;tt++){var vt=st.parameters.materials[tt];gt.push(S.materials[vt])}S.materials[at].materials=gt}n(),S.cameras&&A.defaults.camera&&(S.currentCamera=S.cameras[A.defaults.camera]),S.fogs&&A.defaults.fog&&(S.scene.fog=S.fogs[A.defaults.fog]),_.callbackSync(S),u()},THREE.TextureLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,r=new Image;r.addEventListener("load",function(){var e=new THREE.Texture(r);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),r.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(r.crossOrigin=t.crossOrigin),r.src=e}},THREE.Material=function(){THREE.EventDispatcher.call(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=!1,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color&&r instanceof THREE.Color?i.copy(r):i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]=r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),e=e||{},void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,r,i,n,o,a,s,l){THREE.EventDispatcher.call(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==o?o:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==a?a:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,n,o,a,s,l,c,h){THREE.Texture.call(this,null,o,a,s,l,c,i,n,h),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,n,o,a,s,l,c,h){THREE.Texture.call(this,null,o,a,s,l,c,i,n,h),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e
},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var r,i=this.children.length;for(r=0;i>r;r++)this.children[r].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==r?r:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var i,n,o,a,s,l;if(this.geometry&&void 0!==this.geometry.bones){for(i=0;this.geometry.bones.length>i;i++)o=this.geometry.bones[i],a=o.pos,s=o.rotq,l=o.scl,n=this.addBone(),n.name=o.name,n.position.set(a[0],a[1],a[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),n.useQuaternion=!0,void 0!==l?n.scale.set(l[0],l[1],l[2]):n.scale.set(1,1,1);for(i=0;this.bones.length>i;i++)o=this.geometry.bones[i],n=this.bones[i],-1===o.parent?this.add(n):this.bones[o.parent].add(n);var c=this.bones.length;if(this.useVertexTexture){var h;h=c>256?64:c>64?32:c>16?16:8,this.boneTextureWidth=h,this.boneTextureHeight=h,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*c);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++){var i=this.children[t];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var n=0,o=this.bones.length;o>n;n++){var a=new THREE.Matrix4;a.getInverse(this.bones[n].skinMatrix),this.boneInverses.push(a)}}for(var n=0,o=this.bones.length;o>n;n++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[n].skinMatrix,this.boneInverses[n]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*n);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;this.geometry.skinIndices.length>e;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();1/0!==r?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,n=0,o=e.morphTargets.length;o>n;n++){var a=e.morphTargets[n],s=a.name.match(i);if(s&&s.length>1){var l=s[1];s[2],r[l]||(r[l]={start:1/0,end:-1/0});var c=r[l];c.start>n&&(c.start=n),n>c.end&&(c.end=n),t||(t=l)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=1e3*((r.end-r.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,0>this.time&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;this.LODs.length>r&&!(this.LODs[r].visibleAtDistance>t);r++);this.LODs.splice(r,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld);var t=e.matrixWorldInverse,r=-(t.elements[2]*this.matrixWorld.elements[12]+t.elements[6]*this.matrixWorld.elements[13]+t.elements[10]*this.matrixWorld.elements[14]+t.elements[14]);this.LODs[0].object3D.visible=!0;for(var i=1;this.LODs.length>i&&r>=this.LODs[i].visibleAtDistance;i++)this.LODs[i-1].object3D.visible=!1,this.LODs[i].object3D.visible=!0;for(;this.LODs.length>i;i++)this.LODs[i].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var r=0;e.children.length>r;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else if(!(e instanceof THREE.Camera)){var t=this.__objects.indexOf(e);if(-1!==t){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var r=this.__objectsAdded.indexOf(e);-1!==r&&this.__objectsAdded.splice(r,1)}}for(var i=0;e.children.length>i;i++)this.__removeObject(e.children[i])},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){Z!==e&&(J.globalAlpha=e,Z=e)}function r(e){et!==e&&(e===THREE.NormalBlending?J.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?J.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(J.globalCompositeOperation="darker"),et=e)}function i(e){it!==e&&(J.lineWidth=e,it=e)}function n(e){nt!==e&&(J.lineCap=e,nt=e)}function o(e){ot!==e&&(J.lineJoin=e,ot=e)}function a(e){tt!==e&&(J.strokeStyle=e,tt=e)}function s(e){rt!==e&&(J.fillStyle=e,rt=e)}console.log("THREE.CanvasRenderer",THREE.REVISION),e=e||{};var l,c,h,u,p,f,d,m,E,g,v,y,T,R,x,b,H,w,S,_,M,C,A,D,L,P,F,N,U,B,O,I,z,V,k,j,G,W,q,X=this,Y=new THREE.Projector,K=void 0!==e.canvas?e.canvas:document.createElement("canvas"),J=K.getContext("2d"),$=new THREE.Color(0),Q=0,Z=1,et=0,tt=null,rt=null,it=null,nt=null,ot=null,at=new THREE.RenderableVertex,st=new THREE.RenderableVertex,lt=new THREE.Color,ct=new THREE.Color,ht=new THREE.Color,ut=new THREE.Color,pt=new THREE.Color,ft=new THREE.Color,dt=new THREE.Color,mt=new THREE.Color,Et={},gt={},vt=new THREE.Box2,yt=new THREE.Box2,Tt=new THREE.Box2,Rt=!1,xt=new THREE.Color,bt=new THREE.Color,Ht=new THREE.Color,wt=(2*Math.PI,new THREE.Vector3),St=16;V=document.createElement("canvas"),V.width=V.height=2,k=V.getContext("2d"),k.fillStyle="rgba(0,0,0,1)",k.fillRect(0,0,2,2),j=k.getImageData(0,0,2,2),G=j.data,W=document.createElement("canvas"),W.width=W.height=St,q=W.getContext("2d"),q.translate(-St/2,-St/2),q.scale(St,St),St--,this.domElement=K,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){u=e*this.devicePixelRatio,p=t*this.devicePixelRatio,f=Math.floor(u/2),d=Math.floor(p/2),K.width=u,K.height=p,K.style.width=e+"px",K.style.height=t+"px",vt.set(new THREE.Vector2(-f,-d),new THREE.Vector2(f,d)),yt.set(new THREE.Vector2(-f,-d),new THREE.Vector2(f,d)),Z=1,et=0,tt=null,rt=null,it=null,nt=null,ot=null},this.setClearColor=function(e,t){$.copy(e),Q=void 0!==t?t:1,yt.set(new THREE.Vector2(-f,-d),new THREE.Vector2(f,d))},this.setClearColorHex=function(e,t){$.setHex(e),Q=void 0!==t?t:1,yt.set(new THREE.Vector2(-f,-d),new THREE.Vector2(f,d))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){J.setTransform(1,0,0,-1,f,d),yt.empty()===!1&&(yt.intersect(vt),yt.expandByScalar(2),1>Q&&J.clearRect(0|yt.min.x,0|yt.min.y,0|yt.max.x-yt.min.x,0|yt.max.y-yt.min.y),Q>0&&(r(THREE.NormalBlending),t(1),s("rgba("+Math.floor(255*$.r)+","+Math.floor(255*$.g)+","+Math.floor(255*$.b)+","+Q+")"),J.fillRect(0|yt.min.x,0|yt.min.y,0|yt.max.x-yt.min.x,0|yt.max.y-yt.min.y)),yt.makeEmpty())},this.render=function(e,u){function p(){xt.setRGB(0,0,0),bt.setRGB(0,0,0),Ht.setRGB(0,0,0);for(var e=0,t=h.length;t>e;e++){var r=h[e],i=r.color;r instanceof THREE.AmbientLight?xt.add(i):r instanceof THREE.DirectionalLight?bt.add(i):r instanceof THREE.PointLight&&Ht.add(i)}}function K(e,t,r){for(var i=0,n=h.length;n>i;i++){var o=h[i];if(mt.copy(o.color),o instanceof THREE.DirectionalLight){var a=o.matrixWorld.getPosition().normalize(),s=t.dot(a);if(0>=s)continue;s*=o.intensity,r.add(mt.multiplyScalar(s))}else if(o instanceof THREE.PointLight){var a=o.matrixWorld.getPosition(),s=t.dot(wt.subVectors(a,e).normalize());if(0>=s)continue;if(s*=0==o.distance?1:1-Math.min(e.distanceTo(a)/o.distance,1),0==s)continue;s*=o.intensity,r.add(mt.multiplyScalar(s))}}}function $(e,i,n){t(n.opacity),r(n.blending);var o,l,c,h,u,p,m;if(n instanceof THREE.ParticleBasicMaterial)if(null===n.map){if(c=i.object.scale.x,h=i.object.scale.y,c*=i.scale.x*f,h*=i.scale.y*d,Tt.min.set(e.x-c,e.y-h),Tt.max.set(e.x+c,e.y+h),vt.isIntersectionBox(Tt)===!1)return;s(n.color.getStyle()),J.save(),J.translate(e.x,e.y),J.rotate(-i.rotation),J.scale(c,h),J.fillRect(-1,-1,2,2),J.restore()}else{if(u=n.map.image,p=u.width>>1,m=u.height>>1,c=i.scale.x*f,h=i.scale.y*d,o=c*p,l=h*m,Tt.min.set(e.x-o,e.y-l),Tt.max.set(e.x+o,e.y+l),vt.isIntersectionBox(Tt)===!1)return;J.save(),J.translate(e.x,e.y),J.rotate(-i.rotation),J.scale(c,-h),J.translate(-p,-m),J.drawImage(u,0,0),J.restore()}else if(n instanceof THREE.ParticleCanvasMaterial){if(o=i.scale.x*f,l=i.scale.y*d,Tt.min.set(e.x-o,e.y-l),Tt.max.set(e.x+o,e.y+l),vt.isIntersectionBox(Tt)===!1)return;a(n.color.getStyle()),s(n.color.getStyle()),J.save(),J.translate(e.x,e.y),J.rotate(-i.rotation),J.scale(o,l),n.program(J),J.restore()}}function Q(e,s,l,c){t(c.opacity),r(c.blending),J.beginPath(),J.moveTo(e.positionScreen.x,e.positionScreen.y),J.lineTo(s.positionScreen.x,s.positionScreen.y),c instanceof THREE.LineBasicMaterial&&(i(c.linewidth),n(c.linecap),o(c.linejoin),a(c.color.getStyle()),J.stroke(),Tt.expandByScalar(2*c.linewidth))}function Z(e,i,n,o,a,s,l,c){if(X.info.render.vertices+=3,X.info.render.faces++,t(c.opacity),r(c.blending),y=e.positionScreen.x,T=e.positionScreen.y,R=i.positionScreen.x,x=i.positionScreen.y,b=n.positionScreen.x,H=n.positionScreen.y,tt(y,T,R,x,b,H),(c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial)&&null===c.map&&null===c.map)ft.copy(c.color),dt.copy(c.emissive),c.vertexColors===THREE.FaceColors&&ft.multiply(l.color),Rt===!0?c.wireframe===!1&&c.shading==THREE.SmoothShading&&3==l.vertexNormalsLength?(ct.copy(xt),ht.copy(xt),ut.copy(xt),K(l.v1.positionWorld,l.vertexNormalsModel[0],ct),K(l.v2.positionWorld,l.vertexNormalsModel[1],ht),K(l.v3.positionWorld,l.vertexNormalsModel[2],ut),ct.multiply(ft).add(dt),ht.multiply(ft).add(dt),ut.multiply(ft).add(dt),pt.addColors(ht,ut).multiplyScalar(.5),P=_t(ct,ht,ut,pt),St(y,T,R,x,b,H,0,0,1,0,0,1,P)):(lt.copy(xt),K(l.centroidModel,l.normalModel,lt),lt.multiply(ft).add(dt),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt)):c.wireframe===!0?it(c.color,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(c.color);else if(c instanceof THREE.MeshBasicMaterial||c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial)null!==c.map?c.map.mapping instanceof THREE.UVMapping&&(F=l.uvs[0],ot(y,T,R,x,b,H,F[o].x,F[o].y,F[a].x,F[a].y,F[s].x,F[s].y,c.map)):null!==c.envMap?c.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(wt.copy(l.vertexNormalsModelView[o]),N=.5*wt.x+.5,U=.5*wt.y+.5,wt.copy(l.vertexNormalsModelView[a]),B=.5*wt.x+.5,O=.5*wt.y+.5,wt.copy(l.vertexNormalsModelView[s]),I=.5*wt.x+.5,z=.5*wt.y+.5,ot(y,T,R,x,b,H,N,U,B,O,I,z,c.envMap)):(lt.copy(c.color),c.vertexColors===THREE.FaceColors&&lt.multiply(l.color),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt));else if(c instanceof THREE.MeshDepthMaterial){D=u.near,L=u.far;var h;h=1-Mt(e.positionScreen.z*e.positionScreen.w,D,L),ct.setRGB(h,h,h),h=1-Mt(i.positionScreen.z*i.positionScreen.w,D,L),ht.setRGB(h,h,h),h=1-Mt(n.positionScreen.z*n.positionScreen.w,D,L),ut.setRGB(h,h,h),pt.addColors(ht,ut).multiplyScalar(.5),P=_t(ct,ht,ut,pt),St(y,T,R,x,b,H,0,0,1,0,0,1,P)}else if(c instanceof THREE.MeshNormalMaterial){var p;c.shading==THREE.FlatShading?(p=l.normalModelView,lt.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt)):c.shading==THREE.SmoothShading&&(p=l.vertexNormalsModelView[o],ct.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),p=l.vertexNormalsModelView[a],ht.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),p=l.vertexNormalsModelView[s],ut.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),pt.addColors(ht,ut).multiplyScalar(.5),P=_t(ct,ht,ut,pt),St(y,T,R,x,b,H,0,0,1,0,0,1,P))}}function et(e,i,n,o,a,s,l,c,h){if(X.info.render.vertices+=4,X.info.render.faces++,t(c.opacity),r(c.blending),void 0!==c.map&&null!==c.map||void 0!==c.envMap&&null!==c.envMap)return Z(e,i,o,0,1,3,l,c,h),Z(a,n,s,1,2,3,l,c,h),void 0;if(y=e.positionScreen.x,T=e.positionScreen.y,R=i.positionScreen.x,x=i.positionScreen.y,b=n.positionScreen.x,H=n.positionScreen.y,w=o.positionScreen.x,S=o.positionScreen.y,_=a.positionScreen.x,M=a.positionScreen.y,C=s.positionScreen.x,A=s.positionScreen.y,c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial)ft.copy(c.color),dt.copy(c.emissive),c.vertexColors===THREE.FaceColors&&ft.multiply(l.color),Rt===!0?c.wireframe===!1&&c.shading==THREE.SmoothShading&&4==l.vertexNormalsLength?(ct.copy(xt),ht.copy(xt),ut.copy(xt),pt.copy(xt),K(l.v1.positionWorld,l.vertexNormalsModel[0],ct),K(l.v2.positionWorld,l.vertexNormalsModel[1],ht),K(l.v4.positionWorld,l.vertexNormalsModel[3],ut),K(l.v3.positionWorld,l.vertexNormalsModel[2],pt),ct.multiply(ft).add(dt),ht.multiply(ft).add(dt),ut.multiply(ft).add(dt),pt.multiply(ft).add(dt),P=_t(ct,ht,ut,pt),tt(y,T,R,x,w,S),St(y,T,R,x,w,S,0,0,1,0,0,1,P),tt(_,M,b,H,C,A),St(_,M,b,H,C,A,1,0,1,1,0,1,P)):(lt.copy(xt),K(l.centroidModel,l.normalModel,lt),lt.multiply(ft).add(dt),rt(y,T,R,x,b,H,w,S),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt)):(lt.addColors(ft,dt),rt(y,T,R,x,b,H,w,S),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt));else if(c instanceof THREE.MeshBasicMaterial)lt.copy(c.color),c.vertexColors===THREE.FaceColors&&lt.multiply(l.color),rt(y,T,R,x,b,H,w,S),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt);else if(c instanceof THREE.MeshNormalMaterial){var p;c.shading==THREE.FlatShading?(p=l.normalModelView,lt.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),rt(y,T,R,x,b,H,w,S),c.wireframe===!0?it(lt,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):nt(lt)):c.shading==THREE.SmoothShading&&(p=l.vertexNormalsModelView[0],ct.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),p=l.vertexNormalsModelView[1],ht.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),p=l.vertexNormalsModelView[3],ut.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),p=l.vertexNormalsModelView[2],pt.setRGB(p.x,p.y,p.z).multiplyScalar(.5).addScalar(.5),P=_t(ct,ht,ut,pt),tt(y,T,R,x,w,S),St(y,T,R,x,w,S,0,0,1,0,0,1,P),tt(_,M,b,H,C,A),St(_,M,b,H,C,A,1,0,1,1,0,1,P))}else c instanceof THREE.MeshDepthMaterial&&(D=u.near,L=u.far,ct.r=ct.g=ct.b=1-Mt(e.positionScreen.z*e.positionScreen.w,D,L),ht.r=ht.g=ht.b=1-Mt(i.positionScreen.z*i.positionScreen.w,D,L),ut.r=ut.g=ut.b=1-Mt(o.positionScreen.z*o.positionScreen.w,D,L),pt.r=pt.g=pt.b=1-Mt(n.positionScreen.z*n.positionScreen.w,D,L),P=_t(ct,ht,ut,pt),tt(y,T,R,x,w,S),St(y,T,R,x,w,S,0,0,1,0,0,1,P),tt(_,M,b,H,C,A),St(_,M,b,H,C,A,1,0,1,1,0,1,P))}function tt(e,t,r,i,n,o){J.beginPath(),J.moveTo(e,t),J.lineTo(r,i),J.lineTo(n,o),J.closePath()}function rt(e,t,r,i,n,o,a,s){J.beginPath(),J.moveTo(e,t),J.lineTo(r,i),J.lineTo(n,o),J.lineTo(a,s),J.closePath()}function it(e,t,r,s){i(t),n(r),o(s),a(e.getStyle()),J.stroke(),Tt.expandByScalar(2*t)}function nt(e){s(e.getStyle()),J.fill()}function ot(e,t,r,i,n,o,a,l,c,h,u,p,f){if(!(f instanceof THREE.DataTexture||void 0===f.image||0==f.image.width)){if(f.needsUpdate===!0){var d=f.wrapS==THREE.RepeatWrapping,m=f.wrapT==THREE.RepeatWrapping;Et[f.id]=J.createPattern(f.image,d===!0&&m===!0?"repeat":d===!0&&m===!1?"repeat-x":d===!1&&m===!0?"repeat-y":"no-repeat"),f.needsUpdate=!1}void 0===Et[f.id]?s("rgba(0,0,0,1)"):s(Et[f.id]);var E,g,v,y,T,R,x,b,H=f.offset.x/f.repeat.x,w=f.offset.y/f.repeat.y,S=f.image.width*f.repeat.x,_=f.image.height*f.repeat.y;if(a=(a+H)*S,l=(1-l+w)*_,c=(c+H)*S,h=(1-h+w)*_,u=(u+H)*S,p=(1-p+w)*_,r-=e,i-=t,n-=e,o-=t,c-=a,h-=l,u-=a,p-=l,x=c*p-u*h,0===x){if(void 0===gt[f.id]){var M=document.createElement("canvas");M.width=f.image.width,M.height=f.image.height;var C=M.getContext("2d");C.drawImage(f.image,0,0),gt[f.id]=C.getImageData(0,0,f.image.width,f.image.height).data}var A=gt[f.id],D=4*(Math.floor(a)+Math.floor(l)*f.image.width);return lt.setRGB(A[D]/255,A[D+1]/255,A[D+2]/255),nt(lt),void 0}b=1/x,E=(p*r-h*n)*b,g=(p*i-h*o)*b,v=(c*n-u*r)*b,y=(c*o-u*i)*b,T=e-E*a-v*l,R=t-g*a-y*l,J.save(),J.transform(E,g,v,y,T,R),J.fill(),J.restore()}}function St(e,t,r,i,n,o,a,s,l,c,h,u,p){var f,d,m,E,g,v,y,T,R=p.width-1,x=p.height-1;a*=R,s*=x,l*=R,c*=x,h*=R,u*=x,r-=e,i-=t,n-=e,o-=t,l-=a,c-=s,h-=a,u-=s,y=l*u-h*c,T=1/y,f=(u*r-c*n)*T,d=(u*i-c*o)*T,m=(l*n-h*r)*T,E=(l*o-h*i)*T,g=e-f*a-m*s,v=t-d*a-E*s,J.save(),J.transform(f,d,m,E,g,v),J.clip(),J.drawImage(p,0,0),J.restore()}function _t(e,t,r,i){return G[0]=0|255*e.r,G[1]=0|255*e.g,G[2]=0|255*e.b,G[4]=0|255*t.r,G[5]=0|255*t.g,G[6]=0|255*t.b,G[8]=0|255*r.r,G[9]=0|255*r.g,G[10]=0|255*r.b,G[12]=0|255*i.r,G[13]=0|255*i.g,G[14]=0|255*i.b,k.putImageData(j,0,0),q.drawImage(V,0,0),W}function Mt(e,t,r){var i=(e-t)/(r-t);return i*i*(3-2*i)}function Ct(e,t){var r,i=t.x-e.x,n=t.y-e.y,o=i*i+n*n;0!==o&&(r=1/Math.sqrt(o),i*=r,n*=r,t.x+=i,t.y+=n,e.x-=i,e.y-=n)}if(u instanceof THREE.Camera==!1)return console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera."),void 0;this.autoClear===!0&&this.clear(),J.setTransform(1,0,0,-1,f,d),X.info.render.vertices=0,X.info.render.faces=0,l=Y.projectScene(e,u,this.sortObjects,this.sortElements),c=l.elements,h=l.lights,Rt=h.length>0,Rt===!0&&p();for(var At=0,Dt=c.length;Dt>At;At++){var Lt=c[At],Pt=Lt.material;if(void 0!==Pt&&Pt.visible!==!1){if(Tt.makeEmpty(),Lt instanceof THREE.RenderableParticle)m=Lt,m.x*=f,m.y*=d,$(m,Lt,Pt,e);else if(Lt instanceof THREE.RenderableLine)m=Lt.v1,E=Lt.v2,m.positionScreen.x*=f,m.positionScreen.y*=d,E.positionScreen.x*=f,E.positionScreen.y*=d,Tt.setFromPoints([m.positionScreen,E.positionScreen]),vt.isIntersectionBox(Tt)===!0&&Q(m,E,Lt,Pt,e);else if(Lt instanceof THREE.RenderableFace3){if(m=Lt.v1,E=Lt.v2,g=Lt.v3,-1>m.positionScreen.z||m.positionScreen.z>1)continue;if(-1>E.positionScreen.z||E.positionScreen.z>1)continue;if(-1>g.positionScreen.z||g.positionScreen.z>1)continue;m.positionScreen.x*=f,m.positionScreen.y*=d,E.positionScreen.x*=f,E.positionScreen.y*=d,g.positionScreen.x*=f,g.positionScreen.y*=d,Pt.overdraw===!0&&(Ct(m.positionScreen,E.positionScreen),Ct(E.positionScreen,g.positionScreen),Ct(g.positionScreen,m.positionScreen)),Tt.setFromPoints([m.positionScreen,E.positionScreen,g.positionScreen]),Z(m,E,g,0,1,2,Lt,Pt,e)}else if(Lt instanceof THREE.RenderableFace4){if(m=Lt.v1,E=Lt.v2,g=Lt.v3,v=Lt.v4,-1>m.positionScreen.z||m.positionScreen.z>1)continue;if(-1>E.positionScreen.z||E.positionScreen.z>1)continue;if(-1>g.positionScreen.z||g.positionScreen.z>1)continue;if(-1>v.positionScreen.z||v.positionScreen.z>1)continue;m.positionScreen.x*=f,m.positionScreen.y*=d,E.positionScreen.x*=f,E.positionScreen.y*=d,g.positionScreen.x*=f,g.positionScreen.y*=d,v.positionScreen.x*=f,v.positionScreen.y*=d,at.positionScreen.copy(E.positionScreen),st.positionScreen.copy(v.positionScreen),Pt.overdraw===!0&&(Ct(m.positionScreen,E.positionScreen),Ct(E.positionScreen,v.positionScreen),Ct(v.positionScreen,m.positionScreen),Ct(g.positionScreen,at.positionScreen),Ct(g.positionScreen,st.positionScreen)),Tt.setFromPoints([m.positionScreen,E.positionScreen,g.positionScreen,v.positionScreen]),et(m,E,g,v,at,st,Lt,Pt,e)}yt.union(Tt)}}J.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;","else shadowKernel[0][0] = 0.0;","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;","else shadowKernel[0][1] = 0.0;","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;","else shadowKernel[0][2] = 0.0;","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;","else shadowKernel[1][0] = 0.0;","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;","else shadowKernel[1][1] = 0.0;","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;","else shadowKernel[1][2] = 0.0;","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;","else shadowKernel[2][0] = 0.0;","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;","else shadowKernel[2][1] = 0.0;","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;","else shadowKernel[2][2] = 0.0;","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(e){var t,r,i,n={};
for(t=0;e.length>t;t++){i=this.clone(e[t]);for(r in i)n[r]=i[r]}return n},clone:function(e){var t,r,i,n={};for(t in e){n[t]={};for(r in e[t])i=e[t][r],n[t][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=Ot.createBuffer(),e.__webglColorBuffer=Ot.createBuffer(),jt.info.memory.geometries++}function r(e){e.__webglVertexBuffer=Ot.createBuffer(),e.__webglColorBuffer=Ot.createBuffer(),e.__webglLineDistanceBuffer=Ot.createBuffer(),jt.info.memory.geometries++}function i(e){e.__webglVertexBuffer=Ot.createBuffer(),e.__webglColorBuffer=Ot.createBuffer(),e.__webglNormalBuffer=Ot.createBuffer(),jt.info.memory.geometries++}function n(e){e.__webglVertexBuffer=Ot.createBuffer(),e.__webglNormalBuffer=Ot.createBuffer(),e.__webglTangentBuffer=Ot.createBuffer(),e.__webglColorBuffer=Ot.createBuffer(),e.__webglUVBuffer=Ot.createBuffer(),e.__webglUV2Buffer=Ot.createBuffer(),e.__webglSkinIndicesBuffer=Ot.createBuffer(),e.__webglSkinWeightsBuffer=Ot.createBuffer(),e.__webglFaceBuffer=Ot.createBuffer(),e.__webglLineBuffer=Ot.createBuffer();var t,r;if(e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;r>t;t++)e.__webglMorphTargetsBuffers.push(Ot.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;r>t;t++)e.__webglMorphNormalsBuffers.push(Ot.createBuffer());jt.info.memory.geometries++}function o(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Ot.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function a(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in i.attributes){var o=i.attributes[n];if(!o.__webglInitialized||o.createUniqueBuffers){o.__webglInitialized=!0;var a=1;"v2"===o.type?a=2:"v3"===o.type?a=3:"v4"===o.type?a=4:"c"===o.type&&(a=3),o.size=a,o.array=new Float32Array(r*a),o.buffer=Ot.createBuffer(),o.buffer.belongsToAttribute=n,o.needsUpdate=!0}e.__webglCustomAttributesList.push(o)}}}function s(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,a(e,t)}function l(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,a(e,t)}function c(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__normalArray=new Float32Array(3*r),e.__webglVertexCount=r,a(e,t)}function h(e,t){var r=t.geometry,i=e.faces3,n=e.faces4,o=3*i.length+4*n.length,a=1*i.length+2*n.length,s=3*i.length+4*n.length,l=u(t,e),c=m(l),h=f(l),p=d(l);e.__vertexArray=new Float32Array(3*o),h&&(e.__normalArray=new Float32Array(3*o)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*o)),p&&(e.__colorArray=new Float32Array(3*o)),c&&((r.faceUvs.length>0||r.faceVertexUvs.length>0)&&(e.__uvArray=new Float32Array(2*o)),(r.faceUvs.length>1||r.faceVertexUvs.length>1)&&(e.__uv2Array=new Float32Array(2*o))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*o),e.__skinWeightArray=new Float32Array(4*o)),e.__faceArray=new Uint16Array(3*a),e.__lineArray=new Uint16Array(2*s);var E,g;if(e.numMorphTargets)for(e.__morphTargetsArrays=[],E=0,g=e.numMorphTargets;g>E;E++)e.__morphTargetsArrays.push(new Float32Array(3*o));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],E=0,g=e.numMorphNormals;g>E;E++)e.__morphNormalsArrays.push(new Float32Array(3*o));if(e.__webglFaceCount=3*a,e.__webglLineCount=2*s,l.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var v in l.attributes){var y=l.attributes[v],T={};for(var R in y)T[R]=y[R];if(!T.__webglInitialized||T.createUniqueBuffers){T.__webglInitialized=!0;var x=1;"v2"===T.type?x=2:"v3"===T.type?x=3:"v4"===T.type?x=4:"c"===T.type&&(x=3),T.size=x,T.array=new Float32Array(o*x),T.buffer=Ot.createBuffer(),T.buffer.belongsToAttribute=v,y.needsUpdate=!0,T.__original=y}e.__webglCustomAttributesList.push(T)}}e.__inittedArrays=!0}function u(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function p(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}function f(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:p(e)?THREE.SmoothShading:THREE.FlatShading}function d(e){return e.vertexColors?e.vertexColors:!1}function m(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function E(e){var t,r,i;for(t in e.attributes)i="index"===t?Ot.ELEMENT_ARRAY_BUFFER:Ot.ARRAY_BUFFER,r=e.attributes[t],r.buffer=Ot.createBuffer(),Ot.bindBuffer(i,r.buffer),Ot.bufferData(i,r.array,Ot.STATIC_DRAW)}function g(e,t,r){var i,n,o,a,s,l,c,h,u,p,f,d,m=e.vertices,E=m.length,g=e.colors,v=g.length,y=e.__vertexArray,T=e.__colorArray,R=e.__sortArray,x=e.verticesNeedUpdate,b=(e.elementsNeedUpdate,e.colorsNeedUpdate),H=e.__webglCustomAttributesList;
if(r.sortParticles){for(Tr.copy(yr),Tr.multiply(r.matrixWorld),i=0;E>i;i++)o=m[i],Rr.copy(o),Rr.applyProjection(Tr),R[i]=[Rr.z,i];for(R.sort(S),i=0;E>i;i++)o=m[R[i][1]],a=3*i,y[a]=o.x,y[a+1]=o.y,y[a+2]=o.z;for(n=0;v>n;n++)a=3*n,l=g[R[n][1]],T[a]=l.r,T[a+1]=l.g,T[a+2]=l.b;if(H)for(c=0,h=H.length;h>c;c++)if(d=H[c],void 0===d.boundTo||"vertices"===d.boundTo)if(a=0,p=d.value.length,1===d.size)for(u=0;p>u;u++)s=R[u][1],d.array[u]=d.value[s];else if(2===d.size)for(u=0;p>u;u++)s=R[u][1],f=d.value[s],d.array[a]=f.x,d.array[a+1]=f.y,a+=2;else if(3===d.size)if("c"===d.type)for(u=0;p>u;u++)s=R[u][1],f=d.value[s],d.array[a]=f.r,d.array[a+1]=f.g,d.array[a+2]=f.b,a+=3;else for(u=0;p>u;u++)s=R[u][1],f=d.value[s],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,a+=3;else if(4===d.size)for(u=0;p>u;u++)s=R[u][1],f=d.value[s],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,d.array[a+3]=f.w,a+=4}else{if(x)for(i=0;E>i;i++)o=m[i],a=3*i,y[a]=o.x,y[a+1]=o.y,y[a+2]=o.z;if(b)for(n=0;v>n;n++)l=g[n],a=3*n,T[a]=l.r,T[a+1]=l.g,T[a+2]=l.b;if(H)for(c=0,h=H.length;h>c;c++)if(d=H[c],d.needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo))if(p=d.value.length,a=0,1===d.size)for(u=0;p>u;u++)d.array[u]=d.value[u];else if(2===d.size)for(u=0;p>u;u++)f=d.value[u],d.array[a]=f.x,d.array[a+1]=f.y,a+=2;else if(3===d.size)if("c"===d.type)for(u=0;p>u;u++)f=d.value[u],d.array[a]=f.r,d.array[a+1]=f.g,d.array[a+2]=f.b,a+=3;else for(u=0;p>u;u++)f=d.value[u],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,a+=3;else if(4===d.size)for(u=0;p>u;u++)f=d.value[u],d.array[a]=f.x,d.array[a+1]=f.y,d.array[a+2]=f.z,d.array[a+3]=f.w,a+=4}if((x||r.sortParticles)&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglVertexBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,y,t)),(b||r.sortParticles)&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglColorBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,T,t)),H)for(c=0,h=H.length;h>c;c++)d=H[c],(d.needsUpdate||r.sortParticles)&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,d.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,d.array,t))}function v(e,t){var r,i,n,o,a,s,l,c,h,u,p,f,d=e.vertices,m=e.colors,E=e.lineDistances,g=d.length,v=m.length,y=E.length,T=e.__vertexArray,R=e.__colorArray,x=e.__lineDistanceArray,b=e.verticesNeedUpdate,H=e.colorsNeedUpdate,w=e.lineDistancesNeedUpdate,S=e.__webglCustomAttributesList;if(b){for(r=0;g>r;r++)o=d[r],a=3*r,T[a]=o.x,T[a+1]=o.y,T[a+2]=o.z;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglVertexBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,T,t)}if(H){for(i=0;v>i;i++)s=m[i],a=3*i,R[a]=s.r,R[a+1]=s.g,R[a+2]=s.b;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglColorBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,R,t)}if(w){for(n=0;y>n;n++)x[n]=E[n];Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglLineDistanceBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,x,t)}if(S)for(l=0,c=S.length;c>l;l++)if(f=S[l],f.needsUpdate&&(void 0===f.boundTo||"vertices"===f.boundTo)){if(a=0,u=f.value.length,1===f.size)for(h=0;u>h;h++)f.array[h]=f.value[h];else if(2===f.size)for(h=0;u>h;h++)p=f.value[h],f.array[a]=p.x,f.array[a+1]=p.y,a+=2;else if(3===f.size)if("c"===f.type)for(h=0;u>h;h++)p=f.value[h],f.array[a]=p.r,f.array[a+1]=p.g,f.array[a+2]=p.b,a+=3;else for(h=0;u>h;h++)p=f.value[h],f.array[a]=p.x,f.array[a+1]=p.y,f.array[a+2]=p.z,a+=3;else if(4===f.size)for(h=0;u>h;h++)p=f.value[h],f.array[a]=p.x,f.array[a+1]=p.y,f.array[a+2]=p.z,f.array[a+3]=p.w,a+=4;Ot.bindBuffer(Ot.ARRAY_BUFFER,f.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,f.array,t)}}function y(e,t){var r,i,n,o,a,s,l,c,h,u,p,f,d,m=e.vertices,E=e.colors,g=e.normals,v=m.length,y=E.length,T=g.length,R=e.__vertexArray,x=e.__colorArray,b=e.__normalArray,H=e.verticesNeedUpdate,w=e.colorsNeedUpdate,S=e.normalsNeedUpdate,_=e.__webglCustomAttributesList;if(H){for(r=0;v>r;r++)o=m[r],a=3*r,R[a]=o.x,R[a+1]=o.y,R[a+2]=o.z;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglVertexBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,R,t)}if(w){for(i=0;y>i;i++)s=E[i],a=3*i,x[a]=s.r,x[a+1]=s.g,x[a+2]=s.b;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglColorBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,x,t)}if(S){for(n=0;T>n;n++)l=g[n],a=3*n,b[a]=l.x,b[a+1]=l.y,b[a+2]=l.z;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglNormalBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,b,t)}if(_)for(c=0,h=_.length;h>c;c++)if(f=_[c],f.needsUpdate&&(void 0===f.boundTo||"vertices"===f.boundTo)){if(a=0,p=f.value.length,1===f.size)for(u=0;p>u;u++)f.array[u]=f.value[u];else if(2===f.size)for(u=0;p>u;u++)d=f.value[u],f.array[a]=d.x,f.array[a+1]=d.y,a+=2;else if(3===f.size)if("c"===f.type)for(u=0;p>u;u++)d=f.value[u],f.array[a]=d.r,f.array[a+1]=d.g,f.array[a+2]=d.b,a+=3;else for(u=0;p>u;u++)d=f.value[u],f.array[a]=d.x,f.array[a+1]=d.y,f.array[a+2]=d.z,a+=3;else if(4===f.size)for(u=0;p>u;u++)d=f.value[u],f.array[a]=d.x,f.array[a+1]=d.y,f.array[a+2]=d.z,f.array[a+3]=d.w,a+=4;Ot.bindBuffer(Ot.ARRAY_BUFFER,f.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,f.array,t)}}function T(e,t,r,i,n){if(e.__inittedArrays){var o,a,s,l,c,h,u,p,E,g,v,y,T,R,x,b,H,w,S,_,M,C,A,D,L,P,F,N,U,B,O,I,z,V,k,j,G,W,q,X,Y,K,J,$,Q,Z,et,tt,rt=f(n),it=d(n),nt=m(n),ot=rt===THREE.SmoothShading,at=0,st=0,lt=0,ct=0,ht=0,ut=0,pt=0,ft=0,dt=0,mt=0,Et=0,gt=0,vt=0,yt=e.__vertexArray,Tt=e.__uvArray,Rt=e.__uv2Array,xt=e.__normalArray,bt=e.__tangentArray,Ht=e.__colorArray,wt=e.__skinIndexArray,St=e.__skinWeightArray,_t=e.__morphTargetsArrays,Mt=e.__morphNormalsArrays,Ct=e.__webglCustomAttributesList,At=e.__faceArray,Dt=e.__lineArray,Lt=t.geometry,Pt=Lt.verticesNeedUpdate,Ft=Lt.elementsNeedUpdate,Nt=Lt.uvsNeedUpdate,Ut=Lt.normalsNeedUpdate,Bt=Lt.tangentsNeedUpdate,It=Lt.colorsNeedUpdate,zt=Lt.morphTargetsNeedUpdate,Vt=Lt.vertices,kt=e.faces3,jt=e.faces4,Gt=Lt.faces,Wt=Lt.faceVertexUvs[0],qt=Lt.faceVertexUvs[1],Xt=(Lt.colors,Lt.skinIndices),Yt=Lt.skinWeights,Kt=Lt.morphTargets,Jt=Lt.morphNormals;if(Pt){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],y=Vt[l.a],T=Vt[l.b],R=Vt[l.c],yt[st]=y.x,yt[st+1]=y.y,yt[st+2]=y.z,yt[st+3]=T.x,yt[st+4]=T.y,yt[st+5]=T.z,yt[st+6]=R.x,yt[st+7]=R.y,yt[st+8]=R.z,st+=9;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],y=Vt[l.a],T=Vt[l.b],R=Vt[l.c],x=Vt[l.d],yt[st]=y.x,yt[st+1]=y.y,yt[st+2]=y.z,yt[st+3]=T.x,yt[st+4]=T.y,yt[st+5]=T.z,yt[st+6]=R.x,yt[st+7]=R.y,yt[st+8]=R.z,yt[st+9]=x.x,yt[st+10]=x.y,yt[st+11]=x.z,st+=12;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglVertexBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,yt,r)}if(zt)for(Y=0,K=Kt.length;K>Y;Y++){for(Et=0,o=0,a=kt.length;a>o;o++)Q=kt[o],l=Gt[Q],y=Kt[Y].vertices[l.a],T=Kt[Y].vertices[l.b],R=Kt[Y].vertices[l.c],J=_t[Y],J[Et]=y.x,J[Et+1]=y.y,J[Et+2]=y.z,J[Et+3]=T.x,J[Et+4]=T.y,J[Et+5]=T.z,J[Et+6]=R.x,J[Et+7]=R.y,J[Et+8]=R.z,n.morphNormals&&(ot?(Z=Jt[Y].vertexNormals[Q],_=Z.a,M=Z.b,C=Z.c):(_=Jt[Y].faceNormals[Q],M=_,C=_),$=Mt[Y],$[Et]=_.x,$[Et+1]=_.y,$[Et+2]=_.z,$[Et+3]=M.x,$[Et+4]=M.y,$[Et+5]=M.z,$[Et+6]=C.x,$[Et+7]=C.y,$[Et+8]=C.z),Et+=9;for(o=0,a=jt.length;a>o;o++)Q=jt[o],l=Gt[Q],y=Kt[Y].vertices[l.a],T=Kt[Y].vertices[l.b],R=Kt[Y].vertices[l.c],x=Kt[Y].vertices[l.d],J=_t[Y],J[Et]=y.x,J[Et+1]=y.y,J[Et+2]=y.z,J[Et+3]=T.x,J[Et+4]=T.y,J[Et+5]=T.z,J[Et+6]=R.x,J[Et+7]=R.y,J[Et+8]=R.z,J[Et+9]=x.x,J[Et+10]=x.y,J[Et+11]=x.z,n.morphNormals&&(ot?(Z=Jt[Y].vertexNormals[Q],_=Z.a,M=Z.b,C=Z.c,A=Z.d):(_=Jt[Y].faceNormals[Q],M=_,C=_,A=_),$=Mt[Y],$[Et]=_.x,$[Et+1]=_.y,$[Et+2]=_.z,$[Et+3]=M.x,$[Et+4]=M.y,$[Et+5]=M.z,$[Et+6]=C.x,$[Et+7]=C.y,$[Et+8]=C.z,$[Et+9]=A.x,$[Et+10]=A.y,$[Et+11]=A.z),Et+=12;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[Y]),Ot.bufferData(Ot.ARRAY_BUFFER,_t[Y],r),n.morphNormals&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[Y]),Ot.bufferData(Ot.ARRAY_BUFFER,Mt[Y],r))}if(Yt.length){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],N=Yt[l.a],U=Yt[l.b],B=Yt[l.c],St[mt]=N.x,St[mt+1]=N.y,St[mt+2]=N.z,St[mt+3]=N.w,St[mt+4]=U.x,St[mt+5]=U.y,St[mt+6]=U.z,St[mt+7]=U.w,St[mt+8]=B.x,St[mt+9]=B.y,St[mt+10]=B.z,St[mt+11]=B.w,I=Xt[l.a],z=Xt[l.b],V=Xt[l.c],wt[mt]=I.x,wt[mt+1]=I.y,wt[mt+2]=I.z,wt[mt+3]=I.w,wt[mt+4]=z.x,wt[mt+5]=z.y,wt[mt+6]=z.z,wt[mt+7]=z.w,wt[mt+8]=V.x,wt[mt+9]=V.y,wt[mt+10]=V.z,wt[mt+11]=V.w,mt+=12;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],N=Yt[l.a],U=Yt[l.b],B=Yt[l.c],O=Yt[l.d],St[mt]=N.x,St[mt+1]=N.y,St[mt+2]=N.z,St[mt+3]=N.w,St[mt+4]=U.x,St[mt+5]=U.y,St[mt+6]=U.z,St[mt+7]=U.w,St[mt+8]=B.x,St[mt+9]=B.y,St[mt+10]=B.z,St[mt+11]=B.w,St[mt+12]=O.x,St[mt+13]=O.y,St[mt+14]=O.z,St[mt+15]=O.w,I=Xt[l.a],z=Xt[l.b],V=Xt[l.c],k=Xt[l.d],wt[mt]=I.x,wt[mt+1]=I.y,wt[mt+2]=I.z,wt[mt+3]=I.w,wt[mt+4]=z.x,wt[mt+5]=z.y,wt[mt+6]=z.z,wt[mt+7]=z.w,wt[mt+8]=V.x,wt[mt+9]=V.y,wt[mt+10]=V.z,wt[mt+11]=V.w,wt[mt+12]=k.x,wt[mt+13]=k.y,wt[mt+14]=k.z,wt[mt+15]=k.w,mt+=16;mt>0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,wt,r),Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,St,r))}if(It&&it){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],u=l.vertexColors,p=l.color,3===u.length&&it===THREE.VertexColors?(D=u[0],L=u[1],P=u[2]):(D=p,L=p,P=p),Ht[dt]=D.r,Ht[dt+1]=D.g,Ht[dt+2]=D.b,Ht[dt+3]=L.r,Ht[dt+4]=L.g,Ht[dt+5]=L.b,Ht[dt+6]=P.r,Ht[dt+7]=P.g,Ht[dt+8]=P.b,dt+=9;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],u=l.vertexColors,p=l.color,4===u.length&&it===THREE.VertexColors?(D=u[0],L=u[1],P=u[2],F=u[3]):(D=p,L=p,P=p,F=p),Ht[dt]=D.r,Ht[dt+1]=D.g,Ht[dt+2]=D.b,Ht[dt+3]=L.r,Ht[dt+4]=L.g,Ht[dt+5]=L.b,Ht[dt+6]=P.r,Ht[dt+7]=P.g,Ht[dt+8]=P.b,Ht[dt+9]=F.r,Ht[dt+10]=F.g,Ht[dt+11]=F.b,dt+=12;dt>0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglColorBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,Ht,r))}if(Bt&&Lt.hasTangents){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],E=l.vertexTangents,b=E[0],H=E[1],w=E[2],bt[pt]=b.x,bt[pt+1]=b.y,bt[pt+2]=b.z,bt[pt+3]=b.w,bt[pt+4]=H.x,bt[pt+5]=H.y,bt[pt+6]=H.z,bt[pt+7]=H.w,bt[pt+8]=w.x,bt[pt+9]=w.y,bt[pt+10]=w.z,bt[pt+11]=w.w,pt+=12;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],E=l.vertexTangents,b=E[0],H=E[1],w=E[2],S=E[3],bt[pt]=b.x,bt[pt+1]=b.y,bt[pt+2]=b.z,bt[pt+3]=b.w,bt[pt+4]=H.x,bt[pt+5]=H.y,bt[pt+6]=H.z,bt[pt+7]=H.w,bt[pt+8]=w.x,bt[pt+9]=w.y,bt[pt+10]=w.z,bt[pt+11]=w.w,bt[pt+12]=S.x,bt[pt+13]=S.y,bt[pt+14]=S.z,bt[pt+15]=S.w,pt+=16;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglTangentBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,bt,r)}if(Ut&&rt){for(o=0,a=kt.length;a>o;o++)if(l=Gt[kt[o]],c=l.vertexNormals,h=l.normal,3===c.length&&ot)for(j=0;3>j;j++)W=c[j],xt[ut]=W.x,xt[ut+1]=W.y,xt[ut+2]=W.z,ut+=3;else for(j=0;3>j;j++)xt[ut]=h.x,xt[ut+1]=h.y,xt[ut+2]=h.z,ut+=3;for(o=0,a=jt.length;a>o;o++)if(l=Gt[jt[o]],c=l.vertexNormals,h=l.normal,4===c.length&&ot)for(j=0;4>j;j++)W=c[j],xt[ut]=W.x,xt[ut+1]=W.y,xt[ut+2]=W.z,ut+=3;else for(j=0;4>j;j++)xt[ut]=h.x,xt[ut+1]=h.y,xt[ut+2]=h.z,ut+=3;Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglNormalBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,xt,r)}if(Nt&&Wt&&nt){for(o=0,a=kt.length;a>o;o++)if(s=kt[o],g=Wt[s],void 0!==g)for(j=0;3>j;j++)q=g[j],Tt[lt]=q.x,Tt[lt+1]=q.y,lt+=2;for(o=0,a=jt.length;a>o;o++)if(s=jt[o],g=Wt[s],void 0!==g)for(j=0;4>j;j++)q=g[j],Tt[lt]=q.x,Tt[lt+1]=q.y,lt+=2;lt>0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglUVBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,Tt,r))}if(Nt&&qt&&nt){for(o=0,a=kt.length;a>o;o++)if(s=kt[o],v=qt[s],void 0!==v)for(j=0;3>j;j++)X=v[j],Rt[ct]=X.x,Rt[ct+1]=X.y,ct+=2;for(o=0,a=jt.length;a>o;o++)if(s=jt[o],v=qt[s],void 0!==v)for(j=0;4>j;j++)X=v[j],Rt[ct]=X.x,Rt[ct+1]=X.y,ct+=2;ct>0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglUV2Buffer),Ot.bufferData(Ot.ARRAY_BUFFER,Rt,r))}if(Ft){for(o=0,a=kt.length;a>o;o++)At[ht]=at,At[ht+1]=at+1,At[ht+2]=at+2,ht+=3,Dt[ft]=at,Dt[ft+1]=at+1,Dt[ft+2]=at,Dt[ft+3]=at+2,Dt[ft+4]=at+1,Dt[ft+5]=at+2,ft+=6,at+=3;for(o=0,a=jt.length;a>o;o++)At[ht]=at,At[ht+1]=at+1,At[ht+2]=at+3,At[ht+3]=at+1,At[ht+4]=at+2,At[ht+5]=at+3,ht+=6,Dt[ft]=at,Dt[ft+1]=at+1,Dt[ft+2]=at,Dt[ft+3]=at+3,Dt[ft+4]=at+1,Dt[ft+5]=at+2,Dt[ft+6]=at+2,Dt[ft+7]=at+3,ft+=8,at+=4;Ot.bindBuffer(Ot.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Ot.bufferData(Ot.ELEMENT_ARRAY_BUFFER,At,r),Ot.bindBuffer(Ot.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Ot.bufferData(Ot.ELEMENT_ARRAY_BUFFER,Dt,r)}if(Ct)for(j=0,G=Ct.length;G>j;j++)if(tt=Ct[j],tt.__original.needsUpdate){if(gt=0,vt=0,1===tt.size){if(void 0===tt.boundTo||"vertices"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],tt.array[gt]=tt.value[l.a],tt.array[gt+1]=tt.value[l.b],tt.array[gt+2]=tt.value[l.c],gt+=3;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],tt.array[gt]=tt.value[l.a],tt.array[gt+1]=tt.value[l.b],tt.array[gt+2]=tt.value[l.c],tt.array[gt+3]=tt.value[l.d],gt+=4}else if("faces"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)et=tt.value[kt[o]],tt.array[gt]=et,tt.array[gt+1]=et,tt.array[gt+2]=et,gt+=3;for(o=0,a=jt.length;a>o;o++)et=tt.value[jt[o]],tt.array[gt]=et,tt.array[gt+1]=et,tt.array[gt+2]=et,tt.array[gt+3]=et,gt+=4}}else if(2===tt.size){if(void 0===tt.boundTo||"vertices"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,gt+=6;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],x=tt.value[l.d],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,tt.array[gt+6]=x.x,tt.array[gt+7]=x.y,gt+=8}else if("faces"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)et=tt.value[kt[o]],y=et,T=et,R=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,gt+=6;for(o=0,a=jt.length;a>o;o++)et=tt.value[jt[o]],y=et,T=et,R=et,x=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,tt.array[gt+6]=x.x,tt.array[gt+7]=x.y,gt+=8}}else if(3===tt.size){var $t;if($t="c"===tt.type?["r","g","b"]:["x","y","z"],void 0===tt.boundTo||"vertices"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],tt.array[gt]=y[$t[0]],tt.array[gt+1]=y[$t[1]],tt.array[gt+2]=y[$t[2]],tt.array[gt+3]=T[$t[0]],tt.array[gt+4]=T[$t[1]],tt.array[gt+5]=T[$t[2]],tt.array[gt+6]=R[$t[0]],tt.array[gt+7]=R[$t[1]],tt.array[gt+8]=R[$t[2]],gt+=9;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],x=tt.value[l.d],tt.array[gt]=y[$t[0]],tt.array[gt+1]=y[$t[1]],tt.array[gt+2]=y[$t[2]],tt.array[gt+3]=T[$t[0]],tt.array[gt+4]=T[$t[1]],tt.array[gt+5]=T[$t[2]],tt.array[gt+6]=R[$t[0]],tt.array[gt+7]=R[$t[1]],tt.array[gt+8]=R[$t[2]],tt.array[gt+9]=x[$t[0]],tt.array[gt+10]=x[$t[1]],tt.array[gt+11]=x[$t[2]],gt+=12}else if("faces"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)et=tt.value[kt[o]],y=et,T=et,R=et,tt.array[gt]=y[$t[0]],tt.array[gt+1]=y[$t[1]],tt.array[gt+2]=y[$t[2]],tt.array[gt+3]=T[$t[0]],tt.array[gt+4]=T[$t[1]],tt.array[gt+5]=T[$t[2]],tt.array[gt+6]=R[$t[0]],tt.array[gt+7]=R[$t[1]],tt.array[gt+8]=R[$t[2]],gt+=9;for(o=0,a=jt.length;a>o;o++)et=tt.value[jt[o]],y=et,T=et,R=et,x=et,tt.array[gt]=y[$t[0]],tt.array[gt+1]=y[$t[1]],tt.array[gt+2]=y[$t[2]],tt.array[gt+3]=T[$t[0]],tt.array[gt+4]=T[$t[1]],tt.array[gt+5]=T[$t[2]],tt.array[gt+6]=R[$t[0]],tt.array[gt+7]=R[$t[1]],tt.array[gt+8]=R[$t[2]],tt.array[gt+9]=x[$t[0]],tt.array[gt+10]=x[$t[1]],tt.array[gt+11]=x[$t[2]],gt+=12}else if("faceVertices"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)et=tt.value[kt[o]],y=et[0],T=et[1],R=et[2],tt.array[gt]=y[$t[0]],tt.array[gt+1]=y[$t[1]],tt.array[gt+2]=y[$t[2]],tt.array[gt+3]=T[$t[0]],tt.array[gt+4]=T[$t[1]],tt.array[gt+5]=T[$t[2]],tt.array[gt+6]=R[$t[0]],tt.array[gt+7]=R[$t[1]],tt.array[gt+8]=R[$t[2]],gt+=9;for(o=0,a=jt.length;a>o;o++)et=tt.value[jt[o]],y=et[0],T=et[1],R=et[2],x=et[3],tt.array[gt]=y[$t[0]],tt.array[gt+1]=y[$t[1]],tt.array[gt+2]=y[$t[2]],tt.array[gt+3]=T[$t[0]],tt.array[gt+4]=T[$t[1]],tt.array[gt+5]=T[$t[2]],tt.array[gt+6]=R[$t[0]],tt.array[gt+7]=R[$t[1]],tt.array[gt+8]=R[$t[2]],tt.array[gt+9]=x[$t[0]],tt.array[gt+10]=x[$t[1]],tt.array[gt+11]=x[$t[2]],gt+=12}}else if(4===tt.size)if(void 0===tt.boundTo||"vertices"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)l=Gt[kt[o]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,gt+=12;for(o=0,a=jt.length;a>o;o++)l=Gt[jt[o]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],x=tt.value[l.d],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,tt.array[gt+12]=x.x,tt.array[gt+13]=x.y,tt.array[gt+14]=x.z,tt.array[gt+15]=x.w,gt+=16}else if("faces"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)et=tt.value[kt[o]],y=et,T=et,R=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,gt+=12;for(o=0,a=jt.length;a>o;o++)et=tt.value[jt[o]],y=et,T=et,R=et,x=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,tt.array[gt+12]=x.x,tt.array[gt+13]=x.y,tt.array[gt+14]=x.z,tt.array[gt+15]=x.w,gt+=16}else if("faceVertices"===tt.boundTo){for(o=0,a=kt.length;a>o;o++)et=tt.value[kt[o]],y=et[0],T=et[1],R=et[2],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,gt+=12;for(o=0,a=jt.length;a>o;o++)et=tt.value[jt[o]],y=et[0],T=et[1],R=et[2],x=et[3],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,tt.array[gt+12]=x.x,tt.array[gt+13]=x.y,tt.array[gt+14]=x.z,tt.array[gt+15]=x.w,gt+=16}Ot.bindBuffer(Ot.ARRAY_BUFFER,tt.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,tt.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function R(e,t,r){var i=e.attributes,n=i.index,o=i.position,a=i.normal,s=i.uv,l=i.color,c=i.tangent;if(e.elementsNeedUpdate&&void 0!==n&&(Ot.bindBuffer(Ot.ELEMENT_ARRAY_BUFFER,n.buffer),Ot.bufferData(Ot.ELEMENT_ARRAY_BUFFER,n.array,t)),e.verticesNeedUpdate&&void 0!==o&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,o.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,o.array,t)),e.normalsNeedUpdate&&void 0!==a&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,a.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,a.array,t)),e.uvsNeedUpdate&&void 0!==s&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,s.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,s.array,t)),e.colorsNeedUpdate&&void 0!==l&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,l.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,l.array,t)),e.tangentsNeedUpdate&&void 0!==c&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,c.buffer),Ot.bufferData(Ot.ARRAY_BUFFER,c.array,t)),r)for(var h in e.attributes)delete e.attributes[h].array}function x(e){gr[e]||(Ot.enableVertexAttribArray(e),gr[e]=!0)}function b(){for(var e in gr)gr[e]&&(Ot.disableVertexAttribArray(e),gr[e]=!1)}function H(e,t,r){var i=e.program.attributes;if(-1!==r.morphTargetBase&&i.position>=0?(Ot.bindBuffer(Ot.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),x(i.position),Ot.vertexAttribPointer(i.position,3,Ot.FLOAT,!1,0,0)):i.position>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,t.__webglVertexBuffer),x(i.position),Ot.vertexAttribPointer(i.position,3,Ot.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var n=0,o=r.morphTargetForcedOrder,a=r.morphTargetInfluences;e.numSupportedMorphTargets>n&&o.length>n;)i["morphTarget"+n]>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[o[n]]),x(i["morphTarget"+n]),Ot.vertexAttribPointer(i["morphTarget"+n],3,Ot.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&e.morphNormals&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[o[n]]),x(i["morphNormal"+n]),Ot.vertexAttribPointer(i["morphNormal"+n],3,Ot.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=a[o[n]],n++;else{var s,l,c=[],a=r.morphTargetInfluences,h=a.length;for(l=0;h>l;l++)s=a[l],s>0&&c.push([s,l]);c.length>e.numSupportedMorphTargets?(c.sort(S),c.length=e.numSupportedMorphTargets):c.length>e.numSupportedMorphNormals?c.sort(S):0===c.length&&c.push([0,0]);for(var u,n=0;e.numSupportedMorphTargets>n;)c[n]?(u=c[n][1],i["morphTarget"+n]>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[u]),x(i["morphTarget"+n]),Ot.vertexAttribPointer(i["morphTarget"+n],3,Ot.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&e.morphNormals&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[u]),x(i["morphNormal"+n]),Ot.vertexAttribPointer(i["morphNormal"+n],3,Ot.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=a[u]):r.__webglMorphTargetInfluences[n]=0,n++}null!==e.program.uniforms.morphTargetInfluences&&Ot.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function w(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function S(e,t){return t[0]-e[0]}function _(e,t,r){if(e.length)for(var i=0,n=e.length;n>i;i++)qt=null,Jt=null,tr=-1,or=-1,ar=-1,Zt=-1,er=-1,Kt=-1,Yt=-1,br=!0,e[i].render(t,r,mr,Er),qt=null,Jt=null,tr=-1,or=-1,ar=-1,Zt=-1,er=-1,Kt=-1,Yt=-1,br=!0}function M(e,t,r,i,n,o,a,s){var l,c,h,u,p,f,d;t?(p=e.length-1,f=-1,d=-1):(p=0,f=e.length,d=1);for(var m=p;m!==f;m+=d)if(l=e[m],l.render){if(c=l.object,h=l.buffer,s)u=s;else{if(u=l[r],!u)continue;a&&jt.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),jt.setDepthTest(u.depthTest),jt.setDepthWrite(u.depthWrite),st(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}jt.setMaterialFaces(u),h instanceof THREE.BufferGeometry?jt.renderBufferDirect(i,n,o,u,h,c):jt.renderBuffer(i,n,o,u,h,c)}}function C(e,t,r,i,n,o,a){for(var s,l,c,h=0,u=e.length;u>h;h++)if(s=e[h],l=s.object,l.visible){if(a)c=a;else{if(c=s[t],!c)continue;o&&jt.setBlending(c.blending,c.blendEquation,c.blendSrc,c.blendDst),jt.setDepthTest(c.depthTest),jt.setDepthWrite(c.depthWrite),st(c.polygonOffset,c.polygonOffsetFactor,c.polygonOffsetUnits)}jt.renderImmediateObject(r,i,n,c,l)}}function A(e){var t=e.object,r=t.material;r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null)}function D(e){var t,r,i,n=e.object,o=e.buffer;i=n.material,i instanceof THREE.MeshFaceMaterial?(r=o.materialIndex,t=i.materials[r],t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)):(t=i,t&&(t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)))}function L(e,t){var r,i,n,o,a,s,l={},c=e.morphTargets.length,h=e.morphNormals.length,u=t instanceof THREE.MeshFaceMaterial;for(e.geometryGroups={},r=0,i=e.faces.length;i>r;r++)n=e.faces[r],o=u?n.materialIndex:0,void 0===l[o]&&(l[o]={hash:o,counter:0}),s=l[o].hash+"_"+l[o].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:o,vertices:0,numMorphTargets:c,numMorphNormals:h}),a=n instanceof THREE.Face3?3:4,e.geometryGroups[s].vertices+a>65535&&(l[o].counter+=1,s=l[o].hash+"_"+l[o].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:o,vertices:0,numMorphTargets:c,numMorphNormals:h})),n instanceof THREE.Face3?e.geometryGroups[s].faces3.push(r):e.geometryGroups[s].faces4.push(r),e.geometryGroups[s].vertices+=a;e.geometryGroupsList=[];for(var p in e.geometryGroups)e.geometryGroups[p].id=$t++,e.geometryGroupsList.push(e.geometryGroups[p])}function P(e,o){var a,u,p,f;if(!e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",Br)),e instanceof THREE.Mesh)if(u=e.geometry,p=e.material,u instanceof THREE.Geometry){void 0===u.geometryGroups&&L(u,p);for(a in u.geometryGroups)f=u.geometryGroups[a],f.__webglVertexBuffer||(n(f),h(f,e),u.verticesNeedUpdate=!0,u.morphTargetsNeedUpdate=!0,u.elementsNeedUpdate=!0,u.uvsNeedUpdate=!0,u.normalsNeedUpdate=!0,u.tangentsNeedUpdate=!0,u.colorsNeedUpdate=!0)}else u instanceof THREE.BufferGeometry&&E(u);else e instanceof THREE.Ribbon?(u=e.geometry,u.__webglVertexBuffer||(i(u),c(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.normalsNeedUpdate=!0)):e instanceof THREE.Line?(u=e.geometry,u.__webglVertexBuffer||(u instanceof THREE.Geometry?(r(u),l(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.lineDistancesNeedUpdate=!0):u instanceof THREE.BufferGeometry&&E(u))):e instanceof THREE.ParticleSystem&&(u=e.geometry,u.__webglVertexBuffer||(u instanceof THREE.Geometry?(t(u),s(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0):u instanceof THREE.BufferGeometry&&E(u)));if(!e.__webglActive){if(e instanceof THREE.Mesh){if(u=e.geometry,u instanceof THREE.BufferGeometry)F(o.__webglObjects,u,e);else if(u instanceof THREE.Geometry)for(a in u.geometryGroups)f=u.geometryGroups[a],F(o.__webglObjects,f,e)}else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(u=e.geometry,F(o.__webglObjects,u,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?N(o.__webglObjectsImmediate,e):e instanceof THREE.Sprite?o.__webglSprites.push(e):e instanceof THREE.LensFlare&&o.__webglFlares.push(e);e.__webglActive=!0}}function F(e,t,r){e.push({buffer:t,object:r,opaque:null,transparent:null})}function N(e,t){e.push({object:t,opaque:null,transparent:null})}function U(e){var t,r,i,n=e.geometry;if(e instanceof THREE.Mesh)if(n instanceof THREE.BufferGeometry)(n.verticesNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate)&&R(n,Ot.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1;else{for(var o=0,a=n.geometryGroupsList.length;a>o;o++)t=n.geometryGroupsList[o],i=u(e,t),n.buffersNeedUpdate&&h(t,e),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||r)&&T(t,e,Ot.DYNAMIC_DRAW,!n.dynamic,i);n.verticesNeedUpdate=!1,n.morphTargetsNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1,n.buffersNeedUpdate=!1,i.attributes&&O(i)}else e instanceof THREE.Ribbon?(i=u(e,n),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.normalsNeedUpdate||r)&&y(n,Ot.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.normalsNeedUpdate=!1,i.attributes&&O(i)):e instanceof THREE.Line?n instanceof THREE.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&R(n,Ot.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(i=u(e,n),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||r)&&v(n,Ot.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.lineDistancesNeedUpdate=!1,i.attributes&&O(i)):e instanceof THREE.ParticleSystem&&(n instanceof THREE.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&R(n,Ot.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(i=u(e,n),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||e.sortParticles||r)&&g(n,Ot.DYNAMIC_DRAW,e),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,i.attributes&&O(i)))}function B(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function O(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function I(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Ribbon||e instanceof THREE.Line?z(t.__webglObjects,e):e instanceof THREE.Sprite?V(t.__webglSprites,e):e instanceof THREE.LensFlare?V(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&z(t.__webglObjectsImmediate,e),e.__webglActive=!1}function z(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function V(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function k(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}function j(e,t,r,i,n){Qt=0,i.needsUpdate&&(i.program&&Gr(i),jt.initMaterial(i,t,r,n),i.needsUpdate=!1),i.morphTargets&&(n.__webglMorphTargetInfluences||(n.__webglMorphTargetInfluences=new Float32Array(jt.maxMorphTargets)));var o=!1,a=i.program,s=a.uniforms,l=i.uniforms;if(a!==qt&&(Ot.useProgram(a),qt=a,o=!0),i.id!==Yt&&(Yt=i.id,o=!0),(o||e!==Jt)&&(Ot.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==Jt&&(Jt=e)),i.skinning)if(Ar&&n.useVertexTexture){if(null!==s.boneTexture){var c=et();Ot.uniform1i(s.boneTexture,c),jt.setTexture(n.boneTexture,c)}}else null!==s.boneGlobalMatrices&&Ot.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.boneMatrices);if(o){if(r&&i.fog&&Y(l,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(br&&(ot(a,t),br=!1),$(l,Hr)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&G(l,i),i instanceof THREE.LineBasicMaterial?W(l,i):i instanceof THREE.LineDashedMaterial?(W(l,i),q(l,i)):i instanceof THREE.ParticleBasicMaterial?X(l,i):i instanceof THREE.MeshPhongMaterial?K(l,i):i instanceof THREE.MeshLambertMaterial?J(l,i):i instanceof THREE.MeshDepthMaterial?(l.mNear.value=e.near,l.mFar.value=e.far,l.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(l.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&Q(l,t),tt(a,i.uniformsList),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==s.cameraPosition){var h=e.matrixWorld.getPosition();Ot.uniform3f(s.cameraPosition,h.x,h.y,h.z)}(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==s.viewMatrix&&Ot.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return Z(s,n),null!==s.modelMatrix&&Ot.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),a}function G(e,t){e.opacity.value=t.opacity,jt.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color,e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap),void 0!==r){var i=r.offset,n=r.repeat;e.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,e.reflectivity.value=jt.gammaInput?t.reflectivity:t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function W(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function q(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function X(e,t){e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=Ct.height/2,e.map.value=t.map}function Y(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function K(e,t){e.shininess.value=t.shininess,jt.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function J(e,t){jt.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)
}function $(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}function Q(e,t){if(e.shadowMatrix)for(var r=0,i=0,n=t.length;n>i;i++){var o=t[i];o.castShadow&&(o instanceof THREE.SpotLight||o instanceof THREE.DirectionalLight&&!o.shadowCascade)&&(e.shadowMap.value[r]=o.shadowMap,e.shadowMapSize.value[r]=o.shadowMapSize,e.shadowMatrix.value[r]=o.shadowMatrix,e.shadowDarkness.value[r]=o.shadowDarkness,e.shadowBias.value[r]=o.shadowBias,r++)}}function Z(e,t){Ot.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&Ot.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}function et(){var e=Qt;return e>=wr&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+wr),Qt+=1,e}function tt(e,t){var r,i,n,o,a,s,l,c,h,u,p;for(h=0,u=t.length;u>h;h++)if(o=e.uniforms[t[h][1]])if(r=t[h][0],n=r.type,i=r.value,"i"===n)Ot.uniform1i(o,i);else if("f"===n)Ot.uniform1f(o,i);else if("v2"===n)Ot.uniform2f(o,i.x,i.y);else if("v3"===n)Ot.uniform3f(o,i.x,i.y,i.z);else if("v4"===n)Ot.uniform4f(o,i.x,i.y,i.z,i.w);else if("c"===n)Ot.uniform3f(o,i.r,i.g,i.b);else if("iv1"===n)Ot.uniform1iv(o,i);else if("iv"===n)Ot.uniform3iv(o,i);else if("fv1"===n)Ot.uniform1fv(o,i);else if("fv"===n)Ot.uniform3fv(o,i);else if("v2v"===n){for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),l=0,c=i.length;c>l;l++)p=2*l,r._array[p]=i[l].x,r._array[p+1]=i[l].y;Ot.uniform2fv(o,r._array)}else if("v3v"===n){for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),l=0,c=i.length;c>l;l++)p=3*l,r._array[p]=i[l].x,r._array[p+1]=i[l].y,r._array[p+2]=i[l].z;Ot.uniform3fv(o,r._array)}else if("v4v"===n){for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),l=0,c=i.length;c>l;l++)p=4*l,r._array[p]=i[l].x,r._array[p+1]=i[l].y,r._array[p+2]=i[l].z,r._array[p+3]=i[l].w;Ot.uniform4fv(o,r._array)}else if("m4"===n)void 0===r._array&&(r._array=new Float32Array(16)),i.flattenToArray(r._array),Ot.uniformMatrix4fv(o,!1,r._array);else if("m4v"===n){for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),l=0,c=i.length;c>l;l++)i[l].flattenToArrayOffset(r._array,16*l);Ot.uniformMatrix4fv(o,!1,r._array)}else if("t"===n){if(a=i,s=et(),Ot.uniform1i(o,s),!a)continue;a.image instanceof Array&&6===a.image.length?gt(a,s):a instanceof THREE.WebGLRenderTargetCube?vt(a,s):jt.setTexture(a,s)}else if("tv"===n){for(void 0===r._array&&(r._array=[]),l=0,c=r.value.length;c>l;l++)r._array[l]=et();for(Ot.uniform1iv(o,r._array),l=0,c=r.value.length;c>l;l++)a=r.value[l],s=r._array[l],a&&jt.setTexture(a,s)}}function rt(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function it(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function nt(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function ot(e,t){var r,i,n,o,a,s,l,c,h,u,p=0,f=0,d=0,m=Hr,E=m.directional.colors,g=m.directional.positions,v=m.point.colors,y=m.point.positions,T=m.point.distances,R=m.spot.colors,x=m.spot.positions,b=m.spot.distances,H=m.spot.directions,w=m.spot.anglesCos,S=m.spot.exponents,_=m.hemi.skyColors,M=m.hemi.groundColors,C=m.hemi.positions,A=0,D=0,L=0,P=0,F=0,N=0,U=0,B=0,O=0,I=0,z=0,V=0;for(r=0,i=t.length;i>r;r++)if(n=t[r],!n.onlyShadow)if(o=n.color,l=n.intensity,u=n.distance,n instanceof THREE.AmbientLight){if(!n.visible)continue;jt.gammaInput?(p+=o.r*o.r,f+=o.g*o.g,d+=o.b*o.b):(p+=o.r,f+=o.g,d+=o.b)}else if(n instanceof THREE.DirectionalLight){if(F+=1,!n.visible)continue;if(xr.copy(n.matrixWorld.getPosition()),xr.sub(n.target.matrixWorld.getPosition()),xr.normalize(),0===xr.x&&0===xr.y&&0===xr.z)continue;O=3*A,g[O]=xr.x,g[O+1]=xr.y,g[O+2]=xr.z,jt.gammaInput?it(E,O,o,l*l):nt(E,O,o,l),A+=1}else if(n instanceof THREE.PointLight){if(N+=1,!n.visible)continue;I=3*D,jt.gammaInput?it(v,I,o,l*l):nt(v,I,o,l),h=n.matrixWorld.getPosition(),y[I]=h.x,y[I+1]=h.y,y[I+2]=h.z,T[D]=u,D+=1}else if(n instanceof THREE.SpotLight){if(U+=1,!n.visible)continue;z=3*L,jt.gammaInput?it(R,z,o,l*l):nt(R,z,o,l),h=n.matrixWorld.getPosition(),x[z]=h.x,x[z+1]=h.y,x[z+2]=h.z,b[L]=u,xr.copy(h),xr.sub(n.target.matrixWorld.getPosition()),xr.normalize(),H[z]=xr.x,H[z+1]=xr.y,H[z+2]=xr.z,w[L]=Math.cos(n.angle),S[L]=n.exponent,L+=1}else if(n instanceof THREE.HemisphereLight){if(B+=1,!n.visible)continue;if(xr.copy(n.matrixWorld.getPosition()),xr.normalize(),0===xr.x&&0===xr.y&&0===xr.z)continue;V=3*P,C[V]=xr.x,C[V+1]=xr.y,C[V+2]=xr.z,a=n.color,s=n.groundColor,jt.gammaInput?(c=l*l,it(_,V,a,c),it(M,V,s,c)):(nt(_,V,a,l),nt(M,V,s,l)),P+=1}for(r=3*A,i=Math.max(E.length,3*F);i>r;r++)E[r]=0;for(r=3*D,i=Math.max(v.length,3*N);i>r;r++)v[r]=0;for(r=3*L,i=Math.max(R.length,3*U);i>r;r++)R[r]=0;for(r=3*P,i=Math.max(_.length,3*B);i>r;r++)_[r]=0;for(r=3*P,i=Math.max(M.length,3*B);i>r;r++)M[r]=0;m.directional.length=A,m.point.length=D,m.spot.length=L,m.hemi.length=P,m.ambient[0]=p,m.ambient[1]=f,m.ambient[2]=d}function at(e){e!==hr&&(Ot.lineWidth(e),hr=e)}function st(e,t,r){sr!==e&&(e?Ot.enable(Ot.POLYGON_OFFSET_FILL):Ot.disable(Ot.POLYGON_OFFSET_FILL),sr=e),!e||lr===t&&cr===r||(Ot.polygonOffset(t,r),lr=t,cr=r)}function lt(e){var t,r,i=[];for(var n in e)t=e[n],t!==!1&&(r="#define "+n+" "+t,i.push(r));return i.join("\n")}function ct(e,t,r,i,n,o,a){var s,l,c,h,u,p=[];e?p.push(e):(p.push(t),p.push(r));for(c in o)p.push(c),p.push(o[c]);for(s in a)p.push(s),p.push(a[s]);for(u=p.join(),s=0,l=Gt.length;l>s;s++){var f=Gt[s];if(f.code===u)return f.usedTimes++,f.program}var d="SHADOWMAP_TYPE_BASIC";a.shadowMapType===THREE.PCFShadowMap?d="SHADOWMAP_TYPE_PCF":a.shadowMapType===THREE.PCFSoftShadowMap&&(d="SHADOWMAP_TYPE_PCF_SOFT");var m=lt(o);h=Ot.createProgram();var E=["precision "+At+" float;",m,Cr?"#define VERTEX_TEXTURES":"",jt.gammaInput?"#define GAMMA_INPUT":"",jt.gammaOutput?"#define GAMMA_OUTPUT":"",jt.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+a.maxDirLights,"#define MAX_POINT_LIGHTS "+a.maxPointLights,"#define MAX_SPOT_LIGHTS "+a.maxSpotLights,"#define MAX_HEMI_LIGHTS "+a.maxHemiLights,"#define MAX_SHADOWS "+a.maxShadows,"#define MAX_BONES "+a.maxBones,a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.lightMap?"#define USE_LIGHTMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.vertexColors?"#define USE_COLOR":"",a.skinning?"#define USE_SKINNING":"",a.useVertexTexture?"#define BONE_TEXTURE":"",a.boneTextureWidth?"#define N_BONE_PIXEL_X "+a.boneTextureWidth.toFixed(1):"",a.boneTextureHeight?"#define N_BONE_PIXEL_Y "+a.boneTextureHeight.toFixed(1):"",a.morphTargets?"#define USE_MORPHTARGETS":"",a.morphNormals?"#define USE_MORPHNORMALS":"",a.perPixel?"#define PHONG_PER_PIXEL":"",a.wrapAround?"#define WRAP_AROUND":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+d:"",a.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",a.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",a.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),g=["precision "+At+" float;",a.bumpMap||a.normalMap?"#extension GL_OES_standard_derivatives : enable":"",m,"#define MAX_DIR_LIGHTS "+a.maxDirLights,"#define MAX_POINT_LIGHTS "+a.maxPointLights,"#define MAX_SPOT_LIGHTS "+a.maxSpotLights,"#define MAX_HEMI_LIGHTS "+a.maxHemiLights,"#define MAX_SHADOWS "+a.maxShadows,a.alphaTest?"#define ALPHATEST "+a.alphaTest:"",jt.gammaInput?"#define GAMMA_INPUT":"",jt.gammaOutput?"#define GAMMA_OUTPUT":"",jt.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",a.useFog&&a.fog?"#define USE_FOG":"",a.useFog&&a.fogExp?"#define FOG_EXP2":"",a.map?"#define USE_MAP":"",a.envMap?"#define USE_ENVMAP":"",a.lightMap?"#define USE_LIGHTMAP":"",a.bumpMap?"#define USE_BUMPMAP":"",a.normalMap?"#define USE_NORMALMAP":"",a.specularMap?"#define USE_SPECULARMAP":"",a.vertexColors?"#define USE_COLOR":"",a.metal?"#define METAL":"",a.perPixel?"#define PHONG_PER_PIXEL":"",a.wrapAround?"#define WRAP_AROUND":"",a.doubleSided?"#define DOUBLE_SIDED":"",a.flipSided?"#define FLIP_SIDED":"",a.shadowMapEnabled?"#define USE_SHADOWMAP":"",a.shadowMapEnabled?"#define "+d:"",a.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",a.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),v=ft("fragment",g+t),y=ft("vertex",E+r);Ot.attachShader(h,y),Ot.attachShader(h,v),Ot.linkProgram(h),Ot.getProgramParameter(h,Ot.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+Ot.getProgramParameter(h,Ot.VALIDATE_STATUS)+", gl error ["+Ot.getError()+"]"),Ot.deleteShader(v),Ot.deleteShader(y),h.uniforms={},h.attributes={};var T,R,x,b;T=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],a.useVertexTexture?T.push("boneTexture"):T.push("boneGlobalMatrices");for(R in i)T.push(R);for(ht(h,T),T=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],b=0;a.maxMorphTargets>b;b++)T.push("morphTarget"+b);for(b=0;a.maxMorphNormals>b;b++)T.push("morphNormal"+b);for(x in n)T.push(x);return ut(h,T),h.id=Wt++,Gt.push({program:h,code:u,usedTimes:1}),jt.info.memory.programs=Gt.length,h}function ht(e,t){var r,i,n;for(r=0,i=t.length;i>r;r++)n=t[r],e.uniforms[n]=Ot.getUniformLocation(e,n)}function ut(e,t){var r,i,n;for(r=0,i=t.length;i>r;r++)n=t[r],e.attributes[n]=Ot.getAttribLocation(e,n)}function pt(e){for(var t=e.split("\n"),r=0,i=t.length;i>r;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function ft(e,t){var r;return"fragment"===e?r=Ot.createShader(Ot.FRAGMENT_SHADER):"vertex"===e&&(r=Ot.createShader(Ot.VERTEX_SHADER)),Ot.shaderSource(r,t),Ot.compileShader(r),Ot.getShaderParameter(r,Ot.COMPILE_STATUS)?r:(console.error(Ot.getShaderInfoLog(r)),console.error(pt(t)),null)}function dt(e){return 0===(e&e-1)}function mt(e,t,r){r?(Ot.texParameteri(e,Ot.TEXTURE_WRAP_S,bt(t.wrapS)),Ot.texParameteri(e,Ot.TEXTURE_WRAP_T,bt(t.wrapT)),Ot.texParameteri(e,Ot.TEXTURE_MAG_FILTER,bt(t.magFilter)),Ot.texParameteri(e,Ot.TEXTURE_MIN_FILTER,bt(t.minFilter))):(Ot.texParameteri(e,Ot.TEXTURE_WRAP_S,Ot.CLAMP_TO_EDGE),Ot.texParameteri(e,Ot.TEXTURE_WRAP_T,Ot.CLAMP_TO_EDGE),Ot.texParameteri(e,Ot.TEXTURE_MAG_FILTER,xt(t.magFilter)),Ot.texParameteri(e,Ot.TEXTURE_MIN_FILTER,xt(t.minFilter))),Vt&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(Ot.texParameterf(e,Vt.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Mr)),t.__oldAnisotropy=t.anisotropy)}function Et(e,t){if(t>=e.width&&t>=e.height)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),n=Math.floor(e.height*t/r),o=document.createElement("canvas");o.width=i,o.height=n;var a=o.getContext("2d");return a.drawImage(e,0,0,e.width,e.height,0,0,i,n),o}function gt(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.image.__webglTextureCube=Ot.createTexture(),jt.info.memory.textures++),Ot.activeTexture(Ot.TEXTURE0+t),Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Ot.pixelStorei(Ot.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],n=0;6>n;n++)i[n]=jt.autoScaleCubemaps&&!r?Et(e.image[n],_r):e.image[n];var o=i[0],a=dt(o.width)&&dt(o.height),s=bt(e.format),l=bt(e.type);mt(Ot.TEXTURE_CUBE_MAP,e,a);for(var n=0;6>n;n++)if(r)for(var c,h=i[n].mipmaps,u=0,p=h.length;p>u;u++)c=h[u],Ot.compressedTexImage2D(Ot.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,c.width,c.height,0,c.data);else Ot.texImage2D(Ot.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,l,i[n]);e.generateMipmaps&&a&&Ot.generateMipmap(Ot.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Ot.activeTexture(Ot.TEXTURE0+t),Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function vt(e,t){Ot.activeTexture(Ot.TEXTURE0+t),Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,e.__webglTexture)}function yt(e,t,r){Ot.bindFramebuffer(Ot.FRAMEBUFFER,e),Ot.framebufferTexture2D(Ot.FRAMEBUFFER,Ot.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function Tt(e,t){Ot.bindRenderbuffer(Ot.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Ot.renderbufferStorage(Ot.RENDERBUFFER,Ot.DEPTH_COMPONENT16,t.width,t.height),Ot.framebufferRenderbuffer(Ot.FRAMEBUFFER,Ot.DEPTH_ATTACHMENT,Ot.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Ot.renderbufferStorage(Ot.RENDERBUFFER,Ot.DEPTH_STENCIL,t.width,t.height),Ot.framebufferRenderbuffer(Ot.FRAMEBUFFER,Ot.DEPTH_STENCIL_ATTACHMENT,Ot.RENDERBUFFER,e)):Ot.renderbufferStorage(Ot.RENDERBUFFER,Ot.RGBA4,t.width,t.height)}function Rt(e){e instanceof THREE.WebGLRenderTargetCube?(Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,e.__webglTexture),Ot.generateMipmap(Ot.TEXTURE_CUBE_MAP),Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,null)):(Ot.bindTexture(Ot.TEXTURE_2D,e.__webglTexture),Ot.generateMipmap(Ot.TEXTURE_2D),Ot.bindTexture(Ot.TEXTURE_2D,null))}function xt(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Ot.NEAREST:Ot.LINEAR}function bt(e){if(e===THREE.RepeatWrapping)return Ot.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Ot.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Ot.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Ot.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Ot.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Ot.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Ot.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Ot.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Ot.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Ot.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Ot.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Ot.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Ot.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Ot.BYTE;if(e===THREE.ShortType)return Ot.SHORT;if(e===THREE.UnsignedShortType)return Ot.UNSIGNED_SHORT;if(e===THREE.IntType)return Ot.INT;if(e===THREE.UnsignedIntType)return Ot.UNSIGNED_INT;if(e===THREE.FloatType)return Ot.FLOAT;if(e===THREE.AlphaFormat)return Ot.ALPHA;if(e===THREE.RGBFormat)return Ot.RGB;if(e===THREE.RGBAFormat)return Ot.RGBA;if(e===THREE.LuminanceFormat)return Ot.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Ot.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Ot.FUNC_ADD;if(e===THREE.SubtractEquation)return Ot.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Ot.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Ot.ZERO;if(e===THREE.OneFactor)return Ot.ONE;if(e===THREE.SrcColorFactor)return Ot.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Ot.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Ot.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Ot.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Ot.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Ot.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Ot.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Ot.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Ot.SRC_ALPHA_SATURATE;if(void 0!==kt){if(e===THREE.RGB_S3TC_DXT1_Format)return kt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return kt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return kt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return kt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function Ht(e){if(Ar&&e&&e.useVertexTexture)return 1024;var t=Ot.getParameter(Ot.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4),i=r;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(i=Math.min(e.bones.length,i),e.bones.length>i&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function wt(e){var t,r,i,n,o,a,s;for(n=o=a=s=0,t=0,r=e.length;r>t;t++)i=e[t],i.onlyShadow||(i instanceof THREE.DirectionalLight&&n++,i instanceof THREE.PointLight&&o++,i instanceof THREE.SpotLight&&a++,i instanceof THREE.HemisphereLight&&s++);return{directional:n,point:o,spot:a,hemi:s}}function St(e){var t,r,i,n=0;for(t=0,r=e.length;r>t;t++)i=e[t],i.castShadow&&(i instanceof THREE.SpotLight&&n++,i instanceof THREE.DirectionalLight&&!i.shadowCascade&&n++);return n}function _t(){try{if(!(Ot=Ct.getContext("experimental-webgl",{alpha:Dt,premultipliedAlpha:Lt,antialias:Pt,stencil:Ft,preserveDrawingBuffer:Nt})))throw"Error creating WebGL context."}catch(e){console.error(e)}It=Ot.getExtension("OES_texture_float"),zt=Ot.getExtension("OES_standard_derivatives"),Vt=Ot.getExtension("EXT_texture_filter_anisotropic")||Ot.getExtension("MOZ_EXT_texture_filter_anisotropic")||Ot.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),kt=Ot.getExtension("WEBGL_compressed_texture_s3tc")||Ot.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Ot.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),It||console.log("THREE.WebGLRenderer: Float textures not supported."),zt||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),Vt||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),kt||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}function Mt(){Ot.clearColor(0,0,0,1),Ot.clearDepth(1),Ot.clearStencil(0),Ot.enable(Ot.DEPTH_TEST),Ot.depthFunc(Ot.LEQUAL),Ot.frontFace(Ot.CCW),Ot.cullFace(Ot.BACK),Ot.enable(Ot.CULL_FACE),Ot.enable(Ot.BLEND),Ot.blendEquation(Ot.FUNC_ADD),Ot.blendFunc(Ot.SRC_ALPHA,Ot.ONE_MINUS_SRC_ALPHA),Ot.clearColor(Ut.r,Ut.g,Ut.b,Bt)}e=e||{};var Ct=void 0!==e.canvas?e.canvas:document.createElement("canvas"),At=void 0!==e.precision?e.precision:"highp",Dt=void 0!==e.alpha?e.alpha:!0,Lt=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,Pt=void 0!==e.antialias?e.antialias:!1,Ft=void 0!==e.stencil?e.stencil:!0,Nt=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,Ut=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),Bt=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=Ct,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.autoUpdateScene=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Ot,It,zt,Vt,kt,jt=this,Gt=[],Wt=0,qt=null,Xt=null,Yt=-1,Kt=null,Jt=null,$t=0,Qt=0,Zt=-1,er=-1,tr=-1,rr=-1,ir=-1,nr=-1,or=-1,ar=-1,sr=null,lr=null,cr=null,hr=null,ur=0,pr=0,fr=0,dr=0,mr=0,Er=0,gr={},vr=new THREE.Frustum,yr=new THREE.Matrix4,Tr=new THREE.Matrix4,Rr=new THREE.Vector3,xr=new THREE.Vector3,br=!0,Hr={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};_t(),Mt(),this.context=Ot;var wr=Ot.getParameter(Ot.MAX_TEXTURE_IMAGE_UNITS),Sr=Ot.getParameter(Ot.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Ot.getParameter(Ot.MAX_TEXTURE_SIZE);var _r=Ot.getParameter(Ot.MAX_CUBE_MAP_TEXTURE_SIZE),Mr=Vt?Ot.getParameter(Vt.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Cr=Sr>0,Ar=Cr&&It;kt?Ot.getParameter(Ot.COMPRESSED_TEXTURE_FORMATS):[];var Dr=Ot.getShaderPrecisionFormat(Ot.VERTEX_SHADER,Ot.HIGH_FLOAT),Lr=Ot.getShaderPrecisionFormat(Ot.VERTEX_SHADER,Ot.MEDIUM_FLOAT);Ot.getShaderPrecisionFormat(Ot.VERTEX_SHADER,Ot.LOW_FLOAT);var Pr=Ot.getShaderPrecisionFormat(Ot.FRAGMENT_SHADER,Ot.HIGH_FLOAT),Fr=Ot.getShaderPrecisionFormat(Ot.FRAGMENT_SHADER,Ot.MEDIUM_FLOAT);Ot.getShaderPrecisionFormat(Ot.FRAGMENT_SHADER,Ot.LOW_FLOAT),Ot.getShaderPrecisionFormat(Ot.VERTEX_SHADER,Ot.HIGH_INT),Ot.getShaderPrecisionFormat(Ot.VERTEX_SHADER,Ot.MEDIUM_INT),Ot.getShaderPrecisionFormat(Ot.VERTEX_SHADER,Ot.LOW_INT),Ot.getShaderPrecisionFormat(Ot.FRAGMENT_SHADER,Ot.HIGH_INT),Ot.getShaderPrecisionFormat(Ot.FRAGMENT_SHADER,Ot.MEDIUM_INT),Ot.getShaderPrecisionFormat(Ot.FRAGMENT_SHADER,Ot.LOW_INT);var Nr=Dr.precision>0&&Pr.precision>0,Ur=Lr.precision>0&&Fr.precision>0;"highp"!==At||Nr||(Ur?(At="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(At="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==At||Ur||(At="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Ot},this.supportsVertexTextures=function(){return Cr},this.supportsFloatTextures=function(){return It},this.supportsStandardDerivatives=function(){return zt},this.supportsCompressedTextureS3TC=function(){return kt},this.getMaxAnisotropy=function(){return Mr},this.getPrecision=function(){return At},this.setSize=function(e,t){Ct.width=e*this.devicePixelRatio,Ct.height=t*this.devicePixelRatio,Ct.style.width=e+"px",Ct.style.height=t+"px",this.setViewport(0,0,Ct.width,Ct.height)},this.setViewport=function(e,t,r,i){ur=void 0!==e?e:0,pr=void 0!==t?t:0,fr=void 0!==r?r:Ct.width,dr=void 0!==i?i:Ct.height,Ot.viewport(ur,pr,fr,dr)},this.setScissor=function(e,t,r,i){Ot.scissor(e,t,r,i)},this.enableScissorTest=function(e){e?Ot.enable(Ot.SCISSOR_TEST):Ot.disable(Ot.SCISSOR_TEST)},this.setClearColorHex=function(e,t){Ut.setHex(e),Bt=t,Ot.clearColor(Ut.r,Ut.g,Ut.b,Bt)},this.setClearColor=function(e,t){Ut.copy(e),Bt=t,Ot.clearColor(Ut.r,Ut.g,Ut.b,Bt)},this.getClearColor=function(){return Ut},this.getClearAlpha=function(){return Bt},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=Ot.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=Ot.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=Ot.STENCIL_BUFFER_BIT),Ot.clear(i)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){qt=null,tr=-1,or=-1,ar=-1,Kt=-1,Yt=-1,br=!0,Zt=-1,er=-1,this.shadowMapPlugin.update(e,t)};var Br=function(e){var t=e.target;t.removeEventListener("dispose",Br),Vr(t),jt.info.memory.geometries--},Or=function(e){var t=e.target;t.removeEventListener("dispose",Or),kr(t),jt.info.memory.textures--},Ir=function(e){var t=e.target;t.removeEventListener("dispose",Ir),jr(t),jt.info.memory.textures--},zr=function(e){var t=e.target;t.removeEventListener("dispose",zr),Gr(t)},Vr=function(e){if(e.__webglInit=void 0,void 0!==e.__webglVertexBuffer&&Ot.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&Ot.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&Ot.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&Ot.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&Ot.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&Ot.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&Ot.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&Ot.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&Ot.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&Ot.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&Ot.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.geometryGroups)for(var t in e.geometryGroups){var r=e.geometryGroups[t];if(void 0!==r.numMorphTargets)for(var i=0,n=r.numMorphTargets;n>i;i++)Ot.deleteBuffer(r.__webglMorphTargetsBuffers[i]);if(void 0!==r.numMorphNormals)for(var i=0,n=r.numMorphNormals;n>i;i++)Ot.deleteBuffer(r.__webglMorphNormalsBuffers[i]);o(r)}o(e)},kr=function(e){if(e.image&&e.image.__webglTextureCube)Ot.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,Ot.deleteTexture(e.__webglTexture)}},jr=function(e){if(e&&e.__webglTexture)if(Ot.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Ot.deleteFramebuffer(e.__webglFramebuffer[t]),Ot.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Ot.deleteFramebuffer(e.__webglFramebuffer),Ot.deleteRenderbuffer(e.__webglRenderbuffer)},Gr=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var r,i,n,o=!1;for(r=0,i=Gt.length;i>r;r++)if(n=Gt[r],n.program===t){n.usedTimes--,0===n.usedTimes&&(o=!0);break}if(o===!0){var a=[];for(r=0,i=Gt.length;i>r;r++)n=Gt[r],n.program!==t&&a.push(n);Gt=a,Ot.deleteProgram(t),jt.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Ot.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Ot.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Ot.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Ot.createBuffer()),e.hasPositions&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglVertexBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,e.positionArray,Ot.DYNAMIC_DRAW),Ot.enableVertexAttribArray(t.attributes.position),Ot.vertexAttribPointer(t.attributes.position,3,Ot.FLOAT,!1,0,0)),e.hasNormals){if(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,o,a,s,l,c,h,u,p,f,d,m,E,g=3*e.count;for(E=0;g>E;E+=9)m=e.normalArray,a=m[E],c=m[E+1],p=m[E+2],s=m[E+3],h=m[E+4],f=m[E+5],l=m[E+6],u=m[E+7],d=m[E+8],i=(a+s+l)/3,n=(c+h+u)/3,o=(p+f+d)/3,m[E]=i,m[E+1]=n,m[E+2]=o,m[E+3]=i,m[E+4]=n,m[E+5]=o,m[E+6]=i,m[E+7]=n,m[E+8]=o}Ot.bufferData(Ot.ARRAY_BUFFER,e.normalArray,Ot.DYNAMIC_DRAW),Ot.enableVertexAttribArray(t.attributes.normal),Ot.vertexAttribPointer(t.attributes.normal,3,Ot.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglUvBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,e.uvArray,Ot.DYNAMIC_DRAW),Ot.enableVertexAttribArray(t.attributes.uv),Ot.vertexAttribPointer(t.attributes.uv,2,Ot.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,e.__webglColorBuffer),Ot.bufferData(Ot.ARRAY_BUFFER,e.colorArray,Ot.DYNAMIC_DRAW),Ot.enableVertexAttribArray(t.attributes.color),Ot.vertexAttribPointer(t.attributes.color,3,Ot.FLOAT,!1,0,0)),Ot.drawArrays(Ot.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,n,o){if(i.visible!==!1){var a,s;a=j(e,t,r,i,o),s=a.attributes;var l=!1,c=i.wireframe?1:0,h=16777215*n.id+2*a.id+c;if(h!==Kt&&(Kt=h,l=!0),l&&b(),o instanceof THREE.Mesh){var u=n.attributes.index;if(u){var p=n.offsets;p.length>1&&(l=!0);for(var f=0,d=p.length;d>f;f++){var m=p[f].index;if(l){var E=n.attributes.position,g=E.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,E.buffer),x(s.position),Ot.vertexAttribPointer(s.position,g,Ot.FLOAT,!1,0,4*m*g);var v=n.attributes.normal;if(s.normal>=0&&v){var y=v.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,v.buffer),x(s.normal),Ot.vertexAttribPointer(s.normal,y,Ot.FLOAT,!1,0,4*m*y)}var T=n.attributes.uv;if(s.uv>=0&&T){var R=T.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,T.buffer),x(s.uv),Ot.vertexAttribPointer(s.uv,R,Ot.FLOAT,!1,0,4*m*R)}var H=n.attributes.color;if(s.color>=0&&H){var w=H.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,H.buffer),x(s.color),Ot.vertexAttribPointer(s.color,w,Ot.FLOAT,!1,0,4*m*w)}var S=n.attributes.tangent;if(s.tangent>=0&&S){var _=S.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,S.buffer),x(s.tangent),Ot.vertexAttribPointer(s.tangent,_,Ot.FLOAT,!1,0,4*m*_)}Ot.bindBuffer(Ot.ELEMENT_ARRAY_BUFFER,u.buffer)}Ot.drawElements(Ot.TRIANGLES,p[f].count,Ot.UNSIGNED_SHORT,2*p[f].start),jt.info.render.calls++,jt.info.render.vertices+=p[f].count,jt.info.render.faces+=p[f].count/3}}else{if(l){var E=n.attributes.position,g=E.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,E.buffer),x(s.position),Ot.vertexAttribPointer(s.position,g,Ot.FLOAT,!1,0,0);var v=n.attributes.normal;if(s.normal>=0&&v){var y=v.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,v.buffer),x(s.normal),Ot.vertexAttribPointer(s.normal,y,Ot.FLOAT,!1,0,0)}var T=n.attributes.uv;if(s.uv>=0&&T){var R=T.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,T.buffer),x(s.uv),Ot.vertexAttribPointer(s.uv,R,Ot.FLOAT,!1,0,0)}var H=n.attributes.color;if(s.color>=0&&H){var w=H.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,H.buffer),x(s.color),Ot.vertexAttribPointer(s.color,w,Ot.FLOAT,!1,0,0)}var S=n.attributes.tangent;if(s.tangent>=0&&S){var _=S.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,S.buffer),x(s.tangent),Ot.vertexAttribPointer(s.tangent,_,Ot.FLOAT,!1,0,0)}}Ot.drawArrays(Ot.TRIANGLES,0,E.numItems/3),jt.info.render.calls++,jt.info.render.vertices+=E.numItems/3,jt.info.render.faces+=E.numItems/3/3}}else if(o instanceof THREE.ParticleSystem){if(l){var E=n.attributes.position,g=E.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,E.buffer),x(s.position),Ot.vertexAttribPointer(s.position,g,Ot.FLOAT,!1,0,0);var H=n.attributes.color;if(s.color>=0&&H){var w=H.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,H.buffer),x(s.color),Ot.vertexAttribPointer(s.color,w,Ot.FLOAT,!1,0,0)}Ot.drawArrays(Ot.POINTS,0,E.numItems/3),jt.info.render.calls++,jt.info.render.points+=E.numItems/3}}else if(o instanceof THREE.Line&&l){var E=n.attributes.position,g=E.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,E.buffer),x(s.position),Ot.vertexAttribPointer(s.position,g,Ot.FLOAT,!1,0,0);var H=n.attributes.color;if(s.color>=0&&H){var w=H.itemSize;Ot.bindBuffer(Ot.ARRAY_BUFFER,H.buffer),x(s.color),Ot.vertexAttribPointer(s.color,w,Ot.FLOAT,!1,0,0)}Ot.drawArrays(Ot.LINE_STRIP,0,E.numItems/3),jt.info.render.calls++,jt.info.render.points+=E.numItems}}},this.renderBuffer=function(e,t,r,i,n,o){if(i.visible!==!1){var a,s,l,c,h,u;a=j(e,t,r,i,o),s=a.attributes;var p=!1,f=i.wireframe?1:0,d=16777215*n.id+2*a.id+f;if(d!==Kt&&(Kt=d,p=!0),p&&b(),!i.morphTargets&&s.position>=0?p&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglVertexBuffer),x(s.position),Ot.vertexAttribPointer(s.position,3,Ot.FLOAT,!1,0,0)):o.morphTargetBase&&H(i,n,o),p){if(n.__webglCustomAttributesList)for(h=0,u=n.__webglCustomAttributesList.length;u>h;h++)c=n.__webglCustomAttributesList[h],s[c.buffer.belongsToAttribute]>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,c.buffer),x(s[c.buffer.belongsToAttribute]),Ot.vertexAttribPointer(s[c.buffer.belongsToAttribute],c.size,Ot.FLOAT,!1,0,0));s.color>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglColorBuffer),x(s.color),Ot.vertexAttribPointer(s.color,3,Ot.FLOAT,!1,0,0)),s.normal>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglNormalBuffer),x(s.normal),Ot.vertexAttribPointer(s.normal,3,Ot.FLOAT,!1,0,0)),s.tangent>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglTangentBuffer),x(s.tangent),Ot.vertexAttribPointer(s.tangent,4,Ot.FLOAT,!1,0,0)),s.uv>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglUVBuffer),x(s.uv),Ot.vertexAttribPointer(s.uv,2,Ot.FLOAT,!1,0,0)),s.uv2>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglUV2Buffer),x(s.uv2),Ot.vertexAttribPointer(s.uv2,2,Ot.FLOAT,!1,0,0)),i.skinning&&s.skinIndex>=0&&s.skinWeight>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),x(s.skinIndex),Ot.vertexAttribPointer(s.skinIndex,4,Ot.FLOAT,!1,0,0),Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),x(s.skinWeight),Ot.vertexAttribPointer(s.skinWeight,4,Ot.FLOAT,!1,0,0)),s.lineDistance>=0&&(Ot.bindBuffer(Ot.ARRAY_BUFFER,n.__webglLineDistanceBuffer),x(s.lineDistance),Ot.vertexAttribPointer(s.lineDistance,1,Ot.FLOAT,!1,0,0))
}o instanceof THREE.Mesh?(i.wireframe?(at(i.wireframeLinewidth),p&&Ot.bindBuffer(Ot.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Ot.drawElements(Ot.LINES,n.__webglLineCount,Ot.UNSIGNED_SHORT,0)):(p&&Ot.bindBuffer(Ot.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Ot.drawElements(Ot.TRIANGLES,n.__webglFaceCount,Ot.UNSIGNED_SHORT,0)),jt.info.render.calls++,jt.info.render.vertices+=n.__webglFaceCount,jt.info.render.faces+=n.__webglFaceCount/3):o instanceof THREE.Line?(l=o.type===THREE.LineStrip?Ot.LINE_STRIP:Ot.LINES,at(i.linewidth),Ot.drawArrays(l,0,n.__webglLineCount),jt.info.render.calls++):o instanceof THREE.ParticleSystem?(Ot.drawArrays(Ot.POINTS,0,n.__webglParticleCount),jt.info.render.calls++,jt.info.render.points+=n.__webglParticleCount):o instanceof THREE.Ribbon&&(Ot.drawArrays(Ot.TRIANGLE_STRIP,0,n.__webglVertexCount),jt.info.render.calls++)}},this.render=function(e,t,r,i){if(t instanceof THREE.Camera==!1)return console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."),void 0;var n,o,a,s,l,c=e.__lights,h=e.fog;for(Yt=-1,br=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),yr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),vr.setFromMatrix(yr),this.autoUpdateObjects&&this.initWebGLObjects(e),_(this.renderPluginsPre,e,t),jt.info.render.calls=0,jt.info.render.vertices=0,jt.info.render.faces=0,jt.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=e.__webglObjects,n=0,o=l.length;o>n;n++)a=l[n],s=a.object,a.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!vr.intersectsObject(s)||(rt(s,t),D(a),a.render=!0,this.sortObjects===!0&&(null!==s.renderDepth?a.z=s.renderDepth:(Rr.copy(s.matrixWorld.getPosition()),Rr.applyProjection(yr),a.z=Rr.z),a.id=s.id)));for(this.sortObjects&&l.sort(w),l=e.__webglObjectsImmediate,n=0,o=l.length;o>n;n++)a=l[n],s=a.object,s.visible&&(rt(s,t),A(a));if(e.overrideMaterial){var u=e.overrideMaterial;this.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),this.setDepthTest(u.depthTest),this.setDepthWrite(u.depthWrite),st(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits),M(e.__webglObjects,!1,"",t,c,h,!0,u),C(e.__webglObjectsImmediate,"",t,c,h,!1,u)}else{var u=null;this.setBlending(THREE.NoBlending),M(e.__webglObjects,!0,"opaque",t,c,h,!1,u),C(e.__webglObjectsImmediate,"opaque",t,c,h,!1,u),M(e.__webglObjects,!1,"transparent",t,c,h,!0,u),C(e.__webglObjectsImmediate,"transparent",t,c,h,!0,u)}_(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&Rt(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,r,i,n){var o=j(e,t,r,i,n);Kt=-1,jt.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(o,Ot,vr):n.render(function(e){jt.renderBufferImmediate(e,o,i)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)P(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)I(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,r=e.__webglObjects.length;r>t;t++)U(e.__webglObjects[t].object)},this.initMaterial=function(e,t,r,i){e.addEventListener("dispose",zr);var n,o,a,s,l,c,h;e instanceof THREE.MeshDepthMaterial?h="depth":e instanceof THREE.MeshNormalMaterial?h="normal":e instanceof THREE.MeshBasicMaterial?h="basic":e instanceof THREE.MeshLambertMaterial?h="lambert":e instanceof THREE.MeshPhongMaterial?h="phong":e instanceof THREE.LineBasicMaterial?h="basic":e instanceof THREE.LineDashedMaterial?h="dashed":e instanceof THREE.ParticleBasicMaterial&&(h="particle_basic"),h&&k(e,THREE.ShaderLib[h]),s=wt(t),c=St(t),l=Ht(i),a={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:Ar&&i&&i.useVertexTexture,boneTextureWidth:i&&i.boneTextureWidth,boneTextureHeight:i&&i.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:c,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=ct(h,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,a);var u=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var p,f="morphTarget";for(o=0;this.maxMorphTargets>o;o++)p=f+o,u[p]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var p,f="morphNormal";for(o=0;this.maxMorphNormals>o;o++)p=f+o,u[p]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(n in e.uniforms)e.uniformsList.push([e.uniforms[n],n])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Ot.disable(Ot.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Ot.frontFace(Ot.CW):Ot.frontFace(Ot.CCW),e===THREE.CullFaceBack?Ot.cullFace(Ot.BACK):e===THREE.CullFaceFront?Ot.cullFace(Ot.FRONT):Ot.cullFace(Ot.FRONT_AND_BACK),Ot.enable(Ot.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;Zt!==t&&(t?Ot.disable(Ot.CULL_FACE):Ot.enable(Ot.CULL_FACE),Zt=t),er!==r&&(r?Ot.frontFace(Ot.CW):Ot.frontFace(Ot.CCW),er=r)},this.setDepthTest=function(e){or!==e&&(e?Ot.enable(Ot.DEPTH_TEST):Ot.disable(Ot.DEPTH_TEST),or=e)},this.setDepthWrite=function(e){ar!==e&&(Ot.depthMask(e),ar=e)},this.setBlending=function(e,t,r,i){e!==tr&&(e===THREE.NoBlending?Ot.disable(Ot.BLEND):e===THREE.AdditiveBlending?(Ot.enable(Ot.BLEND),Ot.blendEquation(Ot.FUNC_ADD),Ot.blendFunc(Ot.SRC_ALPHA,Ot.ONE)):e===THREE.SubtractiveBlending?(Ot.enable(Ot.BLEND),Ot.blendEquation(Ot.FUNC_ADD),Ot.blendFunc(Ot.ZERO,Ot.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Ot.enable(Ot.BLEND),Ot.blendEquation(Ot.FUNC_ADD),Ot.blendFunc(Ot.ZERO,Ot.SRC_COLOR)):e===THREE.CustomBlending?Ot.enable(Ot.BLEND):(Ot.enable(Ot.BLEND),Ot.blendEquationSeparate(Ot.FUNC_ADD,Ot.FUNC_ADD),Ot.blendFuncSeparate(Ot.SRC_ALPHA,Ot.ONE_MINUS_SRC_ALPHA,Ot.ONE,Ot.ONE_MINUS_SRC_ALPHA)),tr=e),e===THREE.CustomBlending?(t!==rr&&(Ot.blendEquation(bt(t)),rr=t),(r!==ir||i!==nr)&&(Ot.blendFunc(bt(r),bt(i)),ir=r,nr=i)):(rr=null,ir=null,nr=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Or),e.__webglTexture=Ot.createTexture(),jt.info.memory.textures++),Ot.activeTexture(Ot.TEXTURE0+t),Ot.bindTexture(Ot.TEXTURE_2D,e.__webglTexture),Ot.pixelStorei(Ot.UNPACK_FLIP_Y_WEBGL,e.flipY),Ot.pixelStorei(Ot.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Ot.pixelStorei(Ot.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=dt(r.width)&&dt(r.height),n=bt(e.format),o=bt(e.type);mt(Ot.TEXTURE_2D,e,i);var a,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var l=0,c=s.length;c>l;l++)a=s[l],Ot.texImage2D(Ot.TEXTURE_2D,l,n,a.width,a.height,0,n,o,a.data);e.generateMipmaps=!1}else Ot.texImage2D(Ot.TEXTURE_2D,0,n,r.width,r.height,0,n,o,r.data);else if(e instanceof THREE.CompressedTexture)for(var l=0,c=s.length;c>l;l++)a=s[l],Ot.compressedTexImage2D(Ot.TEXTURE_2D,l,n,a.width,a.height,0,a.data);else if(s.length>0&&i){for(var l=0,c=s.length;c>l;l++)a=s[l],Ot.texImage2D(Ot.TEXTURE_2D,l,n,n,o,a);e.generateMipmaps=!1}else Ot.texImage2D(Ot.TEXTURE_2D,0,n,n,o,e.image);e.generateMipmaps&&i&&Ot.generateMipmap(Ot.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Ot.activeTexture(Ot.TEXTURE0+t),Ot.bindTexture(Ot.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Ir),e.__webglTexture=Ot.createTexture(),jt.info.memory.textures++;var r=dt(e.width)&&dt(e.height),i=bt(e.format),n=bt(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,e.__webglTexture),mt(Ot.TEXTURE_CUBE_MAP,e,r);for(var o=0;6>o;o++)e.__webglFramebuffer[o]=Ot.createFramebuffer(),e.__webglRenderbuffer[o]=Ot.createRenderbuffer(),Ot.texImage2D(Ot.TEXTURE_CUBE_MAP_POSITIVE_X+o,0,i,e.width,e.height,0,i,n,null),yt(e.__webglFramebuffer[o],e,Ot.TEXTURE_CUBE_MAP_POSITIVE_X+o),Tt(e.__webglRenderbuffer[o],e);r&&Ot.generateMipmap(Ot.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Ot.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Ot.createRenderbuffer(),Ot.bindTexture(Ot.TEXTURE_2D,e.__webglTexture),mt(Ot.TEXTURE_2D,e,r),Ot.texImage2D(Ot.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),yt(e.__webglFramebuffer,e,Ot.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Ot.framebufferRenderbuffer(Ot.FRAMEBUFFER,Ot.DEPTH_ATTACHMENT,Ot.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Ot.framebufferRenderbuffer(Ot.FRAMEBUFFER,Ot.DEPTH_STENCIL_ATTACHMENT,Ot.RENDERBUFFER,e.__webglRenderbuffer):Tt(e.__webglRenderbuffer,e),r&&Ot.generateMipmap(Ot.TEXTURE_2D);t?Ot.bindTexture(Ot.TEXTURE_CUBE_MAP,null):Ot.bindTexture(Ot.TEXTURE_2D,null),Ot.bindRenderbuffer(Ot.RENDERBUFFER,null),Ot.bindFramebuffer(Ot.FRAMEBUFFER,null)}var a,s,l,c,h;e?(a=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,l=e.height,c=0,h=0):(a=null,s=fr,l=dr,c=ur,h=pr),a!==Xt&&(Ot.bindFramebuffer(Ot.FRAMEBUFFER,a),Ot.viewport(c,h,s,l),Xt=a),mr=s,Er=l},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){THREE.EventDispatcher.call(this),this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.object=null,this.z=null},THREE.RenderableParticle=function(){this.object=null,this.x=null,this.y=null,this.z=null,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,r,i){var n=THREE.ColorUtils.__hsv;e.getHSV(n),n.h=THREE.Math.clamp(n.h+t,0,1),n.s=THREE.Math.clamp(n.s+r,0,1),n.v=THREE.Math.clamp(n.v+i,0,1),e.setHSV(n.h,n.s,n.v)}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){var r,i,n=e.vertices.length,o=(e.faceVertexUvs[0].length,t instanceof THREE.Mesh?t.geometry:t),a=e.vertices,s=o.vertices,l=e.faces,c=o.faces,h=e.faceVertexUvs[0],u=o.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,i=new THREE.Matrix3,i.getInverse(r),i.transpose());for(var p=0,f=s.length;f>p;p++){var d=s[p],m=d.clone();r&&m.applyMatrix4(r),a.push(m)}for(p=0,f=c.length;f>p;p++){var E,g,v,y=c[p],T=y.vertexNormals,R=y.vertexColors;y instanceof THREE.Face3?E=new THREE.Face3(y.a+n,y.b+n,y.c+n):y instanceof THREE.Face4&&(E=new THREE.Face4(y.a+n,y.b+n,y.c+n,y.d+n)),E.normal.copy(y.normal),i&&E.normal.applyMatrix3(i).normalize();for(var x=0,b=T.length;b>x;x++)g=T[x].clone(),i&&g.applyMatrix3(i).normalize(),E.vertexNormals.push(g);E.color.copy(y.color);for(var x=0,b=R.length;b>x;x++)v=R[x],E.vertexColors.push(v.clone());E.materialIndex=y.materialIndex,E.centroid.copy(y.centroid),r&&E.centroid.applyMatrix4(r),l.push(E)}for(p=0,f=u.length;f>p;p++){for(var H=u[p],w=[],x=0,b=H.length;b>x;x++)w.push(new THREE.Vector2(H[x].x,H[x].y));h.push(w)}},removeMaterials:function(e,t){for(var r={},i=0,n=t.length;n>i;i++)r[t[i]]=!0;for(var o,a=[],i=0,n=e.faces.length;n>i;i++)o=e.faces[i],o.materialIndex in r||a.push(o);e.faces=a},randomPointInTriangle:function(e,t,r){var i,n,o,a=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return i=THREE.GeometryUtils.random(),n=THREE.GeometryUtils.random(),i+n>1&&(i=1-i,n=1-n),o=1-i-n,a.copy(e),a.multiplyScalar(i),s.copy(t),s.multiplyScalar(n),a.add(s),s.copy(r),s.multiplyScalar(o),a.add(s),a},randomPointInFace:function(e,t,r){var i,n,o,a;if(e instanceof THREE.Face3)return i=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,n,o);if(e instanceof THREE.Face4){i=t.vertices[e.a],n=t.vertices[e.b],o=t.vertices[e.c],a=t.vertices[e.d];var s,l;r?e._area1&&e._area2?(s=e._area1,l=e._area2):(s=THREE.GeometryUtils.triangleArea(i,n,a),l=THREE.GeometryUtils.triangleArea(n,o,a),e._area1=s,e._area2=l):(s=THREE.GeometryUtils.triangleArea(i,n,a),l=THREE.GeometryUtils.triangleArea(n,o,a));var c=THREE.GeometryUtils.random()*(s+l);return s>c?THREE.GeometryUtils.randomPointInTriangle(i,n,a):THREE.GeometryUtils.randomPointInTriangle(n,o,a)}},randomPointsInGeometry:function(e,t){function r(e){function t(r,i){if(r>i)return r;var n=r+Math.floor((i-r)/2);return f[n]>e?t(r,n-1):e>f[n]?t(n+1,i):n}var r=t(0,f.length-1);return r}var i,n,o,a,s,l,c=e.faces,h=e.vertices,u=c.length,p=0,f=[];for(n=0;u>n;n++)i=c[n],i instanceof THREE.Face3?(o=h[i.a],a=h[i.b],s=h[i.c],i._area=THREE.GeometryUtils.triangleArea(o,a,s)):i instanceof THREE.Face4&&(o=h[i.a],a=h[i.b],s=h[i.c],l=h[i.d],i._area1=THREE.GeometryUtils.triangleArea(o,a,l),i._area2=THREE.GeometryUtils.triangleArea(a,s,l),i._area=i._area1+i._area2),p+=i._area,f[n]=p;var d,m,E=[],g={};for(n=0;t>n;n++)d=THREE.GeometryUtils.random()*p,m=r(d),E[n]=THREE.GeometryUtils.randomPointInFace(c[m],e,!0),g[m]?g[m]+=1:g[m]=1;return E},triangleArea:function(e,t,r){var i=THREE.GeometryUtils.__v1,n=THREE.GeometryUtils.__v2;return i.subVectors(t,e),n.subVectors(r,e),i.cross(n),.5*i.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.addVectors(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},normalizeUVs:function(e){for(var t=e.faceVertexUvs[0],r=0,i=t.length;i>r;r++)for(var n=t[r],o=0,a=n.length;a>o;o++)1!==n[o].x&&(n[o].x=n[o].x-Math.floor(n[o].x)),1!==n[o].y&&(n[o].y=n[o].y-Math.floor(n[o].y))},triangulateQuads:function(e){var t,r,i,n,o=[],a=[],s=[];for(t=0,r=e.faceUvs.length;r>t;t++)a[t]=[];for(t=0,r=e.faceVertexUvs.length;r>t;t++)s[t]=[];for(t=0,r=e.faces.length;r>t;t++){var l=e.faces[t];if(l instanceof THREE.Face4){var c=l.a,h=l.b,u=l.c,p=l.d,f=new THREE.Face3,d=new THREE.Face3;for(f.color.copy(l.color),d.color.copy(l.color),f.materialIndex=l.materialIndex,d.materialIndex=l.materialIndex,f.a=c,f.b=h,f.c=p,d.a=h,d.b=u,d.c=p,4===l.vertexColors.length&&(f.vertexColors[0]=l.vertexColors[0].clone(),f.vertexColors[1]=l.vertexColors[1].clone(),f.vertexColors[2]=l.vertexColors[3].clone(),d.vertexColors[0]=l.vertexColors[1].clone(),d.vertexColors[1]=l.vertexColors[2].clone(),d.vertexColors[2]=l.vertexColors[3].clone()),o.push(f,d),i=0,n=e.faceVertexUvs.length;n>i;i++)if(e.faceVertexUvs[i].length){var m=e.faceVertexUvs[i][t],E=m[0],g=m[1],v=m[2],y=m[3],T=[E.clone(),g.clone(),y.clone()],R=[g.clone(),v.clone(),y.clone()];s[i].push(T,R)}for(i=0,n=e.faceUvs.length;n>i;i++)if(e.faceUvs[i].length){var x=e.faceUvs[i][t];a[i].push(x,x)}}else{for(o.push(l),i=0,n=e.faceUvs.length;n>i;i++)a[i].push(e.faceUvs[i][t]);for(i=0,n=e.faceVertexUvs.length;n>i;i++)s[i].push(e.faceVertexUvs[i][t])}}e.faces=o,e.faceUvs=a,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,r,i){for(var n=e.faces,o=r||0,a=i||n.length-1,s=o;a>=s;s++)n[s].materialIndex=t}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,r,i){var n=new Image,o=new THREE.Texture(n,t),a=new THREE.ImageLoader;return a.addEventListener("load",function(e){o.image=e.content,o.needsUpdate=!0,r&&r(o)}),a.addEventListener("error",function(e){i&&i(e.message)}),a.crossOrigin=this.crossOrigin,a.load(e,n),o.sourceFile=e,o},loadCompressedTexture:function(e,t,r,i){var n=new THREE.CompressedTexture;n.mapping=t;var o=new XMLHttpRequest;return o.onload=function(){var e=o.response,t=THREE.ImageUtils.parseDDS(e,!0);n.format=t.format,n.mipmaps=t.mipmaps,n.image.width=t.width,n.image.height=t.height,n.generateMipmaps=!1,n.needsUpdate=!0,r&&r(n)},o.onerror=i,o.open("GET",e,!0),o.responseType="arraybuffer",o.send(null),n},loadTextureCube:function(e,t,r,i){var n=[];n.loadCount=0;var o=new THREE.Texture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1;for(var a=0,s=e.length;s>a;++a){var l=new Image;n[a]=l,l.onload=function(){n.loadCount+=1,6===n.loadCount&&(o.needsUpdate=!0,r&&r(o))},l.onerror=i,l.crossOrigin=this.crossOrigin,l.src=e[a]}return o},loadCompressedTextureCube:function(e,t,r,i){var n=[];n.loadCount=0;var o=new THREE.CompressedTexture;o.image=n,void 0!==t&&(o.mapping=t),o.flipY=!1,o.generateMipmaps=!1;var a=function(e,t){return function(){var i=e.response,a=THREE.ImageUtils.parseDDS(i,!0);t.format=a.format,t.mipmaps=a.mipmaps,t.width=a.width,t.height=a.height,n.loadCount+=1,6===n.loadCount&&(o.format=a.format,o.needsUpdate=!0,r&&r(o))}};if(e instanceof Array)for(var s=0,l=e.length;l>s;++s){var c={};n[s]=c;var h=new XMLHttpRequest;h.onload=a(h,c),h.onerror=i;var u=e[s];h.open("GET",u,!0),h.responseType="arraybuffer",h.send(null)}else{var u=e,h=new XMLHttpRequest;h.onload=function(){var e=h.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var i=t.mipmaps.length/t.mipmapCount,a=0;i>a;a++){n[a]={mipmaps:[]};for(var s=0;t.mipmapCount>s;s++)n[a].mipmaps.push(t.mipmaps[a*t.mipmapCount+s]),n[a].format=t.format,n[a].width=t.width,n[a].height=t.height}o.format=t.format,o.needsUpdate=!0,r&&r(o)}},h.onerror=i,h.open("GET",u,!0),h.responseType="arraybuffer",h.send(null)}return o},parseDDS:function(e,t){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function i(e){return String.fromCharCode(255&e,255&e>>8,255&e>>16,255&e>>24)}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},o=542327876,a=131072,s=512,l=4,c=r("DXT1"),h=r("DXT3"),u=r("DXT5"),p=31,f=0,d=1,m=2,E=3,g=4,v=7,y=20,T=21,R=28,x=new Int32Array(e,0,p);if(x[f]!==o)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),n;if(!x[y]&l)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),n;var b,H=x[T];switch(H){case c:b=8,n.format=THREE.RGB_S3TC_DXT1_Format;break;case h:b=16,n.format=THREE.RGBA_S3TC_DXT3_Format;break;case u:b=16,n.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",i(H)),n}n.mipmapCount=1,x[m]&a&&t!==!1&&(n.mipmapCount=Math.max(1,x[v])),n.isCubemap=x[R]&s?!0:!1,n.width=x[g],n.height=x[E];for(var w=x[d]+4,S=n.width,_=n.height,M=n.isCubemap?6:1,C=0;M>C;C++){for(var A=0;n.mipmapCount>A;A++){var D=Math.max(4,S)/4*Math.max(4,_)/4*b,L=new Uint8Array(e,w,D),P={data:L,width:S,height:_};n.mipmaps.push(P),w+=D,S=Math.max(.5*S,1),_=Math.max(.5*_,1)}S=n.width,_=n.height}return n},getNormalMap:function(e,t){var r=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},i=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var o=e.width,a=e.height,s=document.createElement("canvas");s.width=o,s.height=a;var l=s.getContext("2d");l.drawImage(e,0,0);for(var c=l.getImageData(0,0,o,a).data,h=l.createImageData(o,a),u=h.data,p=0;o>p;p++)for(var f=0;a>f;f++){var d=0>f-1?0:f-1,m=f+1>a-1?a-1:f+1,E=0>p-1?0:p-1,g=p+1>o-1?o-1:p+1,v=[],y=[0,0,c[4*(f*o+p)]/255*t];v.push([-1,0,c[4*(f*o+E)]/255*t]),v.push([-1,-1,c[4*(d*o+E)]/255*t]),v.push([0,-1,c[4*(d*o+p)]/255*t]),v.push([1,-1,c[4*(d*o+g)]/255*t]),v.push([1,0,c[4*(f*o+g)]/255*t]),v.push([1,1,c[4*(m*o+g)]/255*t]),v.push([0,1,c[4*(m*o+p)]/255*t]),v.push([-1,1,c[4*(m*o+E)]/255*t]);for(var T=[],R=v.length,x=0;R>x;x++){var b=v[x],H=v[(x+1)%R];b=i(b,y),H=i(H,y),T.push(n(r(b,H)))}for(var w=[0,0,0],x=0;T.length>x;x++)w[0]+=T[x][0],w[1]+=T[x][1],w[2]+=T[x][2];w[0]/=T.length,w[1]/=T.length,w[2]/=T.length;var S=4*(f*o+p);u[S]=0|255*((w[0]+1)/2),u[S+1]=0|255*((w[1]+1)/2),u[S+2]=0|255*w[2],u[S+3]=255}return l.putImageData(h,0,0),s},generateDataTexture:function(e,t,r){for(var i=e*t,n=new Uint8Array(3*i),o=Math.floor(255*r.r),a=Math.floor(255*r.g),s=Math.floor(255*r.b),l=0;i>l;l++)n[3*l]=o,n[3*l+1]=a,n[3*l+2]=s;var c=new THREE.DataTexture(n,e,t,THREE.RGBFormat);return c.needsUpdate=!0,c}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;n>i;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase(),r=this;return r.faces[t]=r.faces[t]||{},r.faces[t][e.cssFontWeight]=r.faces[t][e.cssFontWeight]||{},r.faces[t][e.cssFontWeight][e.cssFontStyle]=e,r.faces[t][e.cssFontWeight][e.cssFontStyle]=e,e},drawText:function(e){var t,r=this.getFace(),i=this.size/r.resolution,n=0,o=(e+"").split(""),a=o.length,s=[];for(t=0;a>t;t++){var l=new THREE.Path,c=this.extractGlyphPoints(o[t],r,i,n,l);n+=c.offset,s.push(c.path)}var h=n/2;return{paths:s,offset:h}},extractGlyphPoints:function(e,t,r,i,n){var o,a,s,l,c,h,u,p,f,d,m,E,g,v,y,T,R,x,b,H=[],w=t.glyphs[e]||t.glyphs["?"];if(w){if(w.o)for(l=w._cachedOutline||(w._cachedOutline=w.o.split(" ")),h=l.length,u=r,p=r,o=0;h>o;)switch(c=l[o++]){case"m":f=l[o++]*u+i,d=l[o++]*p,n.moveTo(f,d);break;case"l":f=l[o++]*u+i,d=l[o++]*p,n.lineTo(f,d);break;case"q":if(m=l[o++]*u+i,E=l[o++]*p,y=l[o++]*u+i,T=l[o++]*p,n.quadraticCurveTo(y,T,m,E),b=H[H.length-1])for(g=b.x,v=b.y,a=1,s=this.divisions;s>=a;a++){var S=a/s;THREE.Shape.Utils.b2(S,g,y,m),THREE.Shape.Utils.b2(S,v,T,E)}break;case"b":if(m=l[o++]*u+i,E=l[o++]*p,y=l[o++]*u+i,T=l[o++]*-p,R=l[o++]*u+i,x=l[o++]*-p,n.bezierCurveTo(m,E,y,T,R,x),b=H[H.length-1])for(g=b.x,v=b.y,a=1,s=this.divisions;s>=a;a++){var S=a/s;THREE.Shape.Utils.b3(S,g,y,R,m),THREE.Shape.Utils.b3(S,v,T,x,E)}}return{offset:w.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,n=void 0!==t.font?t.font:"helvetiker",o=void 0!==t.weight?t.weight:"normal",a=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=n,THREE.FontUtils.weight=o,THREE.FontUtils.style=a;for(var s=THREE.FontUtils.drawText(e),l=s.paths,c=[],h=0,u=l.length;u>h;h++)Array.prototype.push.apply(c,l[h].toShapes());return c},function(e){var t=1e-10,r=function(e,t){var r=e.length;if(3>r)return null;var o,a,s,l=[],c=[],h=[];if(i(e)>0)for(a=0;r>a;a++)c[a]=a;else for(a=0;r>a;a++)c[a]=r-1-a;var u=r,p=2*u;for(a=u-1;u>2;){if(0>=p--)return console.log("Warning, unable to triangulate polygon!"),t?h:l;if(o=a,o>=u&&(o=0),a=o+1,a>=u&&(a=0),s=a+1,s>=u&&(s=0),n(e,o,a,s,u,c)){var f,d,m,E,g;for(f=c[o],d=c[a],m=c[s],l.push([e[f],e[d],e[m]]),h.push([c[o],c[a],c[s]]),E=a,g=a+1;u>g;E++,g++)c[E]=c[g];u--,p=2*u}}return t?h:l},i=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return.5*r},n=function(e,r,i,n,o,a){var s,l,c,h,u,p,f,d,m;if(l=e[a[r]].x,c=e[a[r]].y,h=e[a[i]].x,u=e[a[i]].y,p=e[a[n]].x,f=e[a[n]].y,t>(h-l)*(f-c)-(u-c)*(p-l))return!1;var E,g,v,y,T,R,x,b,H,w,S,_,M,C,A;for(E=p-h,g=f-u,v=l-p,y=c-f,T=h-l,R=u-c,s=0;o>s;s++)if(s!==r&&s!==i&&s!==n&&(d=e[a[s]].x,m=e[a[s]].y,x=d-l,b=m-c,H=d-h,w=m-u,S=d-p,_=m-f,A=E*w-g*H,M=T*b-R*x,C=v*_-y*S,A>=0&&C>=0&&M>=0))return!1;return!0};return e.Triangulate=r,e.Triangulate.area=i,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],n=this.getPoint(0),o=0;for(i.push(0),r=1;e>=r;r++)t=this.getPoint(r/e),o+=t.distanceTo(n),i.push(o),n=t;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),n=0,o=i.length;r=t?t:e*i[o-1];for(var a,s=0,l=o-1;l>=s;)if(n=Math.floor(s+(l-s)/2),a=i[n]-r,0>a)s=n+1;else{if(!(a>0)){l=n;break}l=n-1}if(n=l,i[n]==r){var c=n/(o-1);return c}var h=i[n],u=i[n+1],p=u-h,f=(r-h)/p,c=(n+f)/(o-1);return c},THREE.Curve.prototype.getTangent=function(e){var t=1e-4,r=e-t,i=e+t;0>r&&(r=0),i>1&&(i=1);var n=this.getPoint(r),o=this.getPoint(i),a=o.clone().sub(n);return a.normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){var e=this.v2.clone().sub(this.v1);return e.normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,r,i,n=new THREE.Vector2,o=[],a=this.points;return t=(a.length-1)*e,r=Math.floor(t),i=t-r,o[0]=0==r?r:r-1,o[1]=r,o[2]=r>a.length-2?a.length-1:r+1,o[3]=r>a.length-3?a.length-1:r+2,n.x=THREE.Curve.Utils.interpolate(a[o[0]].x,a[o[1]].x,a[o[2]].x,a[o[3]].x,i),n.y=THREE.Curve.Utils.interpolate(a[o[0]].y,a[o[1]].y,a[o[2]].y,a[o[3]].y,i),n},THREE.EllipseCurve=function(e,t,r,i,n,o,a){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=o,this.aClockwise=a},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;this.aClockwise||(e=1-e);var r=this.aStartAngle+e*t,i=this.aX+this.xRadius*Math.cos(r),n=this.aY+this.yRadius*Math.sin(r);return new THREE.Vector2(i,n)},THREE.ArcCurve=function(e,t,r,i,n,o){THREE.EllipseCurve.call(this,e,t,r,r,i,n,o)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e){var t=6*e*e-6*e,r=3*e*e-4*e+1,i=-6*e*e+6*e,n=3*e*e-2*e;return t+r+i+n
},interpolate:function(e,t,r,i,n){var o=.5*(r-e),a=.5*(i-t),s=n*n,l=n*s;return(2*t-2*r+o+a)*l+(-3*t+3*r-2*o-a)*s+o*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,n=new THREE.Vector3,o=[],a=this.points;t=(a.length-1)*e,r=Math.floor(t),i=t-r,o[0]=0==r?r:r-1,o[1]=r,o[2]=r>a.length-2?a.length-1:r+1,o[3]=r>a.length-3?a.length-1:r+2;var s=a[o[0]],l=a[o[1]],c=a[o[2]],h=a[o[3]];return n.x=THREE.Curve.Utils.interpolate(s.x,l.x,c.x,h.x,i),n.y=THREE.Curve.Utils.interpolate(s.y,l.y,c.y,h.y,i),n.z=THREE.Curve.Utils.interpolate(s.z,l.z,c.z,h.z,i),n}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,n=new THREE.Vector3,o=[],a=this.points;return t=(a.length-0)*e,r=Math.floor(t),i=t-r,r+=r>0?0:(Math.floor(Math.abs(r)/a.length)+1)*a.length,o[0]=(r-1)%a.length,o[1]=r%a.length,o[2]=(r+1)%a.length,o[3]=(r+2)%a.length,n.x=THREE.Curve.Utils.interpolate(a[o[0]].x,a[o[1]].x,a[o[2]].x,a[o[3]].x,i),n.y=THREE.Curve.Utils.interpolate(a[o[0]].y,a[o[1]].y,a[o[2]].y,a[o[3]].y,i),n.z=THREE.Curve.Utils.interpolate(a[o[0]].z,a[o[1]].z,a[o[2]].z,a[o[3]].z,i),n}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t,r,i=e*this.getLength(),n=this.getCurveLengths(),o=0;n.length>o;){if(n[o]>=i){t=n[o]-i,r=this.curves[o];var a=1-t/r.getLength();return r.getPointAt(a)}o++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;i>e;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t,t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,n,o,a=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,l,c,h,u=a[0]instanceof THREE.Vector3;for(h=u?new THREE.Vector3:new THREE.Vector2,l=0,c=a.length;c>l;l++)s=a[l],s.x>e?e=s.x:i>s.x&&(i=s.x),s.y>t?t=s.y:n>s.y&&(n=s.y),u&&(s.z>r?r=s.z:o>s.z&&(o=s.z)),h.add(s);var p={minX:i,minY:n,maxX:e,maxY:t,centroid:h.divideScalar(c)};return u&&(p.maxZ=r,p.minZ=o),p},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;e.length>r;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,n=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,n=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,n,o,a,s,l=this.getBoundingBox();for(r=0,i=e.length;i>r;r++){n=e[r],o=n.x,a=n.y,s=o/l.maxX,s=t.getUtoTmapping(s,o);var c=t.getPoint(s),h=t.getNormalVector(s).multiplyScalar(a);n.x=c.x+h.x,n.y=c.y+h.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;r>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(){var e=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:e})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,n=i[i.length-2],o=i[i.length-1],a=new THREE.LineCurve(new THREE.Vector2(n,o),new THREE.Vector2(e,t));this.curves.push(a),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),o=this.actions[this.actions.length-1].args,a=o[o.length-2],s=o[o.length-1],l=new THREE.QuadraticBezierCurve(new THREE.Vector2(a,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(l),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,o){var a=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,l=s[s.length-2],c=s[s.length-1],h=new THREE.CubicBezierCurve(new THREE.Vector2(l,c),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,o));this.curves.push(h),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:a})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],o=[new THREE.Vector2(i,n)];Array.prototype.push.apply(o,e);var a=new THREE.SplineCurve(o);this.curves.push(a),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,n,o){var a=this.actions[this.actions.length-1].args,s=a[a.length-2],l=a[a.length-1];this.absarc(e+s,t+l,r,i,n,o)},THREE.Path.prototype.absarc=function(e,t,r,i,n,o){this.absellipse(e,t,r,r,i,n,o)},THREE.Path.prototype.ellipse=function(e,t,r,i,n,o,a){var s=this.actions[this.actions.length-1].args,l=s[s.length-2],c=s[s.length-1];this.absellipse(e+l,t+c,r,i,n,o,a)},THREE.Path.prototype.absellipse=function(e,t,r,i,n,o,a){var s=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(e,t,r,i,n,o,a);this.curves.push(l);var c=l.getPoint(a?1:0);s.push(c.x),s.push(c.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],r=0;e>r;r++)t.push(this.getPoint(r/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,n,o,a,s,l,c,h,u,p,f,d,m,E,g,v,y,T=[];for(r=0,i=this.actions.length;i>r;r++)switch(n=this.actions[r],o=n.action,a=n.args,o){case THREE.PathActions.MOVE_TO:T.push(new THREE.Vector2(a[0],a[1]));break;case THREE.PathActions.LINE_TO:T.push(new THREE.Vector2(a[0],a[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=a[2],l=a[3],u=a[0],p=a[1],T.length>0?(m=T[T.length-1],f=m.x,d=m.y):(m=this.actions[r-1].args,f=m[m.length-2],d=m[m.length-1]),E=1;e>=E;E++)g=E/e,v=THREE.Shape.Utils.b2(g,f,u,s),y=THREE.Shape.Utils.b2(g,d,p,l),T.push(new THREE.Vector2(v,y));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=a[4],l=a[5],u=a[0],p=a[1],c=a[2],h=a[3],T.length>0?(m=T[T.length-1],f=m.x,d=m.y):(m=this.actions[r-1].args,f=m[m.length-2],d=m[m.length-1]),E=1;e>=E;E++)g=E/e,v=THREE.Shape.Utils.b3(g,f,u,c,s),y=THREE.Shape.Utils.b3(g,d,p,h,l),T.push(new THREE.Vector2(v,y));break;case THREE.PathActions.CSPLINE_THRU:m=this.actions[r-1].args;var R=new THREE.Vector2(m[m.length-2],m[m.length-1]),x=[R],b=e*a[0].length;x=x.concat(a[0]);var H=new THREE.SplineCurve(x);for(E=1;b>=E;E++)T.push(H.getPointAt(E/b));break;case THREE.PathActions.ARC:var w,S=a[0],_=a[1],M=a[2],C=a[3],A=a[4],D=!!a[5],L=A-C,P=2*e;for(E=1;P>=E;E++)g=E/P,D||(g=1-g),w=C+g*L,v=S+M*Math.cos(w),y=_+M*Math.sin(w),T.push(new THREE.Vector2(v,y));break;case THREE.PathActions.ELLIPSE:var w,S=a[0],_=a[1],F=a[2],N=a[3],C=a[4],A=a[5],D=!!a[6],L=A-C,P=2*e;for(E=1;P>=E;E++)g=E/P,D||(g=1-g),w=C+g*L,v=S+F*Math.cos(w),y=_+N*Math.sin(w),T.push(new THREE.Vector2(v,y))}var U=T[T.length-1],B=1e-10;return B>Math.abs(U.x-T[0].x)&&B>Math.abs(U.y-T[0].y)&&T.splice(T.length-1,1),t&&T.push(T[0]),T},THREE.Path.prototype.toShapes=function(){var e,t,r,i,n,o=[],a=new THREE.Path;for(e=0,t=this.actions.length;t>e;e++)r=this.actions[e],n=r.args,i=r.action,i==THREE.PathActions.MOVE_TO&&0!=a.actions.length&&(o.push(a),a=new THREE.Path),a[i].apply(a,n);if(0!=a.actions.length&&o.push(a),0==o.length)return[];var s,l,c=[],h=!THREE.Shape.Utils.isClockWise(o[0].getPoints());if(1==o.length)return s=o[0],l=new THREE.Shape,l.actions=s.actions,l.curves=s.curves,c.push(l),c;if(h)for(l=new THREE.Shape,e=0,t=o.length;t>e;e++)s=o[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(l.actions=s.actions,l.curves=s.curves,c.push(l),l=new THREE.Shape):l.holes.push(s);else{for(e=0,t=o.length;t>e;e++)s=o[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(l&&c.push(l),l=new THREE.Shape,l.actions=s.actions,l.curves=s.curves):l.holes.push(s);c.push(l)}return c},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){var t=new THREE.ExtrudeGeometry(this,e);return t},THREE.Shape.prototype.makeGeometry=function(e){var t=new THREE.ShapeGeometry(this,e);return t},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var r,i,n,o,a,s,l,c,h,u,p,f,d,m,E,g,v=e.concat(),y=v.concat(),T=[];for(a=0;t.length>a;a++){for(l=t[a],Array.prototype.push.apply(y,l),c=Number.POSITIVE_INFINITY,s=0;l.length>s;s++){p=l[s];var R=[];for(u=0;v.length>u;u++)f=v[u],h=p.distanceToSquared(f),R.push(h),c>h&&(c=h,n=s,o=u)}r=o-1>=0?o-1:v.length-1,i=n-1>=0?n-1:l.length-1;var x=[l[n],v[o],v[r]],b=THREE.FontUtils.Triangulate.area(x),H=[l[n],l[i],v[o]],w=THREE.FontUtils.Triangulate.area(H),S=1,_=-1,M=o,C=n;o+=S,n+=_,0>o&&(o+=v.length),o%=v.length,0>n&&(n+=l.length),n%=l.length,r=o-1>=0?o-1:v.length-1,i=n-1>=0?n-1:l.length-1,x=[l[n],v[o],v[r]];var A=THREE.FontUtils.Triangulate.area(x);H=[l[n],l[i],v[o]];var D=THREE.FontUtils.Triangulate.area(H);b+w>A+D&&(o=M,n=C,0>o&&(o+=v.length),o%=v.length,0>n&&(n+=l.length),n%=l.length,r=o-1>=0?o-1:v.length-1,i=n-1>=0?n-1:l.length-1),d=v.slice(0,o),m=v.slice(o),E=l.slice(n),g=l.slice(0,n);var L=[l[n],v[o],v[r]],P=[l[n],l[i],v[o]];T.push(L),T.push(P),v=d.concat(E).concat(g).concat(m)}return{shape:v,isolatedPts:T,allpoints:y}},triangulateShape:function(e,t){var r,i,n,o,a,s,l=THREE.Shape.Utils.removeHoles(e,t),c=l.shape,h=l.allpoints,u=l.isolatedPts,p=THREE.FontUtils.Triangulate(c,!1),f={};for(r=0,i=h.length;i>r;r++)a=h[r].x+":"+h[r].y,void 0!==f[a]&&console.log("Duplicate point",a),f[a]=r;for(r=0,i=p.length;i>r;r++)for(o=p[r],n=0;3>n;n++)a=o[n].x+":"+o[n].y,s=f[a],void 0!==s&&(o[n]=s);for(r=0,i=u.length;i>r;r++)for(o=u[r],n=0;3>n;n++)a=o[n].x+":"+o[n].y,s=f[a],void 0!==s&&(o[n]=s);return p.concat(u)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){var r=1-e;return 3*r*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}},THREE.AnimationHandler=function(){var e=[],t={},r={};r.update=function(t){for(var r=0;e.length>r;r++)e[r].update(t)},r.addToUpdate=function(t){-1===e.indexOf(t)&&e.push(t)},r.removeFromUpdate=function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},r.add=function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,n(e)},r.get=function(e){return"string"==typeof e?t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null):void 0},r.parse=function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;e.bones.length>r;r++)t.push(e.bones[r]);else i(e,t);return t};var i=function(e,t){t.push(e);for(var r=0;e.children.length>r;r++)i(e.children[r],t)},n=function(e){if(e.initialized!==!0){for(var t=0;e.hierarchy.length>t;t++){for(var r=0;e.hierarchy[t].keys.length>r;r++)if(0>e.hierarchy[t].keys[r].time&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(var n={},r=0;e.hierarchy[t].keys.length>r;r++)for(var o=0;e.hierarchy[t].keys[r].morphTargets.length>o;o++){var a=e.hierarchy[t].keys[r].morphTargets[o];n[a]=-1}e.hierarchy[t].usedMorphTargets=n;for(var r=0;e.hierarchy[t].keys.length>r;r++){var s={};for(var a in n){for(var o=0;e.hierarchy[t].keys[r].morphTargets.length>o;o++)if(e.hierarchy[t].keys[r].morphTargets[o]===a){s[a]=e.hierarchy[t].keys[r].morphTargetsInfluences[o];break}o===e.hierarchy[t].keys[r].morphTargets.length&&(s[a]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=s}}for(var r=1;e.hierarchy[t].keys.length>r;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(var r=0;e.hierarchy[t].keys.length>r;r++)e.hierarchy[t].keys[r].index=r}var l=parseInt(e.length*e.fps,10);e.JIT={},e.JIT.hierarchy=[];for(var t=0;e.hierarchy.length>t;t++)e.JIT.hierarchy.push(Array(l));e.initialized=!0}};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==r?r:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var r,i,n=this.hierarchy.length;for(r=0;n>r;r++){i=this.hierarchy[r],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(i.useQuaternion=!0),i.matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var o=i.animationCache.prevKey,a=i.animationCache.nextKey;o.pos=this.data.hierarchy[r].keys[0],o.rot=this.data.hierarchy[r].keys[0],o.scl=this.data.hierarchy[r].keys[0],a.pos=this.getNextKeyWith("pos",r,1),a.rot=this.getNextKeyWith("rot",r,1),a.scl=this.getNextKeyWith("scl",r,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(this.isPlaying!==!1){var t,r,i,n,o,a,s,l,c,h,u=["pos","rot","scl"];this.data.JIT.hierarchy;var p,f,d,m,E;this.currentTime+=e*this.timeScale,f=this.currentTime,p=this.currentTime=this.currentTime%this.data.length,h=parseInt(Math.min(p*this.data.fps,this.data.length*this.data.fps),10);for(var g=0,v=this.hierarchy.length;v>g;g++){l=this.hierarchy[g],c=l.animationCache;for(var y=0;3>y;y++){if(t=u[y],a=c.prevKey[t],s=c.nextKey[t],f>=s.time){if(f>p){if(!this.loop)return this.stop(),void 0;for(a=this.data.hierarchy[g].keys[0],s=this.getNextKeyWith(t,g,1);p>s.time;)a=s,s=this.getNextKeyWith(t,g,s.index+1)}else do a=s,s=this.getNextKeyWith(t,g,s.index+1);while(p>s.time);c.prevKey[t]=a,c.nextKey[t]=s}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0,r=(p-a.time)/(s.time-a.time),n=a[t],o=s[t],(0>r||r>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+g),r=0>r?0:1),"pos"===t?(i=l.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(i.x=n[0]+(o[0]-n[0])*r,i.y=n[1]+(o[1]-n[1])*r,i.z=n[2]+(o[2]-n[2])*r):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",g,a.index-1).pos,this.points[1]=n,this.points[2]=o,this.points[3]=this.getNextKeyWith("pos",g,s.index+1).pos,r=.33*r+.33,d=this.interpolateCatmullRom(this.points,r),i.x=d[0],i.y=d[1],i.z=d[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(m=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(m[0],m[1],m[2]),this.target.sub(i),this.target.y=0,this.target.normalize(),E=Math.atan2(this.target.x,this.target.z),l.rotation.set(0,E,0)))):"rot"===t?THREE.Quaternion.slerp(n,o,l.quaternion,r):"scl"===t&&(i=l.scale,i.x=n[0]+(o[0]-n[0])*r,i.y=n[1]+(o[1]-n[1])*r,i.z=n[2]+(o[2]-n[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var r,i,n,o,a,s,l,c,h,u=[],p=[];return r=(e.length-1)*t,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>e.length-2?i:i+1,u[3]=i>e.length-3?i:i+2,s=e[u[0]],l=e[u[1]],c=e[u[2]],h=e[u[3]],o=n*n,a=n*o,p[0]=this.interpolate(s[0],l[0],c[0],h[0],n,o,a),p[1]=this.interpolate(s[1],l[1],c[1],h[1],n,o,a),p[2]=this.interpolate(s[2],l[2],c[2],h[2],n,o,a),p},THREE.Animation.prototype.interpolate=function(e,t,r,i,n,o,a){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*a+(-3*(t-r)-2*s-l)*o+s*n+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=i.length-1>r?r:i.length-1:r%=i.length;i.length>r;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0!==r?r:!0;for(var i=0,n=this.hierarchy.length;n>i;i++){var o=this.data.hierarchy[i].keys,a=this.data.hierarchy[i].sids,s=this.hierarchy[i];if(o.length&&a){for(var l=0;a.length>l;l++){var c=a[l],h=this.getNextKeyWith(c,i,0);h&&h.apply(c)}s.matrixAutoUpdate=!1,this.data.hierarchy[i].node.updateMatrix(),s.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var r,i,n,o=this.hierarchy.length;for(r=0;o>r;r++){i=this.hierarchy[r],n=this.data.hierarchy[r],i.useQuaternion=!0,void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey=null,n.animationCache.nextKey=null,n.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var a=this.data.hierarchy[r].keys;a.length&&(n.animationCache.prevKey=a[0],n.animationCache.nextKey=a[1],this.startTime=Math.min(a[0].time,this.startTime),this.endTime=Math.max(a[a.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;this.data.hierarchy.length>e;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,r,i,n,o,a,s,l,c=this.data.JIT.hierarchy;if(this.currentTime+=e*this.timeScale,s=this.currentTime,a=this.currentTime=this.currentTime%this.data.length,this.startTimeMs>a&&(a=this.currentTime=this.startTimeMs+a),o=parseInt(Math.min(a*this.data.fps,this.data.length*this.data.fps),10),l=s>a,l&&!this.loop){for(var h=0,u=this.hierarchy.length;u>h;h++){var p=this.data.hierarchy[h].keys,f=this.data.hierarchy[h].sids,d=p.length-1,m=this.hierarchy[h];if(p.length){for(var E=0;f.length>E;E++){var g=f[E],v=this.getPrevKeyWith(g,h,d);v&&v.apply(g)}this.data.hierarchy[h].node.updateMatrix(),m.matrixWorldNeedsUpdate=!0}}return this.stop(),void 0}if(!(this.startTime>a)){for(var h=0,u=this.hierarchy.length;u>h;h++){i=this.hierarchy[h],n=this.data.hierarchy[h];var p=n.keys,y=n.animationCache;if(this.JITCompile&&void 0!==c[h][o])i instanceof THREE.Bone?(i.skinMatrix=c[h][o],i.matrixWorldNeedsUpdate=!1):(i.matrix=c[h][o],i.matrixWorldNeedsUpdate=!0);else if(p.length){if(this.JITCompile&&y&&(i instanceof THREE.Bone?i.skinMatrix=y.originalMatrix:i.matrix=y.originalMatrix),t=y.prevKey,r=y.nextKey,t&&r){if(s>=r.time){if(l&&this.loop)for(t=p[0],r=p[1];a>r.time;)t=r,r=p[t.index+1];else if(!l)for(var T=p.length-1;a>r.time&&r.index!==T;)t=r,r=p[t.index+1];y.prevKey=t,y.nextKey=r}r.time>=a?t.interpolate(r,a):t.interpolate(r,r.time)}this.data.hierarchy[h].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===c[0][o]){this.hierarchy[0].updateMatrixWorld(!0);for(var h=0;this.hierarchy.length>h;h++)c[h][o]=this.hierarchy[h]instanceof THREE.Bone?this.hierarchy[h].skinMatrix.clone():this.hierarchy[h].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;i.length>r;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=90,n=1,o=new THREE.PerspectiveCamera(i,n,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(1,0,0)),this.add(o);var a=new THREE.PerspectiveCamera(i,n,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(-1,0,0)),this.add(a);var s=new THREE.PerspectiveCamera(i,n,e,t);s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s);var l=new THREE.PerspectiveCamera(i,n,e,t);l.up.set(0,0,-1),l.lookAt(new THREE.Vector3(0,-1,0)),this.add(l);var c=new THREE.PerspectiveCamera(i,n,e,t);c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,1)),this.add(c);var h=new THREE.PerspectiveCamera(i,n,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,-1)),this.add(h),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,i=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,o,r),r.activeCubeFace=1,e.render(t,a,r),r.activeCubeFace=2,e.render(t,s,r),r.activeCubeFace=3,e.render(t,l,r),r.activeCubeFace=4,e.render(t,c,r),r.generateMipmaps=i,r.activeCubeFace=5,e.render(t,h,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,n,o,a){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,o,a),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,r=this.cameraP.near,i=this.cameraP.far,n=(r+i)/2,o=Math.tan(e/2)*n,a=2*o,s=a*t,l=s/2;o/=this.zoom,l/=this.zoom,this.cameraO.left=-l,this.cameraO.right=l,this.cameraO.top=o,this.cameraO.bottom=-o,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var r=e,i=t,n=.707*r,o=.707*i,a=[[r,0,0],[i,0,0],[-r,0,0],[-i,0,0],[0,r,0],[0,i,0],[0,-r,0],[0,-i,0],[0,0,r],[0,0,i],[0,0,-r],[0,0,-i],[n,n,0],[o,o,0],[-n,-n,0],[-o,-o,0],[n,-n,0],[o,-o,0],[-n,n,0],[-o,o,0],[n,0,n],[o,0,o],[-n,0,-n],[-o,0,-o],[n,0,-n],[o,0,-o],[-n,0,n],[-o,0,o],[0,n,n],[0,o,o],[0,-n,-n],[0,-o,-o],[0,n,-n],[0,o,-o],[0,-n,n],[0,-o,o]],s=0,l=a.length;l>s;s++){var c=a[s][0],h=a[s][1],u=a[s][2];this.vertices.push(new THREE.Vector3(c,h,u))}},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),e=e||50,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,t=void 0!==t?Math.max(3,t):8;var n,o=[],a=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(a),o.push(s),n=0;t>=n;n++){var l=new THREE.Vector3;l.x=e*Math.cos(r+n/t*i),l.y=e*Math.sin(r+n/t*i),this.vertices.push(l),o.push(new THREE.Vector2((l.x/e+1)/2,-(l.y/e+1)/2+1))}var c=new THREE.Vector3(0,0,-1);for(n=1;t>=n;n++){var h=n,u=n+1,p=0;this.faces.push(new THREE.Face3(h,u,p,[c,c,c])),this.faceVertexUvs[0].push([o[n],o[n+1],s])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,n,o){function a(e,t,r,i,n,o,a,l){var c,h,u,p=s.widthSegments,f=s.heightSegments,d=n/2,m=o/2,E=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?c="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(c="y",f=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(c="x",p=s.depthSegments);var g=p+1,v=f+1,y=n/p,T=o/f,R=new THREE.Vector3;for(R[c]=a>0?1:-1,u=0;v>u;u++)for(h=0;g>h;h++){var x=new THREE.Vector3;x[e]=(h*y-d)*r,x[t]=(u*T-m)*i,x[c]=a,s.vertices.push(x)}for(u=0;f>u;u++)for(h=0;p>h;h++){var b=h+g*u,H=h+g*(u+1),w=h+1+g*(u+1),S=h+1+g*u,_=new THREE.Face4(b+E,H+E,w+E,S+E);_.normal.copy(R),_.vertexNormals.push(R.clone(),R.clone(),R.clone(),R.clone()),_.materialIndex=l,s.faces.push(_),s.faceVertexUvs[0].push([new THREE.Vector2(h/p,1-u/f),new THREE.Vector2(h/p,1-(u+1)/f),new THREE.Vector2((h+1)/p,1-(u+1)/f),new THREE.Vector2((h+1)/p,1-u/f)])}}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=r,this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=o||1;var l=this.width/2,c=this.height/2,h=this.depth/2;a("z","y",-1,-1,this.depth,this.height,l,0),a("z","y",1,-1,this.depth,this.height,-l,1),a("x","z",1,1,this.width,this.depth,c,2),a("x","z",1,-1,this.width,this.depth,-c,3),a("x","y",1,-1,this.width,this.height,h,4),a("x","y",-1,-1,this.width,this.height,-h,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,r,i,n,o){THREE.Geometry.call(this),e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100;
var a,s,l=r/2,c=i||8,h=n||1,u=[],p=[];for(s=0;h>=s;s++){var f=[],d=[],m=s/h,E=m*(t-e)+e;for(a=0;c>=a;a++){var g=a/c,v=new THREE.Vector3;v.x=E*Math.sin(2*g*Math.PI),v.y=-m*r+l,v.z=E*Math.cos(2*g*Math.PI),this.vertices.push(v),f.push(this.vertices.length-1),d.push(new THREE.Vector2(g,1-m))}u.push(f),p.push(d)}var y,T,R=(t-e)/r;for(a=0;c>a;a++)for(0!==e?(y=this.vertices[u[0][a]].clone(),T=this.vertices[u[0][a+1]].clone()):(y=this.vertices[u[1][a]].clone(),T=this.vertices[u[1][a+1]].clone()),y.setY(Math.sqrt(y.x*y.x+y.z*y.z)*R).normalize(),T.setY(Math.sqrt(T.x*T.x+T.z*T.z)*R).normalize(),s=0;h>s;s++){var x=u[s][a],b=u[s+1][a],H=u[s+1][a+1],w=u[s][a+1],S=y.clone(),_=y.clone(),M=T.clone(),C=T.clone(),A=p[s][a].clone(),D=p[s+1][a].clone(),L=p[s+1][a+1].clone(),P=p[s][a+1].clone();this.faces.push(new THREE.Face4(x,b,H,w,[S,_,M,C])),this.faceVertexUvs[0].push([A,D,L,P])}if(!o&&e>0)for(this.vertices.push(new THREE.Vector3(0,l,0)),a=0;c>a;a++){var x=u[0][a],b=u[0][a+1],H=this.vertices.length-1,S=new THREE.Vector3(0,1,0),_=new THREE.Vector3(0,1,0),M=new THREE.Vector3(0,1,0),A=p[0][a].clone(),D=p[0][a+1].clone(),L=new THREE.Vector2(D.u,0);this.faces.push(new THREE.Face3(x,b,H,[S,_,M])),this.faceVertexUvs[0].push([A,D,L])}if(!o&&t>0)for(this.vertices.push(new THREE.Vector3(0,-l,0)),a=0;c>a;a++){var x=u[s][a+1],b=u[s][a],H=this.vertices.length-1,S=new THREE.Vector3(0,-1,0),_=new THREE.Vector3(0,-1,0),M=new THREE.Vector3(0,-1,0),A=p[s][a+1].clone(),D=p[s][a].clone(),L=new THREE.Vector2(D.u,1);this.faces.push(new THREE.Face3(x,b,H,[S,_,M])),this.faceVertexUvs[0].push([A,D,L])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){return void 0===e?(e=[],void 0):(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals(),void 0)},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;r>i;i++){var n=e[i];this.addShape(n,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}function i(e,t,r){return o(e,t,r)}function n(e,t,r){var i=Math.atan2(t.y-e.y,t.x-e.x),n=Math.atan2(r.y-e.y,r.x-e.x);i>n&&(n+=2*Math.PI);var o=(i+n)/2,a=-Math.cos(o),s=-Math.sin(o),l=new THREE.Vector2(a,s);return l}function o(e,t,r){var i,o,a,s,l,c,h=THREE.ExtrudeGeometry.__v1,u=THREE.ExtrudeGeometry.__v2,p=THREE.ExtrudeGeometry.__v3,f=THREE.ExtrudeGeometry.__v4,d=THREE.ExtrudeGeometry.__v5,m=THREE.ExtrudeGeometry.__v6;return h.set(e.x-t.x,e.y-t.y),u.set(e.x-r.x,e.y-r.y),i=h.normalize(),o=u.normalize(),p.set(-i.y,i.x),f.set(o.y,-o.x),d.copy(e).add(p),m.copy(e).add(f),d.equals(m)?f.clone():(d.copy(t).add(p),m.copy(r).add(f),a=i.dot(f),s=m.sub(d).dot(f),0===a&&(console.log("Either infinite or no solutions!"),0===s?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),l=s/a,0>l?n(e,t,r):(c=i.multiplyScalar(l).add(d),c.sub(e).clone()))}function a(){if(g){var e=0,t=q*e;for(K=0;X>K;K++)W=O[K],h(W[2]+t,W[1]+t,W[0]+t,!0);for(e=y+2*E,t=q*e,K=0;X>K;K++)W=O[K],h(W[0]+t,W[1]+t,W[2]+t,!1)}else{for(K=0;X>K;K++)W=O[K],h(W[2],W[1],W[0],!0);for(K=0;X>K;K++)W=O[K],h(W[0]+q*y,W[1]+q*y,W[2]+q*y,!1)}}function s(){var e=0;for(l(I,e),e+=I.length,A=0,D=U.length;D>A;A++)C=U[A],l(C,e),e+=C.length}function l(e,t){var r,i;for(K=e.length;--K>=0;){r=K,i=K-1,0>i&&(i=e.length-1);var n=0,o=y+2*E;for(n=0;o>n;n++){var a=q*n,s=q*(n+1),l=t+r+a,c=t+i+a,h=t+i+s,p=t+r+s;u(l,c,h,p,e,n,o,r,i)}}}function c(e,t,r){L.vertices.push(new THREE.Vector3(e,t,r))}function h(r,i,n,o){r+=P,i+=P,n+=P,L.faces.push(new THREE.Face3(r,i,n,null,null,x));var a=o?H.generateBottomUV(L,e,t,r,i,n):H.generateTopUV(L,e,t,r,i,n);L.faceVertexUvs[0].push(a)}function u(r,i,n,o,a,s,l,c,h){r+=P,i+=P,n+=P,o+=P,L.faces.push(new THREE.Face4(r,i,n,o,null,null,b));var u=H.generateSideWallUV(L,e,a,t,r,i,n,o,s,l,c,h);L.faceVertexUvs[0].push(u)}var p,f=void 0!==t.amount?t.amount:100,d=void 0!==t.bevelThickness?t.bevelThickness:6,m=void 0!==t.bevelSize?t.bevelSize:d-2,E=void 0!==t.bevelSegments?t.bevelSegments:3,g=void 0!==t.bevelEnabled?t.bevelEnabled:!0,v=void 0!==t.curveSegments?t.curveSegments:12,y=void 0!==t.steps?t.steps:1,T=t.extrudePath,R=!1,x=t.material,b=t.extrudeMaterial,H=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;var w,S,_,M;T&&(p=T.getSpacedPoints(y),R=!0,g=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,y,!1),S=new THREE.Vector3,_=new THREE.Vector3,M=new THREE.Vector3),g||(E=0,d=0,m=0);var C,A,D,L=this,P=this.vertices.length,F=e.extractPoints(v),N=F.shape,U=F.holes,B=!THREE.Shape.Utils.isClockWise(N);if(B){for(N=N.reverse(),A=0,D=U.length;D>A;A++)C=U[A],THREE.Shape.Utils.isClockWise(C)&&(U[A]=C.reverse());B=!1}var O=THREE.Shape.Utils.triangulateShape(N,U),I=N;for(A=0,D=U.length;D>A;A++)C=U[A],N=N.concat(C);var z,V,k,j,G,W,q=N.length,X=O.length;I.length,180/Math.PI;for(var Y=[],K=0,J=I.length,$=J-1,Q=K+1;J>K;K++,$++,Q++)$===J&&($=0),Q===J&&(Q=0),I[K],I[$],I[Q],Y[K]=i(I[K],I[$],I[Q]);var Z,et=[],tt=Y.concat();for(A=0,D=U.length;D>A;A++){for(C=U[A],Z=[],K=0,J=C.length,$=J-1,Q=K+1;J>K;K++,$++,Q++)$===J&&($=0),Q===J&&(Q=0),Z[K]=i(C[K],C[$],C[Q]);et.push(Z),tt=tt.concat(Z)}for(z=0;E>z;z++){for(k=z/E,j=d*(1-k),V=m*Math.sin(k*Math.PI/2),K=0,J=I.length;J>K;K++)G=r(I[K],Y[K],V),c(G.x,G.y,-j);for(A=0,D=U.length;D>A;A++)for(C=U[A],Z=et[A],K=0,J=C.length;J>K;K++)G=r(C[K],Z[K],V),c(G.x,G.y,-j)}for(V=m,K=0;q>K;K++)G=g?r(N[K],tt[K],V):N[K],R?(_.copy(w.normals[0]).multiplyScalar(G.x),S.copy(w.binormals[0]).multiplyScalar(G.y),M.copy(p[0]).add(_).add(S),c(M.x,M.y,M.z)):c(G.x,G.y,0);var rt;for(rt=1;y>=rt;rt++)for(K=0;q>K;K++)G=g?r(N[K],tt[K],V):N[K],R?(_.copy(w.normals[rt]).multiplyScalar(G.x),S.copy(w.binormals[rt]).multiplyScalar(G.y),M.copy(p[rt]).add(_).add(S),c(M.x,M.y,M.z)):c(G.x,G.y,f/y*rt);for(z=E-1;z>=0;z--){for(k=z/E,j=d*(1-k),V=m*Math.sin(k*Math.PI/2),K=0,J=I.length;J>K;K++)G=r(I[K],Y[K],V),c(G.x,G.y,f+j);for(A=0,D=U.length;D>A;A++)for(C=U[A],Z=et[A],K=0,J=C.length;J>K;K++)G=r(C[K],Z[K],V),R?c(G.x,G.y+p[y-1].y,p[y-1].x+j):c(G.x,G.y,f+j)}a(),s()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,n,o){var a=e.vertices[i].x,s=e.vertices[i].y,l=e.vertices[n].x,c=e.vertices[n].y,h=e.vertices[o].x,u=e.vertices[o].y;return[new THREE.Vector2(a,s),new THREE.Vector2(l,c),new THREE.Vector2(h,u)]},generateBottomUV:function(e,t,r,i,n,o){return this.generateTopUV(e,t,r,i,n,o)},generateSideWallUV:function(e,t,r,i,n,o,a,s){var l=e.vertices[n].x,c=e.vertices[n].y,h=e.vertices[n].z,u=e.vertices[o].x,p=e.vertices[o].y,f=e.vertices[o].z,d=e.vertices[a].x,m=e.vertices[a].y,E=e.vertices[a].z,g=e.vertices[s].x,v=e.vertices[s].y,y=e.vertices[s].z;return.01>Math.abs(c-p)?[new THREE.Vector2(l,1-h),new THREE.Vector2(u,1-f),new THREE.Vector2(d,1-E),new THREE.Vector2(g,1-y)]:[new THREE.Vector2(c,1-h),new THREE.Vector2(p,1-f),new THREE.Vector2(m,1-E),new THREE.Vector2(v,1-y)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;i>r;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r=void 0!==t.curveSegments?t.curveSegments:12,i=t.material,n=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator;this.shapebb;var o,a,s,l=this.vertices.length,c=e.extractPoints(r),h=c.shape,u=c.holes,p=!THREE.Shape.Utils.isClockWise(h);if(p){for(h=h.reverse(),o=0,a=u.length;a>o;o++)s=u[o],THREE.Shape.Utils.isClockWise(s)&&(u[o]=s.reverse());p=!1}var f=THREE.Shape.Utils.triangulateShape(h,u),d=h;for(o=0,a=u.length;a>o;o++)s=u[o],h=h.concat(s);var m,E,g=h.length,v=f.length;for(d.length,o=0;g>o;o++)m=h[o],this.vertices.push(new THREE.Vector3(m.x,m.y,0));for(o=0;v>o;o++){E=f[o];var y=E[0]+l,T=E[1]+l,R=E[2]+l;this.faces.push(new THREE.Face3(y,T,R,null,null,i)),this.faceVertexUvs[0].push(n.generateBottomUV(this,e,t,y,T,R))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var n=1/(e.length-1),o=1/t,a=0,s=t;s>=a;a++)for(var l=r+a*o*i,c=Math.cos(l),h=Math.sin(l),u=0,p=e.length;p>u;u++){var f=e[u],d=new THREE.Vector3;d.x=c*f.x-h*f.y,d.y=h*f.x+c*f.y,d.z=f.z,this.vertices.push(d)}for(var m=e.length,a=0,s=t;s>a;a++)for(var u=0,p=e.length-1;p>u;u++){var E=u+m*a,g=E,v=E+m,c=E+1+m,y=E+1;this.faces.push(new THREE.Face4(g,v,c,y));var T=a*o,R=u*n,x=T+o,b=R+n;this.faceVertexUvs[0].push([new THREE.Vector2(T,R),new THREE.Vector2(x,R),new THREE.Vector2(x,b),new THREE.Vector2(T,b)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=r||1,this.heightSegments=i||1;var n,o,a=e/2,s=t/2,l=this.widthSegments,c=this.heightSegments,h=l+1,u=c+1,p=this.width/l,f=this.height/c,d=new THREE.Vector3(0,0,1);for(o=0;u>o;o++)for(n=0;h>n;n++){var m=n*p-a,E=o*f-s;this.vertices.push(new THREE.Vector3(m,-E,0))}for(o=0;c>o;o++)for(n=0;l>n;n++){var g=n+h*o,v=n+h*(o+1),y=n+1+h*(o+1),T=n+1+h*o,R=new THREE.Face4(g,v,y,T);R.normal.copy(d),R.vertexNormals.push(d.clone(),d.clone(),d.clone(),d.clone()),this.faces.push(R),this.faceVertexUvs[0].push([new THREE.Vector2(n/l,1-o/c),new THREE.Vector2(n/l,1-(o+1)/c),new THREE.Vector2((n+1)/l,1-(o+1)/c),new THREE.Vector2((n+1)/l,1-o/c)])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,n,o,a){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,o=void 0!==o?o:0,a=void 0!==a?a:Math.PI;var s,l,c=[],h=[];for(l=0;this.heightSegments>=l;l++){var u=[],p=[];for(s=0;this.widthSegments>=s;s++){var f=s/this.widthSegments,d=l/this.heightSegments,m=new THREE.Vector3;m.x=-this.radius*Math.cos(i+f*n)*Math.sin(o+d*a),m.y=this.radius*Math.cos(o+d*a),m.z=this.radius*Math.sin(i+f*n)*Math.sin(o+d*a),this.vertices.push(m),u.push(this.vertices.length-1),p.push(new THREE.Vector2(f,1-d))}c.push(u),h.push(p)}for(l=0;this.heightSegments>l;l++)for(s=0;this.widthSegments>s;s++){var E=c[l][s+1],g=c[l][s],v=c[l+1][s],y=c[l+1][s+1],T=this.vertices[E].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),b=this.vertices[y].clone().normalize(),H=h[l][s+1].clone(),w=h[l][s].clone(),S=h[l+1][s].clone(),_=h[l+1][s+1].clone();Math.abs(this.vertices[E].y)===this.radius?(this.faces.push(new THREE.Face3(E,v,y,[T,x,b])),this.faceVertexUvs[0].push([H,S,_])):Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new THREE.Face3(E,g,v,[T,R,x])),this.faceVertexUvs[0].push([H,w,S])):(this.faces.push(new THREE.Face4(E,g,v,y,[T,R,x,b])),this.faceVertexUvs[0].push([H,w,S,_]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=r||8,this.tubularSegments=i||6,this.arc=n||2*Math.PI;for(var o=new THREE.Vector3,a=[],s=[],l=0;this.radialSegments>=l;l++)for(var c=0;this.tubularSegments>=c;c++){var h=c/this.tubularSegments*this.arc,u=2*l/this.radialSegments*Math.PI;o.x=this.radius*Math.cos(h),o.y=this.radius*Math.sin(h);var p=new THREE.Vector3;p.x=(this.radius+this.tube*Math.cos(u))*Math.cos(h),p.y=(this.radius+this.tube*Math.cos(u))*Math.sin(h),p.z=this.tube*Math.sin(u),this.vertices.push(p),a.push(new THREE.Vector2(c/this.tubularSegments,l/this.radialSegments)),s.push(p.clone().sub(o).normalize())}for(var l=1;this.radialSegments>=l;l++)for(var c=1;this.tubularSegments>=c;c++){var f=(this.tubularSegments+1)*l+c-1,d=(this.tubularSegments+1)*(l-1)+c-1,m=(this.tubularSegments+1)*(l-1)+c,E=(this.tubularSegments+1)*l+c,g=new THREE.Face4(f,d,m,E,[s[f],s[d],s[m],s[E]]);g.normal.add(s[f]),g.normal.add(s[d]),g.normal.add(s[m]),g.normal.add(s[E]),g.normal.normalize(),this.faces.push(g),this.faceVertexUvs[0].push([a[f].clone(),a[d].clone(),a[m].clone(),a[E].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,n,o,a){function s(e,t,r){return c.vertices.push(new THREE.Vector3(e,t,r))-1}function l(e,t,r,i,n,o){var a=Math.cos(e);Math.cos(t);var s=Math.sin(e),l=r/i*e,c=Math.cos(l),h=.5*n*(2+c)*a,u=.5*n*(2+c)*s,p=.5*o*n*Math.sin(l);return new THREE.Vector3(h,u,p)}THREE.Geometry.call(this);var c=this;this.radius=e||100,this.tube=t||40,this.radialSegments=r||64,this.tubularSegments=i||8,this.p=n||2,this.q=o||3,this.heightScale=a||1,this.grid=Array(this.radialSegments);for(var h=new THREE.Vector3,u=new THREE.Vector3,p=new THREE.Vector3,f=0;this.radialSegments>f;++f){this.grid[f]=Array(this.tubularSegments);for(var d=0;this.tubularSegments>d;++d){var m,E,g=2*(f/this.radialSegments)*this.p*Math.PI,v=2*(d/this.tubularSegments)*Math.PI,y=l(g,v,this.q,this.p,this.radius,this.heightScale),T=l(g+.01,v,this.q,this.p,this.radius,this.heightScale);h.subVectors(T,y),u.addVectors(T,y),p.crossVectors(h,u),u.crossVectors(p,h),p.normalize(),u.normalize(),m=-this.tube*Math.cos(v),E=this.tube*Math.sin(v),y.x+=m*u.x+E*p.x,y.y+=m*u.y+E*p.y,y.z+=m*u.z+E*p.z,this.grid[f][d]=s(y.x,y.y,y.z)}}for(var f=0;this.radialSegments>f;++f)for(var d=0;this.tubularSegments>d;++d){var R=(f+1)%this.radialSegments,x=(d+1)%this.tubularSegments,b=this.grid[f][d],H=this.grid[R][d],w=this.grid[R][x],S=this.grid[f][x],_=new THREE.Vector2(f/this.radialSegments,d/this.tubularSegments),M=new THREE.Vector2((f+1)/this.radialSegments,d/this.tubularSegments),C=new THREE.Vector2((f+1)/this.radialSegments,(d+1)/this.tubularSegments),A=new THREE.Vector2(f/this.radialSegments,(d+1)/this.tubularSegments);this.faces.push(new THREE.Face4(b,H,w,S)),this.faceVertexUvs[0].push([_,M,C,A])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,n,o){function a(e,t,r){return _.vertices.push(new THREE.Vector3(e,t,r))-1}THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=r||1,this.radiusSegments=i||8,this.closed=n||!1,o&&(this.debug=new THREE.Object3D),this.grid=[];var s,l,c,h,u,p,f,d,m,E,g,v,y,T,R,x,b,H,w,S,_=this,M=this.segments+1,C=new THREE.Vector3,A=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),D=A.tangents,L=A.normals,P=A.binormals;for(this.tangents=D,this.normals=L,this.binormals=P,m=0;M>m;m++)for(this.grid[m]=[],h=m/(M-1),d=e.getPointAt(h),s=D[m],l=L[m],c=P[m],this.debug&&(this.debug.add(new THREE.ArrowHelper(s,d,r,255)),this.debug.add(new THREE.ArrowHelper(l,d,r,16711680)),this.debug.add(new THREE.ArrowHelper(c,d,r,65280))),E=0;this.radiusSegments>E;E++)u=2*(E/this.radiusSegments)*Math.PI,p=-this.radius*Math.cos(u),f=this.radius*Math.sin(u),C.copy(d),C.x+=p*l.x+f*c.x,C.y+=p*l.y+f*c.y,C.z+=p*l.z+f*c.z,this.grid[m][E]=a(C.x,C.y,C.z);for(m=0;this.segments>m;m++)for(E=0;this.radiusSegments>E;E++)g=this.closed?(m+1)%this.segments:m+1,v=(E+1)%this.radiusSegments,y=this.grid[m][E],T=this.grid[g][E],R=this.grid[g][v],x=this.grid[m][v],b=new THREE.Vector2(m/this.segments,E/this.radiusSegments),H=new THREE.Vector2((m+1)/this.segments,E/this.radiusSegments),w=new THREE.Vector2((m+1)/this.segments,(E+1)/this.radiusSegments),S=new THREE.Vector2(m/this.segments,(E+1)/this.radiusSegments),this.faces.push(new THREE.Face4(y,T,R,x)),this.faceVertexUvs[0].push([b,H,w,S]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){function i(){f[0]=new THREE.Vector3,d[0]=new THREE.Vector3,o=Number.MAX_VALUE,a=Math.abs(p[0].x),s=Math.abs(p[0].y),l=Math.abs(p[0].z),o>=a&&(o=a,u.set(1,0,0)),o>=s&&(o=s,u.set(0,1,0)),o>=l&&u.set(0,0,1),m.crossVectors(p[0],u).normalize(),f[0].crossVectors(p[0],m),d[0].crossVectors(p[0],f[0])}var n,o,a,s,l,c,h,u=(new THREE.Vector3,new THREE.Vector3),p=(new THREE.Vector3,[]),f=[],d=[],m=new THREE.Vector3,E=new THREE.Matrix4,g=t+1,v=1e-4;for(this.tangents=p,this.normals=f,this.binormals=d,c=0;g>c;c++)h=c/(g-1),p[c]=e.getTangentAt(h),p[c].normalize();for(i(),c=1;g>c;c++)f[c]=f[c-1].clone(),d[c]=d[c-1].clone(),m.crossVectors(p[c-1],p[c]),m.length()>v&&(m.normalize(),n=Math.acos(p[c-1].dot(p[c])),f[c].applyMatrix4(E.makeRotationAxis(m,n))),d[c].crossVectors(p[c],f[c]);if(r)for(n=Math.acos(f[0].dot(f[g-1])),n/=g-1,p[0].dot(m.crossVectors(f[0],f[g-1]))>0&&(n=-n),c=1;g>c;c++)f[c].applyMatrix4(E.makeRotationAxis(p[c],n*c)),d[c].crossVectors(p[c],f[c])},THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=h.vertices.push(t)-1;var r=s(e)/2/Math.PI+.5,i=l(e)/Math.PI+.5;return t.uv=new THREE.Vector2(r,1-i),t}function o(e,t,r,i){if(1>i){var n=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);n.centroid.add(e).add(t).add(r).divideScalar(3),n.normal=n.centroid.clone().normalize(),h.faces.push(n);var l=s(n.centroid);h.faceVertexUvs[0].push([c(e.uv,e,l),c(t.uv,t,l),c(r.uv,r,l)])}else i-=1,o(e,a(e,t),a(e,r),i),o(a(e,t),t,a(t,r),i),o(a(e,r),a(t,r),r,i),o(a(e,t),a(t,r),a(e,r),i)}function a(e,t){f[e.index]||(f[e.index]=[]),f[t.index]||(f[t.index]=[]);var r=f[e.index][t.index];return void 0===r&&(f[e.index][t.index]=f[t.index][e.index]=r=n((new THREE.Vector3).addVectors(e,t).divideScalar(2))),r}function s(e){return Math.atan2(e.z,-e.x)}function l(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function c(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this),r=r||1,i=i||0;for(var h=this,u=0,p=e.length;p>u;u++)n(new THREE.Vector3(e[u][0],e[u][1],e[u][2]));for(var f=[],d=this.vertices,u=0,p=t.length;p>u;u++)o(d[t[u][0]],d[t[u][1]],d[t[u][2]],i);this.mergeVertices();for(var u=0,p=this.vertices.length;p>u;u++)this.vertices[u].multiplyScalar(r);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2,i=[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]],n=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,i,n,e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){var r=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],i=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){var r=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],i=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r,i){THREE.Geometry.call(this);var n=this.vertices,o=this.faces,a=this.faceVertexUvs[0];i=void 0===i?!1:i;var s,l,c,h,u,p=t+1;for(s=0;r>=s;s++)for(u=s/r,l=0;t>=l;l++)h=l/t,c=e(h,u),n.push(c);var f,d,m,E,g,v,y,T;for(s=0;r>s;s++)for(l=0;t>l;l++)f=s*p+l,d=s*p+l+1,m=(s+1)*p+l,E=(s+1)*p+l+1,g=new THREE.Vector2(l/t,s/r),v=new THREE.Vector2((l+1)/t,s/r),y=new THREE.Vector2(l/t,(s+1)/r),T=new THREE.Vector2((l+1)/t,(s+1)/r),i?(o.push(new THREE.Face3(f,d,m)),o.push(new THREE.Face3(d,E,m)),a.push([g,v,y]),a.push([v,T,y])):(o.push(new THREE.Face4(f,d,E,m)),a.push([g,v,T,y]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(t){var i=e[t].clone(),a=i.length();i.x+=a*o(),i.y+=a*o(),i.z+=a*o();for(var l=[],c=0;s.length>c;){var h=s[c];if(r(h,i)){for(var u=0;3>u;u++){for(var p=[h[u],h[(u+1)%3]],f=!0,d=0;l.length>d;d++)if(n(l[d],p)){l[d]=l[l.length-1],l.pop(),f=!1;break}f&&l.push(p)}s[c]=s[s.length-1],s.pop()}else c++}for(var d=0;l.length>d;d++)s.push([l[d][0],l[d][1],t])}function r(t,r){var n=e[t[0]],o=e[t[1]],a=e[t[2]],s=i(n,o,a),l=s.dot(n);return s.dot(r)>=l}function i(e,t,r){var i=new THREE.Vector3,n=new THREE.Vector3;return i.subVectors(r,t),n.subVectors(e,t),i.cross(n),i.normalize(),i}function n(e,t){return e[0]===t[1]&&e[1]===t[0]}function o(){return 2e-6*(Math.random()-.5)}function a(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var s=[[0,1,2],[0,2,1]],l=3;e.length>l;l++)t(l);for(var c=0,h=Array(e.length),l=0;s.length>l;l++)for(var u=s[l],p=0;3>p;p++)void 0===h[u[p]]&&(h[u[p]]=c++,this.vertices.push(e[u[p]])),u[p]=h[u[p]];for(var l=0;s.length>l;l++)this.faces.push(new THREE.Face3(s[l][0],s[l][1],s[l][2]));for(var l=0;this.faces.length>l;l++){var u=this.faces[l];this.faceVertexUvs[0].push([a(this.vertices[u.a]),a(this.vertices[u.b]),a(this.vertices[u.c])])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,r,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i){THREE.Object3D.call(this),void 0===r&&(r=20),void 0===i&&(i=16776960);var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0)),n.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(n,new THREE.LineBasicMaterial({color:i})),this.add(this.line);var o=new THREE.CylinderGeometry(0,.05,.25,5,1);this.cone=new THREE.Mesh(o,new THREE.MeshBasicMaterial({color:i})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(r)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=THREE.ArrowHelper.__v1.copy(e).normalize();if(t.y>.999)this.rotation.set(0,0,0);else if(-.999>t.y)this.rotation.set(Math.PI,0,0);else{var r=THREE.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),i=Math.acos(t.y),n=THREE.ArrowHelper.__q1.setFromAxisAngle(r,i);this.rotation.setEulerFromQuaternion(n,this.eulerOrder)}},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.ArrowHelper.__v1=new THREE.Vector3,THREE.ArrowHelper.__v2=new THREE.Vector3,THREE.ArrowHelper.__q1=new THREE.Quaternion,THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.geometry.vertices.push(new THREE.Vector3),i.geometry.colors.push(new THREE.Color(t)),void 0===i.pointMap[e]&&(i.pointMap[e]=[]),i.pointMap[e].push(i.geometry.vertices.length-1)}THREE.Line.call(this);var i=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={};var n=16755200,o=16711680,a=43775,s=16777215,l=3355443;t("n1","n2",n),t("n2","n4",n),t("n4","n3",n),t("n3","n1",n),t("f1","f2",n),t("f2","f4",n),t("f4","f3",n),t("f3","f1",n),t("n1","f1",n),t("n2","f2",n),t("n3","f3",n),t("n4","f4",n),t("p","n1",o),t("p","n2",o),t("p","n3",o),t("p","n4",o),t("u1","u2",a),t("u2","u3",a),t("u3","u1",a),t("c","t",s),t("p","c",l),t("cn1","cn2",l),t("cn3","cn4",l),t("cf1","cf2",l),t("cf3","cf4",l),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,r,i,n){THREE.CameraHelper.__v.set(r,i,n),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);var o=t.pointMap[e];if(void 0!==o)for(var a=0,s=o.length;s>a;a++)t.geometry.vertices[o[a]].copy(THREE.CameraHelper.__v)}var t=this,r=1,i=1;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-r,-i,-1),e("n2",r,-i,-1),e("n3",-r,i,-1),e("n4",r,i,-1),e("f1",-r,-i,1),e("f2",r,-i,1),e("f3",-r,i,1),e("f4",r,i,1),e("u1",.7*r,1.1*i,-1),e("u2",.7*-r,1.1*i,-1),e("u3",0,2*i,-1),e("cf1",-r,0,1),e("cf2",r,0,1),e("cf3",0,-i,1),e("cf4",0,i,1),e("cn1",-r,0,-1),e("cn2",r,0,-1),e("cn3",0,-i,-1),e("cn4",0,i,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),o=new THREE.AsteriskGeometry(1.25*t,2.25*t),a=new THREE.MeshBasicMaterial({color:i,fog:!1}),s=new THREE.LineBasicMaterial({color:i,fog:!1});if(this.lightSphere=new THREE.Mesh(n,a),this.lightRays=new THREE.Line(o,s,THREE.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse){var l=new THREE.SphereGeometry(t,8,4),c=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1});this.targetSphere=new THREE.Mesh(l,c),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var h=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),u=new THREE.Geometry;u.vertices.push(this.position.clone()),u.vertices.push(this.targetSphere.position.clone()),u.computeLineDistances(),this.targetLine=new THREE.Line(u,h),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.HemisphereLightHelper=function(e,t,r){THREE.Object3D.call(this),this.light=e,this.position=e.position;var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var n=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(i);for(var o=this.groundColor.getHex(),a=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),s=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),l=new THREE.MeshBasicMaterial({color:n,fog:!1}),c=new THREE.MeshBasicMaterial({color:o,fog:!1}),h=0,u=a.faces.length;u>h;h++)a.faces[h].materialIndex=0;for(var h=0,u=s.faces.length;u>h;h++)s.faces[h].materialIndex=1;THREE.GeometryUtils.merge(a,s),this.lightSphere=new THREE.Mesh(a,new THREE.MeshFaceMaterial([l,c])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+r),0),r,n),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+r),0),r,o);var p=new THREE.Object3D;p.rotation.x=.5*-Math.PI,p.add(this.lightSphere),p.add(this.lightArrow),p.add(this.lightArrowGround),this.add(p),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),o=new THREE.AsteriskGeometry(1.25*t,2.25*t),a=new THREE.IcosahedronGeometry(1,2),s=new THREE.MeshBasicMaterial({color:i,fog:!1}),l=new THREE.LineBasicMaterial({color:i,fog:!1}),c=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(n,s),this.lightRays=new THREE.Line(o,l,THREE.LinePieces),this.lightDistance=new THREE.Mesh(a,c);var h=e.distance;0===h?this.lightDistance.visible=!1:this.lightDistance.scale.set(h,h,h),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color);
var t=this.light.distance;0===t?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(t,t,t))},THREE.SpotLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),o=new THREE.AsteriskGeometry(1.25*t,2.25*t),a=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),s=new THREE.Matrix4;s.rotateX(-Math.PI/2),s.translate(new THREE.Vector3(0,-.5,0)),a.applyMatrix(s);var l=new THREE.MeshBasicMaterial({color:i,fog:!1}),c=new THREE.LineBasicMaterial({color:i,fog:!1}),h=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new THREE.Mesh(n,l),this.lightCone=new THREE.Mesh(a,h);var u=e.distance?e.distance:1e4,p=2*u*Math.tan(.5*e.angle);if(this.lightCone.scale.set(p,p,u),this.lightRays=new THREE.Line(o,c,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse){var f=new THREE.SphereGeometry(t,8,4),d=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1});this.targetSphere=new THREE.Mesh(f,d),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var m=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),E=new THREE.Geometry;E.vertices.push(this.position.clone()),E.vertices.push(this.targetSphere.position.clone()),E.computeLineDistances(),this.targetLine=new THREE.Line(E,m),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e);var r=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(r),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,n,o){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===o&&(o=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:o,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;r>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=.25*t.x*Math.PI,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default",n=0,o=r-1,a=r/1;this.createAnimation(i,n,o,a),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var n={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)(\d+)/,i={},n=this.geometry,o=0,a=n.morphTargets.length;a>o;o++){var s=n.morphTargets[o],l=s.name.match(r);if(l&&l.length>1){var c=l[1];l[2],i[c]||(i[c]={start:1/0,end:-1/0});var h=i[c];h.start>o&&(h.start=o),o>h.end&&(h.end=o),t||(t=c)}}for(var c in i){var h=i[c];this.createAnimation(c,h.start,h.end,e)}this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;r>t;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||0>i.time)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),0>i.time&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,0>i.time&&(i.time+=i.duration));var o=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),a=i.weight;o!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*a,this.morphTargetInfluences[o]=0,i.lastFrame=i.currentFrame,i.currentFrame=o);var s=i.time%n/n;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*a,this.morphTargetInfluences[i.lastFrame]=(1-s)*a}}},THREE.LensFlarePlugin=function(){function e(e,r){var i=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),o=t.createShader(t.VERTEX_SHADER),a="precision "+r+" float;\n";return t.shaderSource(n,a+e.fragmentShader),t.shaderSource(o,a+e.vertexShader),t.compileShader(n),t.compileShader(o),t.attachShader(i,n),t.attachShader(i,o),t.linkProgram(i),i}var t,r,i,n={};this.init=function(o){t=o.context,r=o,i=o.getPrecision(),n.vertices=new Float32Array(16),n.faces=new Uint16Array(6);var a=0;n.vertices[a++]=-1,n.vertices[a++]=-1,n.vertices[a++]=0,n.vertices[a++]=0,n.vertices[a++]=1,n.vertices[a++]=-1,n.vertices[a++]=1,n.vertices[a++]=0,n.vertices[a++]=1,n.vertices[a++]=1,n.vertices[a++]=1,n.vertices[a++]=1,n.vertices[a++]=-1,n.vertices[a++]=1,n.vertices[a++]=0,n.vertices[a++]=1,a=0,n.faces[a++]=0,n.faces[a++]=1,n.faces[a++]=2,n.faces[a++]=0,n.faces[a++]=2,n.faces[a++]=3,n.vertexBuffer=t.createBuffer(),n.elementBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,n.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,n.vertices,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.elementBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,n.faces,t.STATIC_DRAW),n.tempTexture=t.createTexture(),n.occlusionTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,n.tempTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,n.occlusionTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(n.hasVertexTexture=!1,n.program=e(THREE.ShaderFlares.lensFlare,i)):(n.hasVertexTexture=!0,n.program=e(THREE.ShaderFlares.lensFlareVertexTexture,i)),n.attributes={},n.uniforms={},n.attributes.vertex=t.getAttribLocation(n.program,"position"),n.attributes.uv=t.getAttribLocation(n.program,"uv"),n.uniforms.renderType=t.getUniformLocation(n.program,"renderType"),n.uniforms.map=t.getUniformLocation(n.program,"map"),n.uniforms.occlusionMap=t.getUniformLocation(n.program,"occlusionMap"),n.uniforms.opacity=t.getUniformLocation(n.program,"opacity"),n.uniforms.color=t.getUniformLocation(n.program,"color"),n.uniforms.scale=t.getUniformLocation(n.program,"scale"),n.uniforms.rotation=t.getUniformLocation(n.program,"rotation"),n.uniforms.screenPosition=t.getUniformLocation(n.program,"screenPosition")},this.render=function(e,i,o,a){var s=e.__webglFlares,l=s.length;if(l){var c=new THREE.Vector3,h=a/o,u=.5*o,p=.5*a,f=16/a,d=new THREE.Vector2(f*h,f),m=new THREE.Vector3(1,1,0),E=new THREE.Vector2(1,1),g=n.uniforms,v=n.attributes;t.useProgram(n.program),t.enableVertexAttribArray(n.attributes.vertex),t.enableVertexAttribArray(n.attributes.uv),t.uniform1i(g.occlusionMap,0),t.uniform1i(g.map,1),t.bindBuffer(t.ARRAY_BUFFER,n.vertexBuffer),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.elementBuffer),t.disable(t.CULL_FACE),t.depthMask(!1);var y,T,R,x,b;for(y=0;l>y;y++)if(f=16/a,d.set(f*h,f),x=s[y],c.set(x.matrixWorld.elements[12],x.matrixWorld.elements[13],x.matrixWorld.elements[14]),c.applyMatrix4(i.matrixWorldInverse),c.applyProjection(i.projectionMatrix),m.copy(c),E.x=m.x*u+u,E.y=m.y*p+p,n.hasVertexTexture||E.x>0&&o>E.x&&E.y>0&&a>E.y)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,n.tempTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,E.x-8,E.y-8,16,16,0),t.uniform1i(g.renderType,0),t.uniform2f(g.scale,d.x,d.y),t.uniform3f(g.screenPosition,m.x,m.y,m.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,n.occlusionTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,E.x-8,E.y-8,16,16,0),t.uniform1i(g.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,n.tempTexture),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),x.positionScreen.copy(m),x.customUpdateCallback?x.customUpdateCallback(x):x.updateLensFlares(),t.uniform1i(g.renderType,2),t.enable(t.BLEND),T=0,R=x.lensFlares.length;R>T;T++)b=x.lensFlares[T],b.opacity>.001&&b.scale>.001&&(m.x=b.x,m.y=b.y,m.z=b.z,f=b.size*b.scale/a,d.x=f*h,d.y=f,t.uniform3f(g.screenPosition,m.x,m.y,m.z),t.uniform2f(g.scale,d.x,d.y),t.uniform1f(g.rotation,b.rotation),t.uniform1f(g.opacity,b.opacity),t.uniform3f(g.color,b.color.r,b.color.g,b.color.b),r.setBlending(b.blending,b.blendEquation,b.blendSrc,b.blendDst),r.setTexture(b.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function e(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,n=r.pointsFrustum,o=0;8>o;o++)i[o]=new THREE.Vector3,n[o]=new THREE.Vector3;var a=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return n[0].set(-1,-1,a),n[1].set(1,-1,a),n[2].set(-1,1,a),n[3].set(1,1,a),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),r}function t(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],n=e.shadowCascadeFarZ[t],o=r.pointsFrustum;o[0].z=i,o[1].z=i,o[2].z=i,o[3].z=i,o[4].z=n,o[5].z=n,o[6].z=n,o[7].z=n}function r(e,t){var r=t.shadowCamera,i=t.pointsFrustum,n=t.pointsWorld;p.set(1/0,1/0,1/0),f.set(-1/0,-1/0,-1/0);for(var o=0;8>o;o++){var a=n[o];a.copy(i[o]),THREE.ShadowMapPlugin.__projector.unprojectVector(a,e),a.applyMatrix4(r.matrixWorldInverse),a.x<p.x&&(p.x=a.x),a.x>f.x&&(f.x=a.x),a.y<p.y&&(p.y=a.y),a.y>f.y&&(f.y=a.y),a.z<p.z&&(p.z=a.z),a.z>f.z&&(f.z=a.z)}r.left=p.x,r.right=f.x,r.top=f.y,r.bottom=p.y,r.updateProjectionMatrix()}function i(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}var n,o,a,s,l,c,h=new THREE.Frustum,u=new THREE.Matrix4,p=new THREE.Vector3,f=new THREE.Vector3;this.init=function(e){n=e.context,o=e;var t=THREE.ShaderLib.depthRGBA,r=THREE.UniformsUtils.clone(t.uniforms);a=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r}),s=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0}),l=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,skinning:!0}),c=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0,skinning:!0}),a._shadowPass=!0,s._shadowPass=!0,l._shadowPass=!0,c._shadowPass=!0},this.render=function(e,t){o.shadowMapEnabled&&o.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(p,f){var d,m,E,g,v,y,T,R,x,b,H,w,S,_,M=[],C=0,A=null;for(n.clearColor(1,1,1,1),n.disable(n.BLEND),n.enable(n.CULL_FACE),n.frontFace(n.CCW),o.shadowMapCullFace===THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.BACK),o.setDepthTest(!0),d=0,m=p.__lights.length;m>d;d++)if(S=p.__lights[d],S.castShadow)if(S instanceof THREE.DirectionalLight&&S.shadowCascade)for(v=0;S.shadowCascadeCount>v;v++){var D;if(S.shadowCascadeArray[v])D=S.shadowCascadeArray[v];else{D=e(S,v),D.originalCamera=f;var L=new THREE.Gyroscope;L.position=S.shadowCascadeOffset,L.add(D),L.add(D.target),f.add(L),S.shadowCascadeArray[v]=D,console.log("Created virtualLight",D)}t(S,v),M[C]=D,C++}else M[C]=S,C++;for(d=0,m=M.length;m>d;d++){if(S=M[d],!S.shadowMap){var P=THREE.LinearFilter;o.shadowMapType===THREE.PCFSoftShadowMap&&(P=THREE.NearestFilter);var F={minFilter:P,magFilter:P,format:THREE.RGBAFormat};S.shadowMap=new THREE.WebGLRenderTarget(S.shadowMapWidth,S.shadowMapHeight,F),S.shadowMapSize=new THREE.Vector2(S.shadowMapWidth,S.shadowMapHeight),S.shadowMatrix=new THREE.Matrix4}if(!S.shadowCamera){if(S instanceof THREE.SpotLight)S.shadowCamera=new THREE.PerspectiveCamera(S.shadowCameraFov,S.shadowMapWidth/S.shadowMapHeight,S.shadowCameraNear,S.shadowCameraFar);else{if(!(S instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}S.shadowCamera=new THREE.OrthographicCamera(S.shadowCameraLeft,S.shadowCameraRight,S.shadowCameraTop,S.shadowCameraBottom,S.shadowCameraNear,S.shadowCameraFar)}p.add(S.shadowCamera),o.autoUpdateScene&&p.updateMatrixWorld()}for(S.shadowCameraVisible&&!S.cameraHelper&&(S.cameraHelper=new THREE.CameraHelper(S.shadowCamera),S.shadowCamera.add(S.cameraHelper)),S.isVirtual&&D.originalCamera==f&&r(f,S),y=S.shadowMap,T=S.shadowMatrix,R=S.shadowCamera,R.position.copy(S.matrixWorld.getPosition()),R.lookAt(S.target.matrixWorld.getPosition()),R.updateMatrixWorld(),R.matrixWorldInverse.getInverse(R.matrixWorld),S.cameraHelper&&(S.cameraHelper.visible=S.shadowCameraVisible),S.shadowCameraVisible&&S.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(R.projectionMatrix),T.multiply(R.matrixWorldInverse),u.multiplyMatrices(R.projectionMatrix,R.matrixWorldInverse),h.setFromMatrix(u),o.setRenderTarget(y),o.clear(),_=p.__webglObjects,E=0,g=_.length;g>E;E++)H=_[E],w=H.object,H.render=!1,w.visible&&w.castShadow&&((w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)&&w.frustumCulled&&!h.intersectsObject(w)||(w._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld),H.render=!0));var N,U,B;for(E=0,g=_.length;g>E;E++)H=_[E],H.render&&(w=H.object,x=H.buffer,N=i(w),U=w.geometry.morphTargets.length>0&&N.morphTargets,B=w instanceof THREE.SkinnedMesh&&N.skinning,b=w.customDepthMaterial?w.customDepthMaterial:B?U?c:l:U?s:a,x instanceof THREE.BufferGeometry?o.renderBufferDirect(R,p.__lights,A,b,x,w):o.renderBuffer(R,p.__lights,A,b,x,w));for(_=p.__webglObjectsImmediate,E=0,g=_.length;g>E;E++)H=_[E],w=H.object,w.visible&&w.castShadow&&(w._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld),o.renderImmediateObject(R,p.__lights,A,a,w))}var O=o.getClearColor(),I=o.getClearAlpha();n.clearColor(O.r,O.g,O.b,I),n.enable(n.BLEND),o.shadowMapCullFace===THREE.CullFaceFront&&n.cullFace(n.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){var i=r.createProgram(),n=r.createShader(r.FRAGMENT_SHADER),o=r.createShader(r.VERTEX_SHADER),a="precision "+t+" float;\n";return r.shaderSource(n,a+e.fragmentShader),r.shaderSource(o,a+e.vertexShader),r.compileShader(n),r.compileShader(o),r.attachShader(i,n),r.attachShader(i,o),r.linkProgram(i),i}function t(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var r,i,n,o={};this.init=function(t){r=t.context,i=t,n=t.getPrecision(),o.vertices=new Float32Array(16),o.faces=new Uint16Array(6);var a=0;o.vertices[a++]=-1,o.vertices[a++]=-1,o.vertices[a++]=0,o.vertices[a++]=0,o.vertices[a++]=1,o.vertices[a++]=-1,o.vertices[a++]=1,o.vertices[a++]=0,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=1,o.vertices[a++]=-1,o.vertices[a++]=1,o.vertices[a++]=0,o.vertices[a++]=1,a=0,o.faces[a++]=0,o.faces[a++]=1,o.faces[a++]=2,o.faces[a++]=0,o.faces[a++]=2,o.faces[a++]=3,o.vertexBuffer=r.createBuffer(),o.elementBuffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,o.vertexBuffer),r.bufferData(r.ARRAY_BUFFER,o.vertices,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,o.elementBuffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,o.faces,r.STATIC_DRAW),o.program=e(THREE.ShaderSprite.sprite,n),o.attributes={},o.uniforms={},o.attributes.position=r.getAttribLocation(o.program,"position"),o.attributes.uv=r.getAttribLocation(o.program,"uv"),o.uniforms.uvOffset=r.getUniformLocation(o.program,"uvOffset"),o.uniforms.uvScale=r.getUniformLocation(o.program,"uvScale"),o.uniforms.rotation=r.getUniformLocation(o.program,"rotation"),o.uniforms.scale=r.getUniformLocation(o.program,"scale"),o.uniforms.alignment=r.getUniformLocation(o.program,"alignment"),o.uniforms.color=r.getUniformLocation(o.program,"color"),o.uniforms.map=r.getUniformLocation(o.program,"map"),o.uniforms.opacity=r.getUniformLocation(o.program,"opacity"),o.uniforms.useScreenCoordinates=r.getUniformLocation(o.program,"useScreenCoordinates"),o.uniforms.sizeAttenuation=r.getUniformLocation(o.program,"sizeAttenuation"),o.uniforms.screenPosition=r.getUniformLocation(o.program,"screenPosition"),o.uniforms.modelViewMatrix=r.getUniformLocation(o.program,"modelViewMatrix"),o.uniforms.projectionMatrix=r.getUniformLocation(o.program,"projectionMatrix"),o.uniforms.fogType=r.getUniformLocation(o.program,"fogType"),o.uniforms.fogDensity=r.getUniformLocation(o.program,"fogDensity"),o.uniforms.fogNear=r.getUniformLocation(o.program,"fogNear"),o.uniforms.fogFar=r.getUniformLocation(o.program,"fogFar"),o.uniforms.fogColor=r.getUniformLocation(o.program,"fogColor"),o.uniforms.alphaTest=r.getUniformLocation(o.program,"alphaTest")},this.render=function(e,n,a,s){var l=e.__webglSprites,c=l.length;if(c){var h=o.attributes,u=o.uniforms,p=s/a,f=.5*a,d=.5*s;r.useProgram(o.program),r.enableVertexAttribArray(h.position),r.enableVertexAttribArray(h.uv),r.disable(r.CULL_FACE),r.enable(r.BLEND),r.bindBuffer(r.ARRAY_BUFFER,o.vertexBuffer),r.vertexAttribPointer(h.position,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(h.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,o.elementBuffer),r.uniformMatrix4fv(u.projectionMatrix,!1,n.projectionMatrix.elements),r.activeTexture(r.TEXTURE0),r.uniform1i(u.map,0);var m=0,E=0,g=e.fog;g?(r.uniform3f(u.fogColor,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(r.uniform1f(u.fogNear,g.near),r.uniform1f(u.fogFar,g.far),r.uniform1i(u.fogType,1),m=1,E=1):g instanceof THREE.FogExp2&&(r.uniform1f(u.fogDensity,g.density),r.uniform1i(u.fogType,2),m=2,E=2)):(r.uniform1i(u.fogType,0),m=0,E=0);var v,y,T,R,x,b=[];for(v=0;c>v;v++)y=l[v],T=y.material,y.visible&&0!==T.opacity&&(T.useScreenCoordinates?y.z=-y.position.z:(y._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]));for(l.sort(t),v=0;c>v;v++)y=l[v],T=y.material,y.visible&&0!==T.opacity&&T.map&&T.map.image&&T.map.image.width&&(r.uniform1f(u.alphaTest,T.alphaTest),T.useScreenCoordinates===!0?(r.uniform1i(u.useScreenCoordinates,1),r.uniform3f(u.screenPosition,(y.position.x*i.devicePixelRatio-f)/f,(d-y.position.y*i.devicePixelRatio)/d,Math.max(0,Math.min(1,y.position.z))),b[0]=i.devicePixelRatio,b[1]=i.devicePixelRatio):(r.uniform1i(u.useScreenCoordinates,0),r.uniform1i(u.sizeAttenuation,T.sizeAttenuation?1:0),r.uniformMatrix4fv(u.modelViewMatrix,!1,y._modelViewMatrix.elements),b[0]=1,b[1]=1),x=e.fog&&T.fog?E:0,m!==x&&(r.uniform1i(u.fogType,x),m=x),R=1/(T.scaleByViewport?s:1),b[0]*=R*p*y.scale.x,b[1]*=R*y.scale.y,r.uniform2f(u.uvScale,T.uvScale.x,T.uvScale.y),r.uniform2f(u.uvOffset,T.uvOffset.x,T.uvOffset.y),r.uniform2f(u.alignment,T.alignment.x,T.alignment.y),r.uniform1f(u.opacity,T.opacity),r.uniform3f(u.color,T.color.r,T.color.g,T.color.b),r.uniform1f(u.rotation,y.rotation),r.uniform2fv(u.scale,b),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),i.setDepthTest(T.depthTest),i.setDepthWrite(T.depthWrite),i.setTexture(T.map,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0));r.enable(r.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function e(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.enabled=!1,this.renderTarget=null;var t,r,i,n,o,a,s=new THREE.Frustum,l=new THREE.Matrix4;this.init=function(e){t=e.context,r=e;var s=THREE.ShaderLib.depthRGBA,l=THREE.UniformsUtils.clone(s.uniforms);i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l}),n=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,skinning:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0,skinning:!0}),i._shadowPass=!0,n._shadowPass=!0,o._shadowPass=!0,a._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(c,h){var u,p,f,d,m,E,g,v=null;for(t.clearColor(1,1,1,1),t.disable(t.BLEND),r.setDepthTest(!0),r.autoUpdateScene&&c.updateMatrixWorld(),h.matrixWorldInverse.getInverse(h.matrixWorld),l.multiplyMatrices(h.projectionMatrix,h.matrixWorldInverse),s.setFromMatrix(l),r.setRenderTarget(this.renderTarget),r.clear(),g=c.__webglObjects,u=0,p=g.length;p>u;u++)m=g[u],E=m.object,m.render=!1,E.visible&&((E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)&&E.frustumCulled&&!s.intersectsObject(E)||(E._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,E.matrixWorld),m.render=!0));var y,T,R;for(u=0,p=g.length;p>u;u++)if(m=g[u],m.render){if(E=m.object,f=m.buffer,E instanceof THREE.ParticleSystem&&!E.customDepthMaterial)continue;y=e(E),y&&r.setMaterialFaces(E.material),T=E.geometry.morphTargets.length>0&&y.morphTargets,R=E instanceof THREE.SkinnedMesh&&y.skinning,d=E.customDepthMaterial?E.customDepthMaterial:R?T?a:o:T?n:i,f instanceof THREE.BufferGeometry?r.renderBufferDirect(h,c.__lights,v,d,f,E):r.renderBuffer(h,c.__lights,v,d,f,E)}for(g=c.__webglObjectsImmediate,u=0,p=g.length;p>u;u++)m=g[u],E=m.object,E.visible&&(E._modelViewMatrix.multiplyMatrices(h.matrixWorldInverse,E.matrixWorld),r.renderImmediateObject(h,c.__lights,v,i,E));var x=r.getClearColor(),b=r.getClearAlpha();t.clearColor(x.r,x.g,x.b,b),t.enable(t.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};