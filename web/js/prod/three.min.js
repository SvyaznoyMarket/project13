var THREE=THREE||{REVISION:"55"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}},self.Int32Array=self.Int32Array||Array,self.Float32Array=self.Float32Array||Array,String.prototype.startsWith=String.prototype.startsWith||function(e){return this.slice(0,e.length)===e},String.prototype.endsWith=String.prototype.endsWith||function(e){var t=e+"",r=this.lastIndexOf(t);return(r>-1&&r)===this.length-t.length},String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")},function(){for(var e=0,t=["ms","moz","webkit","o"],r=0;t.length>r&&!window.requestAnimationFrame;++r)window.requestAnimationFrame=window[t[r]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[t[r]+"CancelAnimationFrame"]||window[t[r]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(t){var r=Date.now(),i=Math.max(0,16-(r-e)),n=window.setTimeout(function(){t(r+i)},i);return e=r+i,n}),window.cancelAnimationFrame=window.cancelAnimationFrame||function(e){window.clearTimeout(e)}}(),THREE.CullFaceNone=0,THREE.CullFaceBack=1,THREE.CullFaceFront=2,THREE.CullFaceFrontBack=3,THREE.FrontFaceDirectionCW=0,THREE.FrontFaceDirectionCCW=1,THREE.BasicShadowMap=0,THREE.PCFShadowMap=1,THREE.PCFSoftShadowMap=2,THREE.FrontSide=0,THREE.BackSide=1,THREE.DoubleSide=2,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.CustomBlending=5,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.AddOperation=2,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=1e3,THREE.ClampToEdgeWrapping=1001,THREE.MirroredRepeatWrapping=1002,THREE.NearestFilter=1003,THREE.NearestMipMapNearestFilter=1004,THREE.NearestMipMapLinearFilter=1005,THREE.LinearFilter=1006,THREE.LinearMipMapNearestFilter=1007,THREE.LinearMipMapLinearFilter=1008,THREE.UnsignedByteType=1009,THREE.ByteType=1010,THREE.ShortType=1011,THREE.UnsignedShortType=1012,THREE.IntType=1013,THREE.UnsignedIntType=1014,THREE.FloatType=1015,THREE.UnsignedShort4444Type=1016,THREE.UnsignedShort5551Type=1017,THREE.UnsignedShort565Type=1018,THREE.AlphaFormat=1019,THREE.RGBFormat=1020,THREE.RGBAFormat=1021,THREE.LuminanceFormat=1022,THREE.LuminanceAlphaFormat=1023,THREE.RGB_S3TC_DXT1_Format=2001,THREE.RGBA_S3TC_DXT1_Format=2002,THREE.RGBA_S3TC_DXT3_Format=2003,THREE.RGBA_S3TC_DXT5_Format=2004,THREE.Color=function(e){return void 0!==e&&this.set(e),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(e){switch(typeof e){case"number":this.setHex(e);break;case"string":this.setStyle(e)}},setHex:function(e){return e=Math.floor(e),this.r=(255&e>>16)/255,this.g=(255&e>>8)/255,this.b=(255&e)/255,this},setRGB:function(e,t,r){return this.r=e,this.g=t,this.b=r,this},setHSV:function(e,t,r){var i,n,a,o,s;return 0===r?this.r=this.g=this.b=0:(i=Math.floor(6*e),n=6*e-i,a=r*(1-t),o=r*(1-t*n),s=r*(1-t*(1-n)),0===i?(this.r=r,this.g=s,this.b=a):1===i?(this.r=o,this.g=r,this.b=a):2===i?(this.r=a,this.g=r,this.b=s):3===i?(this.r=a,this.g=o,this.b=r):4===i?(this.r=s,this.g=a,this.b=r):5===i&&(this.r=r,this.g=a,this.b=o)),this},setStyle:function(e){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(e)){var t=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(e);return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(e)){var t=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(e);return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(e)){var t=/^\#([0-9a-f]{6})$/i.exec(e);return this.setHex(parseInt(t[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(e)){var t=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(e);return this.setHex(parseInt(t[1]+t[1]+t[2]+t[2]+t[3]+t[3],16)),this}return/^(\w+)$/i.test(e)?(this.setHex(THREE.ColorKeywords[e]),this):void 0},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e){return this.r=e.r*e.r,this.g=e.g*e.g,this.b=e.b*e.b,this},copyLinearToGamma:function(e){return this.r=Math.sqrt(e.r),this.g=Math.sqrt(e.g),this.b=Math.sqrt(e.b),this},convertGammaToLinear:function(){var e=this.r,t=this.g,r=this.b;return this.r=e*e,this.g=t*t,this.b=r*r,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(0|255*this.r)+","+(0|255*this.g)+","+(0|255*this.b)+")"},getHSV:function(e){var t,r,i=this.r,n=this.g,a=this.b,o=Math.max(Math.max(i,n),a),s=Math.min(Math.min(i,n),a),l=o;if(s===o)t=0,r=0;else{var h=o-s;r=h/o,t=i===o?(n-a)/h:n===o?2+(a-i)/h:4+(i-n)/h,t/=6,0>t&&(t+=1),t>1&&(t-=1)}return void 0===e&&(e={h:0,s:0,v:0}),e.h=t,e.s=r,e.v=l,e},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},THREE.Quaternion=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w,this},setFromEuler:function(e,t){var r=Math.cos(e.x/2),i=Math.cos(e.y/2),n=Math.cos(e.z/2),a=Math.sin(e.x/2),o=Math.sin(e.y/2),s=Math.sin(e.z/2);return void 0===t||"XYZ"===t?(this.x=a*i*n+r*o*s,this.y=r*o*n-a*i*s,this.z=r*i*s+a*o*n,this.w=r*i*n-a*o*s):"YXZ"===t?(this.x=a*i*n+r*o*s,this.y=r*o*n-a*i*s,this.z=r*i*s-a*o*n,this.w=r*i*n+a*o*s):"ZXY"===t?(this.x=a*i*n-r*o*s,this.y=r*o*n+a*i*s,this.z=r*i*s+a*o*n,this.w=r*i*n-a*o*s):"ZYX"===t?(this.x=a*i*n-r*o*s,this.y=r*o*n+a*i*s,this.z=r*i*s-a*o*n,this.w=r*i*n+a*o*s):"YZX"===t?(this.x=a*i*n+r*o*s,this.y=r*o*n+a*i*s,this.z=r*i*s-a*o*n,this.w=r*i*n-a*o*s):"XZY"===t&&(this.x=a*i*n-r*o*s,this.y=r*o*n-a*i*s,this.z=r*i*s+a*o*n,this.w=r*i*n+a*o*s),this},setFromAxisAngle:function(e,t){var r=t/2,i=Math.sin(r);return this.x=e.x*i,this.y=e.y*i,this.z=e.z*i,this.w=Math.cos(r),this},setFromRotationMatrix:function(e){var t,r=e.elements,i=r[0],n=r[4],a=r[8],o=r[1],s=r[5],l=r[9],h=r[2],c=r[6],u=r[10],f=i+s+u;return f>0?(t=.5/Math.sqrt(f+1),this.w=.25/t,this.x=(c-l)*t,this.y=(a-h)*t,this.z=(o-n)*t):i>s&&i>u?(t=2*Math.sqrt(1+i-s-u),this.w=(c-l)/t,this.x=.25*t,this.y=(n+o)/t,this.z=(a+h)/t):s>u?(t=2*Math.sqrt(1+s-i-u),this.w=(a-h)/t,this.x=(n+o)/t,this.y=.25*t,this.z=(l+c)/t):(t=2*Math.sqrt(1+u-i-s),this.w=(o-n)/t,this.x=(a+h)/t,this.y=(l+c)/t,this.z=.25*t),this},inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this.x*=-1,this.y*=-1,this.z*=-1,this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var e=this.length();return 0===e?(this.x=0,this.y=0,this.z=0,this.w=1):(e=1/e,this.x=this.x*e,this.y=this.y*e,this.z=this.z*e,this.w=this.w*e),this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var r=e.x,i=e.y,n=e.z,a=e.w,o=t.x,s=t.y,l=t.z,h=t.w;return this.x=r*h+a*o+i*l-n*s,this.y=i*h+a*s+n*o-r*l,this.z=n*h+a*l+r*s-i*o,this.w=a*h-r*o-i*s-n*l,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){var r=this.x,i=this.y,n=this.z,a=this.w,o=a*e.w+r*e.x+i*e.y+n*e.z;if(0>o?(this.w=-e.w,this.x=-e.x,this.y=-e.y,this.z=-e.z,o=-o):this.copy(e),o>=1)return this.w=a,this.x=r,this.y=i,this.z=n,this;var s=Math.acos(o),l=Math.sqrt(1-o*o);if(.001>Math.abs(l))return this.w=.5*(a+this.w),this.x=.5*(r+this.x),this.y=.5*(i+this.y),this.z=.5*(n+this.z),this;var h=Math.sin((1-t)*s)/l,c=Math.sin(t*s)/l;return this.w=a*h+this.w*c,this.x=r*h+this.x*c,this.y=i*h+this.y*c,this.z=n*h+this.z*c,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}},THREE.Quaternion.slerp=function(e,t,r,i){return r.copy(e).slerp(t,i)},THREE.Vector2=function(e,t){this.x=e||0,this.y=t||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScalar:function(e){return this.x+=e,this.y+=e,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e):this.set(0,0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y;return t*t+r*r},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(e,t,r){this.x=e||0,this.y=t||0,this.z=r||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,t,r){return this.x=e,this.y=t,this.z=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyMatrix3:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[3]*r+n[6]*i,this.y=n[1]*t+n[4]*r+n[7]*i,this.z=n[2]*t+n[5]*r+n[8]*i,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements;return this.x=n[0]*t+n[4]*r+n[8]*i+n[12],this.y=n[1]*t+n[5]*r+n[9]*i+n[13],this.z=n[2]*t+n[6]*r+n[10]*i+n[14],this},applyProjection:function(e){var t=this.x,r=this.y,i=this.z,n=e.elements,a=1/(n[3]*t+n[7]*r+n[11]*i+n[15]);return this.x=(n[0]*t+n[4]*r+n[8]*i+n[12])*a,this.y=(n[1]*t+n[5]*r+n[9]*i+n[13])*a,this.z=(n[2]*t+n[6]*r+n[10]*i+n[14])*a,this},applyQuaternion:function(e){var t=this.x,r=this.y,i=this.z,n=e.x,a=e.y,o=e.z,s=e.w,l=s*t+a*i-o*r,h=s*r+o*t-n*i,c=s*i+n*r-a*t,u=-n*t-a*r-o*i;return this.x=l*s+u*-n+h*-o-c*-a,this.y=h*s+u*-a+c*-n-l*-o,this.z=c*s+u*-o+l*-a-h*-n,this},applyEuler:function(e,t){var r=THREE.Vector3.__q1.setFromEuler(e,t);return this.applyQuaternion(r),this},applyAxisAngle:function(e,t){var r=THREE.Vector3.__q1.setFromAxisAngle(e,t);return this.applyQuaternion(r),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e):(this.x=0,this.y=0,this.z=0),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},cross:function(e,t){if(void 0!==t)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var r=this.x,i=this.y,n=this.z;return this.x=i*e.z-n*e.y,this.y=n*e.x-r*e.z,this.z=r*e.y-i*e.x,this},crossVectors:function(e,t){return this.x=e.y*t.z-e.z*t.y,this.y=e.z*t.x-e.x*t.z,this.z=e.x*t.y-e.y*t.x,this},angleTo:function(e){return Math.acos(this.dot(e)/this.length()/e.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,r=this.y-e.y,i=this.z-e.z;return t*t+r*r+i*i},getPositionFromMatrix:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setEulerFromRotationMatrix:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.elements,n=i[0],a=i[4],o=i[8],s=i[1],l=i[5],h=i[9],c=i[2],u=i[6],f=i[10];return void 0===t||"XYZ"===t?(this.y=Math.asin(r(o)),.99999>Math.abs(o)?(this.x=Math.atan2(-h,f),this.z=Math.atan2(-a,n)):(this.x=Math.atan2(u,l),this.z=0)):"YXZ"===t?(this.x=Math.asin(-r(h)),.99999>Math.abs(h)?(this.y=Math.atan2(o,f),this.z=Math.atan2(s,l)):(this.y=Math.atan2(-c,n),this.z=0)):"ZXY"===t?(this.x=Math.asin(r(u)),.99999>Math.abs(u)?(this.y=Math.atan2(-c,f),this.z=Math.atan2(-a,l)):(this.y=0,this.z=Math.atan2(s,n))):"ZYX"===t?(this.y=Math.asin(-r(c)),.99999>Math.abs(c)?(this.x=Math.atan2(u,f),this.z=Math.atan2(s,n)):(this.x=0,this.z=Math.atan2(-a,l))):"YZX"===t?(this.z=Math.asin(r(s)),.99999>Math.abs(s)?(this.x=Math.atan2(-h,l),this.y=Math.atan2(-c,n)):(this.x=0,this.y=Math.atan2(o,f))):"XZY"===t&&(this.z=Math.asin(-r(a)),.99999>Math.abs(a)?(this.x=Math.atan2(u,l),this.y=Math.atan2(o,n)):(this.x=Math.atan2(-h,f),this.y=0)),this},setEulerFromQuaternion:function(e,t){function r(e){return Math.min(Math.max(e,-1),1)}var i=e.x*e.x,n=e.y*e.y,a=e.z*e.z,o=e.w*e.w;return void 0===t||"XYZ"===t?(this.x=Math.atan2(2*(e.x*e.w-e.y*e.z),o-i-n+a),this.y=Math.asin(r(2*(e.x*e.z+e.y*e.w))),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o+i-n-a)):"YXZ"===t?(this.x=Math.asin(r(2*(e.x*e.w-e.y*e.z))),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o-i-n+a),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o-i+n-a)):"ZXY"===t?(this.x=Math.asin(r(2*(e.x*e.w+e.y*e.z))),this.y=Math.atan2(2*(e.y*e.w-e.z*e.x),o-i-n+a),this.z=Math.atan2(2*(e.z*e.w-e.x*e.y),o-i+n-a)):"ZYX"===t?(this.x=Math.atan2(2*(e.x*e.w+e.z*e.y),o-i-n+a),this.y=Math.asin(r(2*(e.y*e.w-e.x*e.z))),this.z=Math.atan2(2*(e.x*e.y+e.z*e.w),o+i-n-a)):"YZX"===t?(this.x=Math.atan2(2*(e.x*e.w-e.z*e.y),o-i+n-a),this.y=Math.atan2(2*(e.y*e.w-e.x*e.z),o+i-n-a),this.z=Math.asin(r(2*(e.x*e.y+e.z*e.w)))):"XZY"===t&&(this.x=Math.atan2(2*(e.x*e.w+e.y*e.z),o-i+n-a),this.y=Math.atan2(2*(e.x*e.z+e.y*e.w),o+i-n-a),this.z=Math.asin(r(2*(e.z*e.w-e.x*e.y)))),this},getScaleFromMatrix:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),r=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),i=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=r,this.z=i,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector3.__q1=new THREE.Quaternion,THREE.Vector4=function(e,t,r,i){this.x=e||0,this.y=t||0,this.z=r||0,this.w=void 0!==i?i:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(e,t,r,i){return this.x=e,this.y=t,this.z=r,this.w=i,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+e)}},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},sub:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this},applyMatrix4:function(e){var t=this.x,r=this.y,i=this.z,n=this.w,a=e.elements;return this.x=a[0]*t+a[4]*r+a[8]*i+a[12]*n,this.y=a[1]*t+a[5]*r+a[9]*i+a[13]*n,this.z=a[2]*t+a[6]*r+a[10]*i+a[14]*n,this.w=a[3]*t+a[7]*r+a[11]*i+a[15]*n,this},divideScalar:function(e){return 0!==e?(this.x/=e,this.y/=e,this.z/=e,this.w/=e):(this.x=0,this.y=0,this.z=0,this.w=1),this},min:function(e){return this.x>e.x&&(this.x=e.x),this.y>e.y&&(this.y=e.y),this.z>e.z&&(this.z=e.z),this.w>e.w&&(this.w=e.w),this},max:function(e){return this.x<e.x&&(this.x=e.x),this.y<e.y&&(this.y=e.y),this.z<e.z&&(this.z=e.z),this.w<e.w&&(this.w=e.w),this},clamp:function(e,t){return this.x<e.x?this.x=e.x:this.x>t.x&&(this.x=t.x),this.y<e.y?this.y=e.y:this.y>t.y&&(this.y=t.y),this.z<e.z?this.z=e.z:this.z>t.z&&(this.z=t.z),this.w<e.w?this.w=e.w:this.w>t.w&&(this.w=t.w),this},negate:function(){return this.multiplyScalar(-1)},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){var t=this.length();return 0!==t&&e!==t&&this.multiplyScalar(e/t),this},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,r,i,n,a=.01,o=.1,s=e.elements,l=s[0],h=s[4],c=s[8],u=s[1],f=s[5],p=s[9],d=s[2],m=s[6],E=s[10];if(a>Math.abs(h-u)&&a>Math.abs(c-d)&&a>Math.abs(p-m)){if(o>Math.abs(h+u)&&o>Math.abs(c+d)&&o>Math.abs(p+m)&&o>Math.abs(l+f+E-3))return this.set(1,0,0,0),this;t=Math.PI;var g=(l+1)/2,v=(f+1)/2,y=(E+1)/2,T=(h+u)/4,R=(c+d)/4,x=(p+m)/4;return g>v&&g>y?a>g?(r=0,i=.707106781,n=.707106781):(r=Math.sqrt(g),i=T/r,n=R/r):v>y?a>v?(r=.707106781,i=0,n=.707106781):(i=Math.sqrt(v),r=T/i,n=x/i):a>y?(r=.707106781,i=.707106781,n=0):(n=Math.sqrt(y),r=R/n,i=x/n),this.set(r,i,n,t),this}var H=Math.sqrt((m-p)*(m-p)+(c-d)*(c-d)+(u-h)*(u-h));return.001>Math.abs(H)&&(H=1),this.x=(m-p)/H,this.y=(c-d)/H,this.z=(u-h)/H,this.w=Math.acos((l+f+E-1)/2),this}},THREE.Box2=function(e,t){this.min=void 0!==e?e:new THREE.Vector2(1/0,1/0),this.max=void 0!==t?t:new THREE.Vector2(-1/0,-1/0)},THREE.Box2.prototype={constructor:THREE.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)t=e[r],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var r=THREE.Box2.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new THREE.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e){return new THREE.Vector2((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var r=t||new THREE.Vector2;return r.copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=THREE.Box2.__v1.copy(e).clamp(this.min,this.max);return t.sub(e).length()},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}},THREE.Box2.__v1=new THREE.Vector2,THREE.Box3=function(e,t){this.min=void 0!==e?e:new THREE.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new THREE.Vector3(-1/0,-1/0,-1/0)},THREE.Box3.prototype={constructor:THREE.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){if(e.length>0){var t=e[0];this.min.copy(t),this.max.copy(t);for(var r=1,i=e.length;i>r;r++)t=e[r],t.x<this.min.x?this.min.x=t.x:t.x>this.max.x&&(this.max.x=t.x),t.y<this.min.y?this.min.y=t.y:t.y>this.max.y&&(this.max.y=t.y),t.z<this.min.z?this.min.z=t.z:t.z>this.max.z&&(this.max.z=t.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(e,t){var r=THREE.Box3.__v1.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(r),this.max.copy(e).add(r),this},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new THREE.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e){return new THREE.Vector3((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){return t||new THREE.Vector3,(new THREE.Vector3).copy(e).clamp(this.min,this.max)},distanceToPoint:function(e){var t=THREE.Box3.__v1.copy(e).clamp(this.min,this.max);return t.sub(e).length()},getBoundingSphere:function(e){var t=e||new THREE.Sphere;return t.center=this.center(),t.radius=.5*this.size(THREE.Box3.__v0).length(),t},intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},transform:function(e){var t=[THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v1.set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v2.set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z).applyMatrix4(e)];return this.makeEmpty(),this.setFromPoints(t),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}},THREE.Box3.__v0=new THREE.Vector3,THREE.Box3.__v1=new THREE.Vector3,THREE.Box3.__v2=new THREE.Vector3,THREE.Box3.__v3=new THREE.Vector3,THREE.Box3.__v4=new THREE.Vector3,THREE.Box3.__v5=new THREE.Vector3,THREE.Box3.__v6=new THREE.Vector3,THREE.Box3.__v7=new THREE.Vector3,THREE.Matrix3=function(e,t,r,i,n,a,o,s,l){this.elements=new Float32Array(9),this.set(void 0!==e?e:1,t||0,r||0,i||0,void 0!==n?n:1,a||0,o||0,s||0,void 0!==l?l:1)
},THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(e,t,r,i,n,a,o,s,l){var h=this.elements;return h[0]=e,h[3]=t,h[6]=r,h[1]=i,h[4]=n,h[7]=a,h[2]=o,h[5]=s,h[8]=l,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix3.__v1,r=0,i=e.length;i>r;r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],t.applyMatrix3(this),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],r=e[1],i=e[2],n=e[3],a=e[4],o=e[5],s=e[6],l=e[7],h=e[8];return t*a*h-t*o*l-r*n*h+r*o*s+i*n*l-i*a*s},getInverse:function(e,t){var r=e.elements,i=this.elements;i[0]=r[10]*r[5]-r[6]*r[9],i[1]=-r[10]*r[1]+r[2]*r[9],i[2]=r[6]*r[1]-r[2]*r[5],i[3]=-r[10]*r[4]+r[6]*r[8],i[4]=r[10]*r[0]-r[2]*r[8],i[5]=-r[6]*r[0]+r[2]*r[4],i[6]=r[9]*r[4]-r[5]*r[8],i[7]=-r[9]*r[0]+r[1]*r[8],i[8]=r[5]*r[0]-r[1]*r[4];var n=r[0]*i[0]+r[1]*i[3]+r[2]*i[6];if(0===n){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/n),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},clone:function(){var e=this.elements;return new THREE.Matrix3(e[0],e[3],e[6],e[1],e[4],e[7],e[2],e[5],e[8])}},THREE.Matrix3.__v1=new THREE.Vector3,THREE.Matrix4=function(e,t,r,i,n,a,o,s,l,h,c,u,f,p,d,m){this.elements=new Float32Array(16),this.set(void 0!==e?e:1,t||0,r||0,i||0,n||0,void 0!==a?a:1,o||0,s||0,l||0,h||0,void 0!==c?c:1,u||0,f||0,p||0,d||0,void 0!==m?m:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(e,t,r,i,n,a,o,s,l,h,c,u,f,p,d,m){var E=this.elements;return E[0]=e,E[4]=t,E[8]=r,E[12]=i,E[1]=n,E[5]=a,E[9]=o,E[13]=s,E[2]=l,E[6]=h,E[10]=c,E[14]=u,E[3]=f,E[7]=p,E[11]=d,E[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[12],t[1],t[5],t[9],t[13],t[2],t[6],t[10],t[14],t[3],t[7],t[11],t[15]),this},setRotationFromEuler:function(e,t){var r=this.elements,i=e.x,n=e.y,a=e.z,o=Math.cos(i),s=Math.sin(i),l=Math.cos(n),h=Math.sin(n),c=Math.cos(a),u=Math.sin(a);if(void 0===t||"XYZ"===t){var f=o*c,p=o*u,d=s*c,m=s*u;r[0]=l*c,r[4]=-l*u,r[8]=h,r[1]=p+d*h,r[5]=f-m*h,r[9]=-s*l,r[2]=m-f*h,r[6]=d+p*h,r[10]=o*l}else if("YXZ"===t){var E=l*c,g=l*u,v=h*c,y=h*u;r[0]=E+y*s,r[4]=v*s-g,r[8]=o*h,r[1]=o*u,r[5]=o*c,r[9]=-s,r[2]=g*s-v,r[6]=y+E*s,r[10]=o*l}else if("ZXY"===t){var E=l*c,g=l*u,v=h*c,y=h*u;r[0]=E-y*s,r[4]=-o*u,r[8]=v+g*s,r[1]=g+v*s,r[5]=o*c,r[9]=y-E*s,r[2]=-o*h,r[6]=s,r[10]=o*l}else if("ZYX"===t){var f=o*c,p=o*u,d=s*c,m=s*u;r[0]=l*c,r[4]=d*h-p,r[8]=f*h+m,r[1]=l*u,r[5]=m*h+f,r[9]=p*h-d,r[2]=-h,r[6]=s*l,r[10]=o*l}else if("YZX"===t){var T=o*l,R=o*h,x=s*l,H=s*h;r[0]=l*c,r[4]=H-T*u,r[8]=x*u+R,r[1]=u,r[5]=o*c,r[9]=-s*c,r[2]=-h*c,r[6]=R*u+x,r[10]=T-H*u}else if("XZY"===t){var T=o*l,R=o*h,x=s*l,H=s*h;r[0]=l*c,r[4]=-u,r[8]=h*c,r[1]=T*u+H,r[5]=o*c,r[9]=R*u-x,r[2]=x*u-R,r[6]=s*c,r[10]=H*u+T}return this},setRotationFromQuaternion:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z,a=e.w,o=r+r,s=i+i,l=n+n,h=r*o,c=r*s,u=r*l,f=i*s,p=i*l,d=n*l,m=a*o,E=a*s,g=a*l;return t[0]=1-(f+d),t[4]=c-g,t[8]=u+E,t[1]=c+g,t[5]=1-(h+d),t[9]=p-m,t[2]=u-E,t[6]=p+m,t[10]=1-(h+f),this},lookAt:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__v1,a=THREE.Matrix4.__v2,o=THREE.Matrix4.__v3;return o.subVectors(e,t).normalize(),0===o.length()&&(o.z=1),n.crossVectors(r,o).normalize(),0===n.length()&&(o.x+=1e-4,n.crossVectors(r,o).normalize()),a.crossVectors(o,n),i[0]=n.x,i[4]=a.x,i[8]=o.x,i[1]=n.y,i[5]=a.y,i[9]=o.y,i[2]=n.z,i[6]=a.z,i[10]=o.z,this},multiply:function(e,t){return void 0!==t?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var r=e.elements,i=t.elements,n=this.elements,a=r[0],o=r[4],s=r[8],l=r[12],h=r[1],c=r[5],u=r[9],f=r[13],p=r[2],d=r[6],m=r[10],E=r[14],g=r[3],v=r[7],y=r[11],T=r[15],R=i[0],x=i[4],H=i[8],b=i[12],w=i[1],_=i[5],S=i[9],M=i[13],C=i[2],A=i[6],L=i[10],P=i[14],D=i[3],F=i[7],U=i[11],z=i[15];return n[0]=a*R+o*w+s*C+l*D,n[4]=a*x+o*_+s*A+l*F,n[8]=a*H+o*S+s*L+l*U,n[12]=a*b+o*M+s*P+l*z,n[1]=h*R+c*w+u*C+f*D,n[5]=h*x+c*_+u*A+f*F,n[9]=h*H+c*S+u*L+f*U,n[13]=h*b+c*M+u*P+f*z,n[2]=p*R+d*w+m*C+E*D,n[6]=p*x+d*_+m*A+E*F,n[10]=p*H+d*S+m*L+E*U,n[14]=p*b+d*M+m*P+E*z,n[3]=g*R+v*w+y*C+T*D,n[7]=g*x+v*_+y*A+T*F,n[11]=g*H+v*S+y*L+T*U,n[15]=g*b+v*M+y*P+T*z,this},multiplyToArray:function(e,t,r){var i=this.elements;return this.multiplyMatrices(e,t),r[0]=i[0],r[1]=i[1],r[2]=i[2],r[3]=i[3],r[4]=i[4],r[5]=i[5],r[6]=i[6],r[7]=i[7],r[8]=i[8],r[9]=i[9],r[10]=i[10],r[11]=i[11],r[12]=i[12],r[13]=i[13],r[14]=i[14],r[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){for(var t=THREE.Matrix4.__v1,r=0,i=e.length;i>r;r+=3)t.x=e[r],t.y=e[r+1],t.z=e[r+2],t.applyProjection(this),e[r]=t.x,e[r+1]=t.y,e[r+2]=t.z;return e},rotateAxis:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return e.x=r*t[0]+i*t[4]+n*t[8],e.y=r*t[1]+i*t[5]+n*t[9],e.z=r*t[2]+i*t[6]+n*t[10],e.normalize(),e},crossVector:function(e){var t=this.elements,r=new THREE.Vector4;return r.x=t[0]*e.x+t[4]*e.y+t[8]*e.z+t[12]*e.w,r.y=t[1]*e.x+t[5]*e.y+t[9]*e.z+t[13]*e.w,r.z=t[2]*e.x+t[6]*e.y+t[10]*e.z+t[14]*e.w,r.w=e.w?t[3]*e.x+t[7]*e.y+t[11]*e.z+t[15]*e.w:1,r},determinant:function(){var e=this.elements,t=e[0],r=e[4],i=e[8],n=e[12],a=e[1],o=e[5],s=e[9],l=e[13],h=e[2],c=e[6],u=e[10],f=e[14],p=e[3],d=e[7],m=e[11],E=e[15];return p*(+n*s*c-i*l*c-n*o*u+r*l*u+i*o*f-r*s*f)+d*(+t*s*f-t*l*u+n*a*u-i*a*f+i*l*h-n*s*h)+m*(+t*l*c-t*o*f-n*a*c+r*a*f+n*o*h-r*l*h)+E*(-i*o*h-t*s*c+t*o*u+i*a*c-r*a*u+r*s*h)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},flattenToArrayOffset:function(e,t){var r=this.elements;return e[t]=r[0],e[t+1]=r[1],e[t+2]=r[2],e[t+3]=r[3],e[t+4]=r[4],e[t+5]=r[5],e[t+6]=r[6],e[t+7]=r[7],e[t+8]=r[8],e[t+9]=r[9],e[t+10]=r[10],e[t+11]=r[11],e[t+12]=r[12],e[t+13]=r[13],e[t+14]=r[14],e[t+15]=r[15],e},getPosition:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[12],e[13],e[14])},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getColumnX:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[0],e[1],e[2])},getColumnY:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[4],e[5],e[6])},getColumnZ:function(){var e=this.elements;return THREE.Matrix4.__v1.set(e[8],e[9],e[10])},getInverse:function(e,t){var r=this.elements,i=e.elements,n=i[0],a=i[4],o=i[8],s=i[12],l=i[1],h=i[5],c=i[9],u=i[13],f=i[2],p=i[6],d=i[10],m=i[14],E=i[3],g=i[7],v=i[11],y=i[15];r[0]=c*m*g-u*d*g+u*p*v-h*m*v-c*p*y+h*d*y,r[4]=s*d*g-o*m*g-s*p*v+a*m*v+o*p*y-a*d*y,r[8]=o*u*g-s*c*g+s*h*v-a*u*v-o*h*y+a*c*y,r[12]=s*c*p-o*u*p-s*h*d+a*u*d+o*h*m-a*c*m,r[1]=u*d*E-c*m*E-u*f*v+l*m*v+c*f*y-l*d*y,r[5]=o*m*E-s*d*E+s*f*v-n*m*v-o*f*y+n*d*y,r[9]=s*c*E-o*u*E-s*l*v+n*u*v+o*l*y-n*c*y,r[13]=o*u*f-s*c*f+s*l*d-n*u*d-o*l*m+n*c*m,r[2]=h*m*E-u*p*E+u*f*g-l*m*g-h*f*y+l*p*y,r[6]=s*p*E-a*m*E-s*f*g+n*m*g+a*f*y-n*p*y,r[10]=a*u*E-s*h*E+s*l*g-n*u*g-a*l*y+n*h*y,r[14]=s*h*f-a*u*f-s*l*p+n*u*p+a*l*m-n*h*m,r[3]=c*p*E-h*d*E-c*f*g+l*d*g+h*f*v-l*p*v,r[7]=a*d*E-o*p*E+o*f*g-n*d*g-a*f*v+n*p*v,r[11]=o*h*E-a*c*E-o*l*g+n*c*g+a*l*v-n*h*v,r[15]=a*c*f-o*h*f+o*l*p-n*c*p-a*l*d+n*h*d;var T=i[0]*r[0]+i[1]*r[4]+i[2]*r[8]+i[3]*r[12];if(0==T){var R="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw Error(R);return console.warn(R),this.identity(),this}return this.multiplyScalar(1/T),this},compose:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__m1,a=THREE.Matrix4.__m2;return n.identity(),n.setRotationFromQuaternion(t),a.makeScale(r.x,r.y,r.z),this.multiplyMatrices(n,a),i[12]=e.x,i[13]=e.y,i[14]=e.z,this},decompose:function(e,t,r){var i=this.elements,n=THREE.Matrix4.__v1,a=THREE.Matrix4.__v2,o=THREE.Matrix4.__v3;n.set(i[0],i[1],i[2]),a.set(i[4],i[5],i[6]),o.set(i[8],i[9],i[10]),e=e instanceof THREE.Vector3?e:new THREE.Vector3,t=t instanceof THREE.Quaternion?t:new THREE.Quaternion,r=r instanceof THREE.Vector3?r:new THREE.Vector3,r.x=n.length(),r.y=a.length(),r.z=o.length(),e.x=i[12],e.y=i[13],e.z=i[14];var s=THREE.Matrix4.__m1;return s.copy(this),s.elements[0]/=r.x,s.elements[1]/=r.x,s.elements[2]/=r.x,s.elements[4]/=r.y,s.elements[5]/=r.y,s.elements[6]/=r.y,s.elements[8]/=r.z,s.elements[9]/=r.z,s.elements[10]/=r.z,t.setFromRotationMatrix(s),[e,t,r]},extractPosition:function(e){var t=this.elements,r=e.elements;return t[12]=r[12],t[13]=r[13],t[14]=r[14],this},extractRotation:function(e){var t=this.elements,r=e.elements,i=THREE.Matrix4.__v1,n=1/i.set(r[0],r[1],r[2]).length(),a=1/i.set(r[4],r[5],r[6]).length(),o=1/i.set(r[8],r[9],r[10]).length();return t[0]=r[0]*n,t[1]=r[1]*n,t[2]=r[2]*n,t[4]=r[4]*a,t[5]=r[5]*a,t[6]=r[6]*a,t[8]=r[8]*o,t[9]=r[9]*o,t[10]=r[10]*o,this},translate:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return t[12]=t[0]*r+t[4]*i+t[8]*n+t[12],t[13]=t[1]*r+t[5]*i+t[9]*n+t[13],t[14]=t[2]*r+t[6]*i+t[10]*n+t[14],t[15]=t[3]*r+t[7]*i+t[11]*n+t[15],this},rotateX:function(e){var t=this.elements,r=t[4],i=t[5],n=t[6],a=t[7],o=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e),u=Math.sin(e);return t[4]=c*r+u*o,t[5]=c*i+u*s,t[6]=c*n+u*l,t[7]=c*a+u*h,t[8]=c*o-u*r,t[9]=c*s-u*i,t[10]=c*l-u*n,t[11]=c*h-u*a,this},rotateY:function(e){var t=this.elements,r=t[0],i=t[1],n=t[2],a=t[3],o=t[8],s=t[9],l=t[10],h=t[11],c=Math.cos(e),u=Math.sin(e);return t[0]=c*r-u*o,t[1]=c*i-u*s,t[2]=c*n-u*l,t[3]=c*a-u*h,t[8]=c*o+u*r,t[9]=c*s+u*i,t[10]=c*l+u*n,t[11]=c*h+u*a,this},rotateZ:function(e){var t=this.elements,r=t[0],i=t[1],n=t[2],a=t[3],o=t[4],s=t[5],l=t[6],h=t[7],c=Math.cos(e),u=Math.sin(e);return t[0]=c*r+u*o,t[1]=c*i+u*s,t[2]=c*n+u*l,t[3]=c*a+u*h,t[4]=c*o-u*r,t[5]=c*s-u*i,t[6]=c*l-u*n,t[7]=c*h-u*a,this},rotateByAxis:function(e,t){var r=this.elements;if(1===e.x&&0===e.y&&0===e.z)return this.rotateX(t);if(0===e.x&&1===e.y&&0===e.z)return this.rotateY(t);if(0===e.x&&0===e.y&&1===e.z)return this.rotateZ(t);var i=e.x,n=e.y,a=e.z,o=Math.sqrt(i*i+n*n+a*a);i/=o,n/=o,a/=o;var s=i*i,l=n*n,h=a*a,c=Math.cos(t),u=Math.sin(t),f=1-c,p=i*n*f,d=i*a*f,m=n*a*f,E=i*u,g=n*u,v=a*u,y=s+(1-s)*c,T=p+v,R=d-g,x=p-v,H=l+(1-l)*c,b=m+E,w=d+g,_=m-E,S=h+(1-h)*c,M=r[0],C=r[1],A=r[2],L=r[3],P=r[4],D=r[5],F=r[6],U=r[7],z=r[8],B=r[9],N=r[10],I=r[11];return r[12],r[13],r[14],r[15],r[0]=y*M+T*P+R*z,r[1]=y*C+T*D+R*B,r[2]=y*A+T*F+R*N,r[3]=y*L+T*U+R*I,r[4]=x*M+H*P+b*z,r[5]=x*C+H*D+b*B,r[6]=x*A+H*F+b*N,r[7]=x*L+H*U+b*I,r[8]=w*M+_*P+S*z,r[9]=w*C+_*D+S*B,r[10]=w*A+_*F+S*N,r[11]=w*L+_*U+S*I,this},scale:function(e){var t=this.elements,r=e.x,i=e.y,n=e.z;return t[0]*=r,t[4]*=i,t[8]*=n,t[1]*=r,t[5]*=i,t[9]*=n,t[2]*=r,t[6]*=i,t[10]*=n,t[3]*=r,t[7]*=i,t[11]*=n,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],r=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,Math.max(r,i)))},makeTranslation:function(e,t,r){return this.set(1,0,0,e,0,1,0,t,0,0,1,r,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(1,0,0,0,0,t,-r,0,0,r,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,0,r,0,0,1,0,0,-r,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),r=Math.sin(e);return this.set(t,-r,0,0,r,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var r=Math.cos(t),i=Math.sin(t),n=1-r,a=e.x,o=e.y,s=e.z,l=n*a,h=n*o;return this.set(l*a+r,l*o-i*s,l*s+i*o,0,l*o+i*s,h*o+r,h*s-i*a,0,l*s-i*o,h*s+i*a,n*s*s+r,0,0,0,0,1),this},makeScale:function(e,t,r){return this.set(e,0,0,0,0,t,0,0,0,0,r,0,0,0,0,1),this},makeFrustum:function(e,t,r,i,n,a){var o=this.elements,s=2*n/(t-e),l=2*n/(i-r),h=(t+e)/(t-e),c=(i+r)/(i-r),u=-(a+n)/(a-n),f=-2*a*n/(a-n);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=l,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=u,o[14]=f,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,r,i){var n=r*Math.tan(THREE.Math.degToRad(.5*e)),a=-n,o=a*t,s=n*t;return this.makeFrustum(o,s,a,n,r,i)},makeOrthographic:function(e,t,r,i,n,a){var o=this.elements,s=t-e,l=r-i,h=a-n,c=(t+e)/s,u=(r+i)/l,f=(a+n)/h;return o[0]=2/s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2/l,o[9]=0,o[13]=-u,o[2]=0,o[6]=0,o[10]=-2/h,o[14]=-f,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},clone:function(){var e=this.elements;return new THREE.Matrix4(e[0],e[4],e[8],e[12],e[1],e[5],e[9],e[13],e[2],e[6],e[10],e[14],e[3],e[7],e[11],e[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Ray=function(e,t){this.origin=void 0!==e?e:new THREE.Vector3,this.direction=void 0!==t?t:new THREE.Vector3},THREE.Ray.prototype={constructor:THREE.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var r=t||new THREE.Vector3;return r.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(e){return this.origin.copy(this.at(e,THREE.Ray.__v1)),this},closestPointToPoint:function(e,t){var r=t||new THREE.Vector3;r.subVectors(e,this.origin);var i=r.dot(this.direction);return r.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(e){var t=THREE.Ray.__v1.subVectors(e,this.origin).dot(this.direction);return THREE.Ray.__v1.copy(this.direction).multiplyScalar(t).add(this.origin),THREE.Ray.__v1.distanceTo(e)},isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},isIntersectionPlane:function(e){var t=e.normal.dot(this.direction);return 0!=t?!0:0==e.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0==t)return 0==e.distanceToPoint(this.origin)?0:void 0;var r=-(this.origin.dot(e.normal)+e.constant)/t;return r},intersectPlane:function(e,t){var r=this.distanceToPlane(e);return void 0===r?void 0:this.at(r,t)},transform:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}},THREE.Ray.__v1=new THREE.Vector3,THREE.Ray.__v2=new THREE.Vector3,THREE.Sphere=function(e,t){this.center=void 0!==e?e:new THREE.Vector3,this.radius=void 0!==t?t:0},THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromCenterAndPoints:function(e,t){for(var r=0,i=0,n=t.length;n>i;i++){var a=e.distanceToSquared(t[i]);r=Math.max(r,a)}return this.center=e,this.radius=Math.sqrt(r),this},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return 0>=this.radius},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return t*t>=e.center.distanceToSquared(this.center)},clampPoint:function(e,t){var r=this.center.distanceToSquared(e),i=t||new THREE.Vector3;return i.copy(e),r>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new THREE.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},transform:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}},THREE.Frustum=function(e,t,r,i,n,a){this.planes=[void 0!==e?e:new THREE.Plane,void 0!==t?t:new THREE.Plane,void 0!==r?r:new THREE.Plane,void 0!==i?i:new THREE.Plane,void 0!==n?n:new THREE.Plane,void 0!==a?a:new THREE.Plane]},THREE.Frustum.prototype={set:function(e,t,r,i,n,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(r),o[3].copy(i),o[4].copy(n),o[5].copy(a),this},copy:function(e){for(var t=this.planes,r=0;6>r;r++)t[r].copy(e.planes[r]);return this},setFromMatrix:function(e){var t=this.planes,r=e.elements,i=r[0],n=r[1],a=r[2],o=r[3],s=r[4],l=r[5],h=r[6],c=r[7],u=r[8],f=r[9],p=r[10],d=r[11],m=r[12],E=r[13],g=r[14],v=r[15];return t[0].setComponents(o-i,c-s,d-u,v-m).normalize(),t[1].setComponents(o+i,c+s,d+u,v+m).normalize(),t[2].setComponents(o+n,c+l,d+f,v+E).normalize(),t[3].setComponents(o-n,c-l,d-f,v-E).normalize(),t[4].setComponents(o-a,c-h,d-p,v-g).normalize(),t[5].setComponents(o+a,c+h,d+p,v+g).normalize(),this},intersectsObject:function(e){for(var t=e.matrixWorld,r=this.planes,i=t.getPosition(),n=-e.geometry.boundingSphere.radius*t.getMaxScaleOnAxis(),a=0;6>a;a++){var o=r[a].distanceToPoint(i);if(n>o)return!1}return!0},intersectsSphere:function(e){for(var t=this.planes,r=e.center,i=-e.radius,n=0;6>n;n++){var a=t[n].distanceToPoint(r);if(i>a)return!1}return!0},containsPoint:function(e){for(var t=this.planes,r=0;6>r;r++)if(0>t[r].distanceToPoint(e))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}},THREE.Plane=function(e,t){this.normal=void 0!==e?e:new THREE.Vector3(1,0,0),this.constant=void 0!==t?t:0},THREE.Plane.prototype={constructor:THREE.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,r,i){return this.normal.set(e,t,r),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(e,t,r){var i=THREE.Plane.__v1.subVectors(r,t).cross(THREE.Plane.__v2.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var r=this.distanceToPoint(e),i=t||new THREE.Vector3;return i.copy(this.normal).multiplyScalar(r)},isIntersectionLine:function(e,t){var r=this.distanceToPoint(e),i=this.distanceToPoint(t);return 0>r&&i>0||0>i&&r>0},intersectLine:function(e,t,r){var i=r||new THREE.Vector3,n=THREE.Plane.__v1.subVectors(t,e),a=this.normal.dot(n);if(0==a)return 0==this.distanceToPoint(e)?i.copy(e):void 0;var o=-(e.dot(this.normal)+this.constant)/a;return 0>o||o>1?void 0:i.copy(n).multiplyScalar(o).add(e)},coplanarPoint:function(e){var t=e||new THREE.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},transform:function(e,t){t=t||(new THREE.Matrix3).getInverse(e).transpose();var r=THREE.Plane.__v1.copy(this.normal).applyMatrix3(t),i=this.coplanarPoint(THREE.Plane.__v2);return i.applyMatrix4(e),this.setFromNormalAndCoplanarPoint(r,i),this},translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}},THREE.Plane.__vZero=new THREE.Vector3(0,0,0),THREE.Plane.__v1=new THREE.Vector3,THREE.Plane.__v2=new THREE.Vector3,THREE.Math={clamp:function(e,t,r){return t>e?t:e>r?r:e},clampBottom:function(e,t){return t>e?t:e},mapLinear:function(e,t,r,i,n){return i+(e-t)*(n-i)/(r-t)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},sign:function(e){return 0>e?-1:e>0?1:0},degToRad:function(e){return e*THREE.Math.__d2r},radToDeg:function(e){return e*THREE.Math.__r2d}},THREE.Math.__d2r=Math.PI/180,THREE.Math.__r2d=180/Math.PI,THREE.Spline=function(e){function t(e,t,r,i,n,a,o){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*o+(-3*(t-r)-2*s-l)*a+s*n+t}this.points=e;var r,i,n,a,o,s,l,h,c,u=[],f={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;e.length>t;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return r=(this.points.length-1)*e,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>this.points.length-2?this.points.length-1:i+1,u[3]=i>this.points.length-3?this.points.length-1:i+2,s=this.points[u[0]],l=this.points[u[1]],h=this.points[u[2]],c=this.points[u[3]],a=n*n,o=n*a,f.x=t(s.x,l.x,h.x,c.x,n,a,o),f.y=t(s.y,l.y,h.y,c.y,n,a,o),f.z=t(s.z,l.z,h.z,c.z,n,a,o),f},this.getControlPointsArray=function(){var e,t,r=this.points.length,i=[];for(e=0;r>e;e++)t=this.points[e],i[e]=[t.x,t.y,t.z];return i},this.getLength=function(e){var t,r,i,n,a=0,o=0,s=0,l=new THREE.Vector3,h=new THREE.Vector3,c=[],u=0;for(c[0]=0,e||(e=100),i=this.points.length*e,l.copy(this.points[0]),t=1;i>t;t++)r=t/i,n=this.getPoint(r),h.copy(n),u+=h.distanceTo(l),l.copy(n),a=(this.points.length-1)*r,o=Math.floor(a),o!=s&&(c[o]=u,s=o);return c[c.length]=u,{chunks:c,total:u}},this.reparametrizeByArcLength=function(e){var t,r,i,n,a,o,s,l,h=[],c=new THREE.Vector3,u=this.getLength();for(h.push(c.copy(this.points[0]).clone()),t=1;this.points.length>t;t++){for(o=u.chunks[t]-u.chunks[t-1],s=Math.ceil(e*o/u.total),n=(t-1)/(this.points.length-1),a=t/(this.points.length-1),r=1;s-1>r;r++)i=n+r*(1/s)*(a-n),l=this.getPoint(i),h.push(c.copy(l).clone());h.push(c.copy(this.points[t]).clone())}this.points=h}},THREE.Triangle=function(e,t,r){this.a=void 0!==e?e:new THREE.Vector3,this.b=void 0!==t?t:new THREE.Vector3,this.c=void 0!==r?r:new THREE.Vector3},THREE.Triangle.normal=function(e,t,r,i){var n=i||new THREE.Vector3;n.subVectors(r,t),THREE.Triangle.__v0.subVectors(e,t),n.cross(THREE.Triangle.__v0);var a=n.lengthSq();return a>0?n.multiplyScalar(1/Math.sqrt(a)):n.set(0,0,0)},THREE.Triangle.barycoordFromPoint=function(e,t,r,i,n){THREE.Triangle.__v0.subVectors(i,t),THREE.Triangle.__v1.subVectors(r,t),THREE.Triangle.__v2.subVectors(e,t);var a=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),o=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),s=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),l=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),h=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),c=a*l-o*o,u=n||new THREE.Vector3;if(0==c)return u.set(-2,-1,-1);var f=1/c,p=(l*s-o*h)*f,d=(a*h-o*s)*f;return u.set(1-p-d,d,p)},THREE.Triangle.containsPoint=function(e,t,r,i){var n=THREE.Triangle.barycoordFromPoint(e,t,r,i,THREE.Triangle.__v3);return n.x>=0&&n.y>=0&&1>=n.x+n.y},THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,t,r){return this.a.copy(e),this.b.copy(t),this.c.copy(r),this},setFromPointsAndIndices:function(e,t,r,i){return this.a.copy(e[t]),this.b.copy(e[r]),this.c.copy(e[i]),this},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){return THREE.Triangle.__v0.subVectors(this.c,this.b),THREE.Triangle.__v1.subVectors(this.a,this.b),.5*THREE.Triangle.__v0.cross(THREE.Triangle.__v1).length()},midpoint:function(e){var t=e||new THREE.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return THREE.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new THREE.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return THREE.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return THREE.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}},THREE.Triangle.__v0=new THREE.Vector3,THREE.Triangle.__v1=new THREE.Vector3,THREE.Triangle.__v2=new THREE.Vector3,THREE.Triangle.__v3=new THREE.Vector3,THREE.Vertex=function(e){return console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead."),e},THREE.UV=function(e,t){return console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead."),new THREE.Vector2(e,t)},THREE.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},THREE.Clock.prototype.start=function(){this.startTime=Date.now(),this.oldTime=this.startTime,this.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=Date.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e},THREE.EventDispatcher=function(){var e={};this.addEventListener=function(t,r){void 0===e[t]&&(e[t]=[]),-1===e[t].indexOf(r)&&e[t].push(r)},this.removeEventListener=function(t,r){var i=e[t].indexOf(r);-1!==i&&e[t].splice(i,1)},this.dispatchEvent=function(t){var r=e[t.type];if(void 0!==r){t.target=this;for(var i=0,n=r.length;n>i;i++)r[i].call(this,t)}}},function(e){e.Raycaster=function(t,r,i,n){this.ray=new e.Ray(t,r),this.ray.direction.length()>0&&this.ray.direction.normalize(),this.near=i||0,this.far=n||1/0};var t=new e.Sphere,r=new e.Ray,i=new e.Plane,n=new e.Vector3,a=new e.Matrix4,o=function(e,t){return e.distance-t.distance},s=function(o,s,l){if(o instanceof e.Particle){var h=s.ray.distanceToPoint(o.matrixWorld.getPosition());if(h>o.scale.x)return l;l.push({distance:h,point:o.position,face:null,object:o})}else if(o instanceof e.Mesh){if(t.set(o.matrixWorld.getPosition(),o.geometry.boundingSphere.radius*o.matrixWorld.getMaxScaleOnAxis()),!s.ray.isIntersectionSphere(t))return l;var c,u,f,p,d=o.geometry,m=d.vertices,E=o.material instanceof e.MeshFaceMaterial,g=E===!0?o.material.materials:null,v=o.material.side,y=s.precision;o.matrixRotationWorld.extractRotation(o.matrixWorld),a.getInverse(o.matrixWorld),r.copy(s.ray).transform(a);for(var T=0,R=d.faces.length;R>T;T++){var x=d.faces[T],H=E===!0?g[x.materialIndex]:o.material;if(void 0!==H){i.setFromNormalAndCoplanarPoint(x.normal,m[x.a]);var b=r.distanceToPlane(i);if(!(y>Math.abs(b)||0>b)){if(v=H.side,v!==e.DoubleSide){var w=r.direction.dot(i.normal);if(!(v===e.FrontSide?0>w:w>0))continue}if(!(s.near>b||b>s.far)){if(n=r.at(b,n),x instanceof e.Face3){if(c=m[x.a],u=m[x.b],f=m[x.c],!e.Triangle.containsPoint(n,c,u,f))continue}else{if(!(x instanceof e.Face4))throw Error("face type not supported");if(c=m[x.a],u=m[x.b],f=m[x.c],p=m[x.d],!e.Triangle.containsPoint(n,c,u,p)&&!e.Triangle.containsPoint(n,u,f,p))continue}l.push({distance:b,point:s.ray.at(b),face:x,faceIndex:T,object:o})}}}}}},l=function(e,t,r){for(var i=e.getDescendants(),n=0,a=i.length;a>n;n++)s(i[n],t,r)};e.Raycaster.prototype.precision=1e-4,e.Raycaster.prototype.set=function(e,t){this.ray.set(e,t),this.ray.direction.length()>0&&this.ray.direction.normalize()},e.Raycaster.prototype.intersectObject=function(e,t){var r=[];return t===!0&&l(e,this,r),s(e,this,r),r.sort(o),r},e.Raycaster.prototype.intersectObjects=function(e,t){for(var r=[],i=0,n=e.length;n>i;i++)s(e[i],this,r),t===!0&&l(e[i],this,r);return r.sort(o),r}}(THREE),THREE.Object3D=function(){this.id=THREE.Object3DIdCount++,this.name="",this.properties={},this.parent=void 0,this.children=[],this.up=new THREE.Vector3(0,1,0),this.position=new THREE.Vector3,this.rotation=new THREE.Vector3,this.eulerOrder=THREE.Object3D.defaultEulerOrder,this.scale=new THREE.Vector3(1,1,1),this.renderDepth=null,this.rotationAutoUpdate=!0,this.matrix=new THREE.Matrix4,this.matrixWorld=new THREE.Matrix4,this.matrixRotationWorld=new THREE.Matrix4,this.matrixAutoUpdate=!0,this.matrixWorldNeedsUpdate=!0,this.quaternion=new THREE.Quaternion,this.useQuaternion=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.scale.getScaleFromMatrix(this.matrix);var t=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(t,this.eulerOrder),this.position.getPositionFromMatrix(this.matrix)},translate:function(e,t){this.matrix.rotateAxis(t),this.position.add(t.multiplyScalar(e))},translateX:function(e){this.translate(e,this._vector.set(1,0,0))},translateY:function(e){this.translate(e,this._vector.set(0,1,0))},translateZ:function(e){this.translate(e,this._vector.set(0,0,1))},localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(e){return e.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(e){this.matrix.lookAt(e,this.position,this.up),this.rotationAutoUpdate&&(this.useQuaternion===!1?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(e){if(e===this)return console.warn("THREE.Object3D.add: An object can't be added as a child of itself."),void 0;if(e instanceof THREE.Object3D){void 0!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e);for(var t=this;void 0!==t.parent;)t=t.parent;void 0!==t&&t instanceof THREE.Scene&&t.__addObject(e)}},remove:function(e){var t=this.children.indexOf(e);if(-1!==t){e.parent=void 0,this.children.splice(t,1);for(var r=this;void 0!==r.parent;)r=r.parent;void 0!==r&&r instanceof THREE.Scene&&r.__removeObject(e)}},traverse:function(e){e(this);for(var t=0,r=this.children.length;r>t;t++)this.children[t].traverse(e)},getChildByName:function(e,t){for(var r=0,i=this.children.length;i>r;r++){var n=this.children[r];if(n.name===e)return n;if(t===!0&&(n=n.getChildByName(e,t),void 0!==n))return n}return void 0},getDescendants:function(e){void 0===e&&(e=[]),Array.prototype.push.apply(e,this.children);for(var t=0,r=this.children.length;r>t;t++)this.children[t].getDescendants(e);return e},updateMatrix:function(){this.matrix.setPosition(this.position),this.useQuaternion===!1?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion),(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);
for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},clone:function(e){void 0===e&&(e=new THREE.Object3D),e.name=this.name,e.up.copy(this.up),e.position.copy(this.position),e.rotation instanceof THREE.Vector3&&e.rotation.copy(this.rotation),e.eulerOrder=this.eulerOrder,e.scale.copy(this.scale),e.renderDepth=this.renderDepth,e.rotationAutoUpdate=this.rotationAutoUpdate,e.matrix.copy(this.matrix),e.matrixWorld.copy(this.matrixWorld),e.matrixRotationWorld.copy(this.matrixRotationWorld),e.matrixAutoUpdate=this.matrixAutoUpdate,e.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate,e.quaternion.copy(this.quaternion),e.useQuaternion=this.useQuaternion,e.visible=this.visible,e.castShadow=this.castShadow,e.receiveShadow=this.receiveShadow,e.frustumCulled=this.frustumCulled;for(var t=0;this.children.length>t;t++){var r=this.children[t];e.add(r.clone())}return e}},THREE.Object3D.__m1=new THREE.Matrix4,THREE.Object3D.defaultEulerOrder="XYZ",THREE.Object3DIdCount=0,THREE.Projector=function(){function e(){if(h===R){var e=new THREE.RenderableObject;return T.push(e),R++,h++,e}return T[h++]}function t(){if(u===H){var e=new THREE.RenderableVertex;return x.push(e),H++,u++,e}return x[u++]}function r(){if(p===w){var e=new THREE.RenderableFace3;return b.push(e),w++,p++,e}return b[p++]}function i(){if(d===S){var e=new THREE.RenderableFace4;return _.push(e),S++,d++,e}return _[d++]}function n(){if(E===C){var e=new THREE.RenderableLine;return M.push(e),C++,E++,e}return M[E++]}function a(){if(v===L){var e=new THREE.RenderableParticle;return A.push(e),L++,v++,e}return A[v++]}function o(e,t){return t.z-e.z}function s(e,t){var r=0,i=1,n=e.z+e.w,a=t.z+t.w,o=-e.z+e.w,s=-t.z+t.w;return n>=0&&a>=0&&o>=0&&s>=0?!0:0>n&&0>a||0>o&&0>s?!1:(0>n?r=Math.max(r,n/(n-a)):0>a&&(i=Math.min(i,n/(n-a))),0>o?r=Math.max(r,o/(o-s)):0>s&&(i=Math.min(i,o/(o-s))),r>i?!1:(e.lerp(t,r),t.lerp(e,1-i),!0))}var l,h,c,u,f,p,d,m,E,g,v,y,T=[],R=0,x=[],H=0,b=[],w=0,_=[],S=0,M=[],C=0,A=[],L=0,P={objects:[],sprites:[],lights:[],elements:[]},D=new THREE.Vector3,F=new THREE.Vector4,U=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),z=new THREE.Box3,B=Array(3),N=Array(4),I=new THREE.Matrix4,V=new THREE.Matrix4,O=new THREE.Matrix4,k=new THREE.Matrix3,G=new THREE.Matrix3,j=new THREE.Vector3,W=new THREE.Frustum,q=new THREE.Vector4,X=new THREE.Vector4;this.projectVector=function(e,t){return t.matrixWorldInverse.getInverse(t.matrixWorld),V.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),e.applyProjection(V)},this.unprojectVector=function(e,t){return t.projectionMatrixInverse.getInverse(t.projectionMatrix),V.multiplyMatrices(t.matrixWorld,t.projectionMatrixInverse),e.applyProjection(V)},this.pickingRay=function(e,t){e.z=-1;var r=new THREE.Vector3(e.x,e.y,1);return this.unprojectVector(e,t),this.unprojectVector(r,t),r.sub(e).normalize(),new THREE.Raycaster(e,r)};var Y=function(t,r){h=0,P.objects.length=0,P.sprites.length=0,P.lights.length=0;var i=function(t){for(var r=0,n=t.children.length;n>r;r++){var a=t.children[r];a.visible!==!1&&(a instanceof THREE.Light?P.lights.push(a):a instanceof THREE.Mesh||a instanceof THREE.Line?(a.frustumCulled===!1||W.intersectsObject(a)===!0)&&(l=e(),l.object=a,null!==a.renderDepth?l.z=a.renderDepth:(D.copy(a.matrixWorld.getPosition()),D.applyProjection(V),l.z=D.z),P.objects.push(l)):a instanceof THREE.Sprite||a instanceof THREE.Particle?(l=e(),l.object=a,null!==a.renderDepth?l.z=a.renderDepth:(D.copy(a.matrixWorld.getPosition()),D.applyProjection(V),l.z=D.z),P.sprites.push(l)):(l=e(),l.object=a,null!==a.renderDepth?l.z=a.renderDepth:(D.copy(a.matrixWorld.getPosition()),D.applyProjection(V),l.z=D.z),P.objects.push(l)),i(a))}};return i(t),r===!0&&P.objects.sort(o),P};this.projectScene=function(e,l,h,T){var R,H,b,w,_,S,M,C,A,L,D,K,J,Q,$,Z,et,tt,rt,it,nt,at,ot,st,lt,ht,ct=!1;for(p=0,d=0,E=0,v=0,P.elements.length=0,e.updateMatrixWorld(),void 0===l.parent&&l.updateMatrixWorld(),I.copy(l.matrixWorldInverse.getInverse(l.matrixWorld)),V.multiplyMatrices(l.projectionMatrix,I),G.getInverse(I),G.transpose(),W.setFromMatrix(V),P=Y(e,h),R=0,H=P.objects.length;H>R;R++)if(J=P.objects[R].object,y=J.matrixWorld,u=0,J instanceof THREE.Mesh){for(Q=J.geometry,$=Q.vertices,Z=Q.faces,rt=Q.faceVertexUvs,k.getInverse(y),k.transpose(),lt=J.material instanceof THREE.MeshFaceMaterial,ht=lt===!0?J.material:null,b=0,w=$.length;w>b;b++)c=t(),c.positionWorld.copy($[b]).applyMatrix4(y),c.positionScreen.copy(c.positionWorld).applyMatrix4(V),c.positionScreen.x/=c.positionScreen.w,c.positionScreen.y/=c.positionScreen.w,c.positionScreen.z/=c.positionScreen.w,c.visible=!(-1>c.positionScreen.x||c.positionScreen.x>1||-1>c.positionScreen.y||c.positionScreen.y>1||-1>c.positionScreen.z||c.positionScreen.z>1);for(_=0,S=Z.length;S>_;_++){et=Z[_];var ut=lt===!0?ht.materials[et.materialIndex]:J.material;if(void 0!==ut){var ft=ut.side;if(et instanceof THREE.Face3){if(nt=x[et.a],at=x[et.b],ot=x[et.c],B[0]=nt.positionScreen,B[1]=at.positionScreen,B[2]=ot.positionScreen,nt.visible!==!0&&at.visible!==!0&&ot.visible!==!0&&!U.isIntersectionBox(z.setFromPoints(B)))continue;if(ct=0>(ot.positionScreen.x-nt.positionScreen.x)*(at.positionScreen.y-nt.positionScreen.y)-(ot.positionScreen.y-nt.positionScreen.y)*(at.positionScreen.x-nt.positionScreen.x),ft!==THREE.DoubleSide&&ct!==(ft===THREE.FrontSide))continue;f=r(),f.v1.copy(nt),f.v2.copy(at),f.v3.copy(ot)}else if(et instanceof THREE.Face4){if(nt=x[et.a],at=x[et.b],ot=x[et.c],st=x[et.d],N[0]=nt.positionScreen,N[1]=at.positionScreen,N[2]=ot.positionScreen,N[3]=st.positionScreen,nt.visible!==!0&&at.visible!==!0&&ot.visible!==!0&&st.visible!==!0&&!U.isIntersectionBox(z.setFromPoints(N)))continue;if(ct=0>(st.positionScreen.x-nt.positionScreen.x)*(at.positionScreen.y-nt.positionScreen.y)-(st.positionScreen.y-nt.positionScreen.y)*(at.positionScreen.x-nt.positionScreen.x)||0>(at.positionScreen.x-ot.positionScreen.x)*(st.positionScreen.y-ot.positionScreen.y)-(at.positionScreen.y-ot.positionScreen.y)*(st.positionScreen.x-ot.positionScreen.x),ft!==THREE.DoubleSide&&ct!==(ft===THREE.FrontSide))continue;f=i(),f.v1.copy(nt),f.v2.copy(at),f.v3.copy(ot),f.v4.copy(st)}for(f.normalModel.copy(et.normal),ct!==!1||ft!==THREE.BackSide&&ft!==THREE.DoubleSide||f.normalModel.negate(),f.normalModel.applyMatrix3(k).normalize(),f.normalModelView.copy(f.normalModel).applyMatrix3(G),f.centroidModel.copy(et.centroid).applyMatrix4(y),tt=et.vertexNormals,M=0,C=tt.length;C>M;M++){var pt=f.vertexNormalsModel[M];pt.copy(tt[M]),ct!==!1||ft!==THREE.BackSide&&ft!==THREE.DoubleSide||pt.negate(),pt.applyMatrix3(k).normalize();var dt=f.vertexNormalsModelView[M];dt.copy(pt).applyMatrix3(G)}for(f.vertexNormalsLength=tt.length,A=0,L=rt.length;L>A;A++)if(it=rt[A][_],void 0!==it)for(D=0,K=it.length;K>D;D++)f.uvs[A][D]=it[D];f.color=et.color,f.material=ut,j.copy(f.centroidModel).applyProjection(V),f.z=j.z,P.elements.push(f)}}}else if(J instanceof THREE.Line){O.multiplyMatrices(V,y),$=J.geometry.vertices,nt=t(),nt.positionScreen.copy($[0]).applyMatrix4(O);var mt=J.type===THREE.LinePieces?2:1;for(b=1,w=$.length;w>b;b++)nt=t(),nt.positionScreen.copy($[b]).applyMatrix4(O),(b+1)%mt>0||(at=x[u-2],q.copy(nt.positionScreen),X.copy(at.positionScreen),s(q,X)===!0&&(q.multiplyScalar(1/q.w),X.multiplyScalar(1/X.w),m=n(),m.v1.positionScreen.copy(q),m.v2.positionScreen.copy(X),m.z=Math.max(q.z,X.z),m.material=J.material,P.elements.push(m)))}for(R=0,H=P.sprites.length;H>R;R++)J=P.sprites[R].object,y=J.matrixWorld,J instanceof THREE.Particle&&(F.set(y.elements[12],y.elements[13],y.elements[14],1),F.applyMatrix4(V),F.z/=F.w,F.z>0&&1>F.z&&(g=a(),g.object=J,g.x=F.x/F.w,g.y=F.y/F.w,g.z=F.z,g.rotation=J.rotation.z,g.scale.x=J.scale.x*Math.abs(g.x-(F.x+l.projectionMatrix.elements[0])/(F.w+l.projectionMatrix.elements[12])),g.scale.y=J.scale.y*Math.abs(g.y-(F.y+l.projectionMatrix.elements[5])/(F.w+l.projectionMatrix.elements[13])),g.material=J.material,P.elements.push(g)));return T===!0&&P.elements.sort(o),P}},THREE.Face3=function(e,t,r,i,n,a){this.a=e,this.b=t,this.c=r,this.normal=i instanceof THREE.Vector3?i:new THREE.Vector3,this.vertexNormals=i instanceof Array?i:[],this.color=n instanceof THREE.Color?n:new THREE.Color,this.vertexColors=n instanceof Array?n:[],this.vertexTangents=[],this.materialIndex=void 0!==a?a:0,this.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Face4=function(e,t,r,i,n,a,o){this.a=e,this.b=t,this.c=r,this.d=i,this.normal=n instanceof THREE.Vector3?n:new THREE.Vector3,this.vertexNormals=n instanceof Array?n:[],this.color=a instanceof THREE.Color?a:new THREE.Color,this.vertexColors=a instanceof Array?a:[],this.vertexTangents=[],this.materialIndex=void 0!==o?o:0,this.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal),e.color.copy(this.color),e.centroid.copy(this.centroid),e.materialIndex=this.materialIndex;var t,r;for(t=0,r=this.vertexNormals.length;r>t;t++)e.vertexNormals[t]=this.vertexNormals[t].clone();for(t=0,r=this.vertexColors.length;r>t;t++)e.vertexColors[t]=this.vertexColors[t].clone();for(t=0,r=this.vertexTangents.length;r>t;t++)e.vertexTangents[t]=this.vertexTangents[t].clone();return e}},THREE.Geometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.name="",this.vertices=[],this.colors=[],this.normals=[],this.faces=[],this.faceUvs=[[]],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphColors=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.dynamic=!0,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.tangentsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.buffersNeedUpdate=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(e){for(var t=(new THREE.Matrix3).getInverse(e).transpose(),r=0,i=this.vertices.length;i>r;r++){var n=this.vertices[r];n.applyMatrix4(e)}for(var r=0,i=this.faces.length;i>r;r++){var a=this.faces[r];a.normal.applyMatrix3(t).normalize();for(var o=0,s=a.vertexNormals.length;s>o;o++)a.vertexNormals[o].applyMatrix3(t).normalize();a.centroid.applyMatrix4(e)}},computeCentroids:function(){var e,t,r;for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],r.centroid.set(0,0,0),r instanceof THREE.Face3?(r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.divideScalar(3)):r instanceof THREE.Face4&&(r.centroid.add(this.vertices[r.a]),r.centroid.add(this.vertices[r.b]),r.centroid.add(this.vertices[r.c]),r.centroid.add(this.vertices[r.d]),r.centroid.divideScalar(4))},computeFaceNormals:function(){var e,t,r,i,n,a,o=new THREE.Vector3,s=new THREE.Vector3;for(e=0,t=this.faces.length;t>e;e++)r=this.faces[e],i=this.vertices[r.a],n=this.vertices[r.b],a=this.vertices[r.c],o.subVectors(a,n),s.subVectors(i,n),o.cross(s),o.normalize(),r.normal.copy(o)},computeVertexNormals:function(e){var t,r,i,n,a,o;if(void 0===this.__tmpVertices){for(this.__tmpVertices=Array(this.vertices.length),o=this.__tmpVertices,t=0,r=this.vertices.length;r>t;t++)o[t]=new THREE.Vector3;for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],a instanceof THREE.Face3?a.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:a instanceof THREE.Face4&&(a.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else for(o=this.__tmpVertices,t=0,r=this.vertices.length;r>t;t++)o[t].set(0,0,0);if(e){var s,l,h,c,u=new THREE.Vector3,f=new THREE.Vector3,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3;for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],a instanceof THREE.Face3?(s=this.vertices[a.a],l=this.vertices[a.b],h=this.vertices[a.c],u.subVectors(h,l),f.subVectors(s,l),u.cross(f),o[a.a].add(u),o[a.b].add(u),o[a.c].add(u)):a instanceof THREE.Face4&&(s=this.vertices[a.a],l=this.vertices[a.b],h=this.vertices[a.c],c=this.vertices[a.d],p.subVectors(c,l),f.subVectors(s,l),p.cross(f),o[a.a].add(p),o[a.b].add(p),o[a.d].add(p),d.subVectors(c,h),m.subVectors(l,h),d.cross(m),o[a.b].add(d),o[a.c].add(d),o[a.d].add(d))}else for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],a instanceof THREE.Face3?(o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal)):a instanceof THREE.Face4&&(o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal),o[a.d].add(a.normal));for(t=0,r=this.vertices.length;r>t;t++)o[t].normalize();for(i=0,n=this.faces.length;n>i;i++)a=this.faces[i],a instanceof THREE.Face3?(a.vertexNormals[0].copy(o[a.a]),a.vertexNormals[1].copy(o[a.b]),a.vertexNormals[2].copy(o[a.c])):a instanceof THREE.Face4&&(a.vertexNormals[0].copy(o[a.a]),a.vertexNormals[1].copy(o[a.b]),a.vertexNormals[2].copy(o[a.c]),a.vertexNormals[3].copy(o[a.d]))},computeMorphNormals:function(){var e,t,r,i,n;for(r=0,i=this.faces.length;i>r;r++)for(n=this.faces[r],n.__originalFaceNormal?n.__originalFaceNormal.copy(n.normal):n.__originalFaceNormal=n.normal.clone(),n.__originalVertexNormals||(n.__originalVertexNormals=[]),e=0,t=n.vertexNormals.length;t>e;e++)n.__originalVertexNormals[e]?n.__originalVertexNormals[e].copy(n.vertexNormals[e]):n.__originalVertexNormals[e]=n.vertexNormals[e].clone();var a=new THREE.Geometry;for(a.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o,s,l=this.morphNormals[e].faceNormals,h=this.morphNormals[e].vertexNormals;for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],o=new THREE.Vector3,s=n instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},l.push(o),h.push(s)}var c=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var o,s;for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],o=c.faceNormals[r],s=c.vertexNormals[r],o.copy(n.normal),n instanceof THREE.Face3?(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2])):(s.a.copy(n.vertexNormals[0]),s.b.copy(n.vertexNormals[1]),s.c.copy(n.vertexNormals[2]),s.d.copy(n.vertexNormals[3]))}for(r=0,i=this.faces.length;i>r;r++)n=this.faces[r],n.normal=n.__originalFaceNormal,n.vertexNormals=n.__originalVertexNormals},computeTangents:function(){function e(e,t,r,i,n,a,o){h=e.vertices[t],c=e.vertices[r],u=e.vertices[i],f=l[n],p=l[a],d=l[o],m=c.x-h.x,E=u.x-h.x,g=c.y-h.y,v=u.y-h.y,y=c.z-h.z,T=u.z-h.z,R=p.x-f.x,x=d.x-f.x,H=p.y-f.y,b=d.y-f.y,w=1/(R*b-x*H),L.set((b*m-H*E)*w,(b*g-H*v)*w,(b*y-H*T)*w),P.set((R*E-x*m)*w,(R*v-x*g)*w,(R*T-x*y)*w),C[t].add(L),C[r].add(L),C[i].add(L),A[t].add(P),A[r].add(P),A[i].add(P)}var t,r,i,n,a,o,s,l,h,c,u,f,p,d,m,E,g,v,y,T,R,x,H,b,w,_,S,M,C=[],A=[],L=new THREE.Vector3,P=new THREE.Vector3,D=new THREE.Vector3,F=new THREE.Vector3,U=new THREE.Vector3;for(i=0,n=this.vertices.length;n>i;i++)C[i]=new THREE.Vector3,A[i]=new THREE.Vector3;for(t=0,r=this.faces.length;r>t;t++)s=this.faces[t],l=this.faceVertexUvs[0][t],s instanceof THREE.Face3?e(this,s.a,s.b,s.c,0,1,2):s instanceof THREE.Face4&&(e(this,s.a,s.b,s.d,0,1,3),e(this,s.b,s.c,s.d,1,2,3));var z=["a","b","c","d"];for(t=0,r=this.faces.length;r>t;t++)for(s=this.faces[t],a=0;s.vertexNormals.length>a;a++)U.copy(s.vertexNormals[a]),o=s[z[a]],_=C[o],D.copy(_),D.sub(U.multiplyScalar(U.dot(_))).normalize(),F.crossVectors(s.vertexNormals[a],_),S=F.dot(A[o]),M=0>S?-1:1,s.vertexTangents[a]=new THREE.Vector4(D.x,D.y,D.z,M);this.hasTangents=!0},computeLineDistances:function(){for(var e=0,t=this.vertices,r=0,i=t.length;i>r;r++)r>0&&(e+=t[r].distanceTo(t[r-1])),this.lineDistances[r]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere),this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var e,t,r,i,n,a,o,s,l,h={},c=[],u=[],f=4,p=Math.pow(10,f);for(this.__tmpVertices=void 0,r=0,i=this.vertices.length;i>r;r++)e=this.vertices[r],t=[Math.round(e.x*p),Math.round(e.y*p),Math.round(e.z*p)].join("_"),void 0===h[t]?(h[t]=r,c.push(this.vertices[r]),u[r]=c.length-1):u[r]=u[h[t]];var d=[];for(r=0,i=this.faces.length;i>r;r++)if(n=this.faces[r],n instanceof THREE.Face3){n.a=u[n.a],n.b=u[n.b],n.c=u[n.c],a=[n.a,n.b,n.c];for(var m=-1,E=0;3>E;E++)if(a[E]==a[(E+1)%3]){m=E,d.push(r);break}}else if(n instanceof THREE.Face4){n.a=u[n.a],n.b=u[n.b],n.c=u[n.c],n.d=u[n.d],a=[n.a,n.b,n.c,n.d];for(var m=-1,E=0;4>E;E++)a[E]==a[(E+1)%4]&&(m>=0&&d.push(r),m=E);if(m>=0){a.splice(m,1);var g=new THREE.Face3(a[0],a[1],a[2],n.normal,n.color,n.materialIndex);for(o=0,s=this.faceVertexUvs.length;s>o;o++)l=this.faceVertexUvs[o][r],l&&l.splice(m,1);n.vertexNormals&&n.vertexNormals.length>0&&(g.vertexNormals=n.vertexNormals,g.vertexNormals.splice(m,1)),n.vertexColors&&n.vertexColors.length>0&&(g.vertexColors=n.vertexColors,g.vertexColors.splice(m,1)),this.faces[r]=g}}for(r=d.length-1;r>=0;r--)for(this.faces.splice(r,1),o=0,s=this.faceVertexUvs.length;s>o;o++)this.faceVertexUvs[o].splice(r,1);var v=this.vertices.length-c.length;return this.vertices=c,v},clone:function(){for(var e=new THREE.Geometry,t=this.vertices,r=0,i=t.length;i>r;r++)e.vertices.push(t[r].clone());for(var n=this.faces,r=0,i=n.length;i>r;r++)e.faces.push(n[r].clone());for(var a=this.faceVertexUvs[0],r=0,i=a.length;i>r;r++){for(var o=a[r],s=[],l=0,h=o.length;h>l;l++)s.push(new THREE.Vector2(o[l].x,o[l].y));e.faceVertexUvs[0].push(s)}return e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.GeometryIdCount=0,THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this),this.id=THREE.GeometryIdCount++,this.attributes={},this.dynamic=!1,this.offsets=[],this.boundingBox=null,this.boundingSphere=null,this.hasTangents=!1,this.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var t,r;if(this.attributes.position&&(t=this.attributes.position.array),this.attributes.normal&&(r=this.attributes.normal.array),void 0!==t&&(e.multiplyVector3Array(t),this.verticesNeedUpdate=!0),void 0!==r){var i=new THREE.Matrix3;i.getInverse(e).transpose(),i.multiplyVector3Array(r),this.normalizeNormals(),this.normalsNeedUpdate=!0}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var e=this.attributes.position.array;if(e){var t,r,i,n=this.boundingBox;e.length>=3&&(n.min.x=n.max.x=e[0],n.min.y=n.max.y=e[1],n.min.z=n.max.z=e[2]);for(var a=3,o=e.length;o>a;a+=3)t=e[a],r=e[a+1],i=e[a+2],n.min.x>t?n.min.x=t:t>n.max.x&&(n.max.x=t),n.min.y>r?n.min.y=r:r>n.max.y&&(n.max.y=r),n.min.z>i?n.min.z=i:i>n.max.z&&(n.max.z=i)}(void 0===e||0===e.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0))},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var e=this.attributes.position.array;if(e){for(var t,r,i,n,a=0,o=0,s=e.length;s>o;o+=3)r=e[o],i=e[o+1],n=e[o+2],t=r*r+i*i+n*n,t>a&&(a=t);this.boundingSphere.radius=Math.sqrt(a)}},computeVertexNormals:function(){if(this.attributes.position){var e,t,r,i,n=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(n),numItems:n};else for(e=0,t=this.attributes.normal.array.length;t>e;e++)this.attributes.normal.array[e]=0;var a,o,s,l,h,c,u=this.attributes.position.array,f=this.attributes.normal.array,p=new THREE.Vector3,d=new THREE.Vector3,m=new THREE.Vector3,E=new THREE.Vector3,g=new THREE.Vector3;if(this.attributes.index){var v=this.attributes.index.array,y=this.offsets;for(r=0,i=y.length;i>r;++r){var T=y[r].start,R=y[r].count,x=y[r].index;for(e=T,t=T+R;t>e;e+=3)a=x+v[e],o=x+v[e+1],s=x+v[e+2],l=u[3*a],h=u[3*a+1],c=u[3*a+2],p.set(l,h,c),l=u[3*o],h=u[3*o+1],c=u[3*o+2],d.set(l,h,c),l=u[3*s],h=u[3*s+1],c=u[3*s+2],m.set(l,h,c),E.subVectors(m,d),g.subVectors(p,d),E.cross(g),f[3*a]+=E.x,f[3*a+1]+=E.y,f[3*a+2]+=E.z,f[3*o]+=E.x,f[3*o+1]+=E.y,f[3*o+2]+=E.z,f[3*s]+=E.x,f[3*s+1]+=E.y,f[3*s+2]+=E.z}}else for(e=0,t=u.length;t>e;e+=9)l=u[e],h=u[e+1],c=u[e+2],p.set(l,h,c),l=u[e+3],h=u[e+4],c=u[e+5],d.set(l,h,c),l=u[e+6],h=u[e+7],c=u[e+8],m.set(l,h,c),E.subVectors(m,d),g.subVectors(p,d),E.cross(g),f[e]=E.x,f[e+1]=E.y,f[e+2]=E.z,f[e+3]=E.x,f[e+4]=E.y,f[e+5]=E.z,f[e+6]=E.x,f[e+7]=E.y,f[e+8]=E.z;this.normalizeNormals(),this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var e,t,r,i,n=this.attributes.normal.array,a=0,o=n.length;o>a;a+=3)e=n[a],t=n[a+1],r=n[a+2],i=1/Math.sqrt(e*e+t*t+r*r),n[a]*=i,n[a+1]*=i,n[a+2]*=i},computeTangents:function(){function e(e,t,r){f=i[3*e],p=i[3*e+1],d=i[3*e+2],m=i[3*t],E=i[3*t+1],g=i[3*t+2],v=i[3*r],y=i[3*r+1],T=i[3*r+2],R=a[2*e],x=a[2*e+1],H=a[2*t],b=a[2*t+1],w=a[2*r],_=a[2*r+1],S=m-f,M=v-f,C=E-p,A=y-p,L=g-d,P=T-d,D=H-R,F=w-R,U=b-x,z=_-x,B=1/(D*z-F*U),W.set((z*S-U*M)*B,(z*C-U*A)*B,(z*L-U*P)*B),q.set((D*M-F*S)*B,(D*A-F*C)*B,(D*P-F*L)*B),h[e].add(W),h[t].add(W),h[r].add(W),c[e].add(q),c[t].add(q),c[r].add(q)}function t(e){rt.x=n[3*e],rt.y=n[3*e+1],rt.z=n[3*e+2],it.copy(rt),$=h[e],et.copy($),et.sub(rt.multiplyScalar(rt.dot($))).normalize(),tt.crossVectors(it,$),Z=tt.dot(c[e]),Q=0>Z?-1:1,l[4*e]=et.x,l[4*e+1]=et.y,l[4*e+2]=et.z,l[4*e+3]=Q}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv)return console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()"),void 0;var r=this.attributes.index.array,i=this.attributes.position.array,n=this.attributes.normal.array,a=this.attributes.uv.array,o=i.length/3;if(void 0===this.attributes.tangent){var s=4*o;this.attributes.tangent={itemSize:4,array:new Float32Array(s),numItems:s}}for(var l=this.attributes.tangent.array,h=[],c=[],u=0;o>u;u++)h[u]=new THREE.Vector3,c[u]=new THREE.Vector3;var f,p,d,m,E,g,v,y,T,R,x,H,b,w,_,S,M,C,A,L,P,D,F,U,z,B,N,I,V,O,k,G,j,W=new THREE.Vector3,q=new THREE.Vector3,X=this.offsets;for(V=0,O=X.length;O>V;++V){var Y=X[V].start,K=X[V].count,J=X[V].index;for(N=Y,I=Y+K;I>N;N+=3)k=J+r[N],G=J+r[N+1],j=J+r[N+2],e(k,G,j)}var Q,$,Z,et=new THREE.Vector3,tt=new THREE.Vector3,rt=new THREE.Vector3,it=new THREE.Vector3;for(V=0,O=X.length;O>V;++V){var Y=X[V].start,K=X[V].count,J=X[V].index;for(N=Y,I=Y+K;I>N;N+=3)k=J+r[N],G=J+r[N+1],j=J+r[N+2],t(k),t(G),t(j)}this.hasTangents=!0,this.tangentsNeedUpdate=!0},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.Camera=function(){THREE.Object3D.call(this),this.matrixWorldInverse=new THREE.Matrix4,this.projectionMatrix=new THREE.Matrix4,this.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=Object.create(THREE.Object3D.prototype),THREE.Camera.prototype.lookAt=function(e){this.matrix.lookAt(this.position,e,this.up),this.rotationAutoUpdate===!0&&(this.useQuaternion===!1?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},THREE.OrthographicCamera=function(e,t,r,i,n,a){THREE.Camera.call(this),this.left=e,this.right=t,this.top=r,this.bottom=i,this.near=void 0!==n?n:.1,this.far=void 0!==a?a:2e3,this.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype),THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)},THREE.PerspectiveCamera=function(e,t,r,i){THREE.Camera.call(this),this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==r?r:.1,this.far=void 0!==i?i:2e3,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype),THREE.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*THREE.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(e,t,r,i,n,a){this.fullWidth=e,this.fullHeight=t,this.x=r,this.y=i,this.width=n,this.height=a,this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var e=this.fullWidth/this.fullHeight,t=Math.tan(THREE.Math.degToRad(.5*this.fov))*this.near,r=-t,i=e*r,n=e*t,a=Math.abs(n-i),o=Math.abs(t-r);this.projectionMatrix.makeFrustum(i+this.x*a/this.fullWidth,i+(this.x+this.width)*a/this.fullWidth,t-(this.y+this.height)*o/this.fullHeight,t-this.y*o/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)},THREE.Light=function(e){THREE.Object3D.call(this),this.color=new THREE.Color(e)},THREE.Light.prototype=Object.create(THREE.Object3D.prototype),THREE.AmbientLight=function(e){THREE.Light.call(this,e)},THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype),THREE.AreaLight=function(e,t){THREE.Light.call(this,e),this.normal=new THREE.Vector3(0,-1,0),this.right=new THREE.Vector3(1,0,0),this.intensity=void 0!==t?t:1,this.width=1,this.height=1,this.constantAttenuation=1.5,this.linearAttenuation=.5,this.quadraticAttenuation=.1},THREE.AreaLight.prototype=Object.create(THREE.Light.prototype),THREE.DirectionalLight=function(e,t){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraLeft=-500,this.shadowCameraRight=500,this.shadowCameraTop=500,this.shadowCameraBottom=-500,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowCascade=!1,this.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),this.shadowCascadeCount=2,this.shadowCascadeBias=[0,0,0],this.shadowCascadeWidth=[512,512,512],this.shadowCascadeHeight=[512,512,512],this.shadowCascadeNearZ=[-1,.99,.998],this.shadowCascadeFarZ=[.99,.998,1],this.shadowCascadeArray=[],this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype),THREE.HemisphereLight=function(e,t,r){THREE.Light.call(this,e),this.groundColor=new THREE.Color(t),this.position=new THREE.Vector3(0,100,0),this.intensity=void 0!==r?r:1},THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype),THREE.PointLight=function(e,t,r){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,0,0),this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0},THREE.PointLight.prototype=Object.create(THREE.Light.prototype),THREE.SpotLight=function(e,t,r,i,n){THREE.Light.call(this,e),this.position=new THREE.Vector3(0,1,0),this.target=new THREE.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==r?r:0,this.angle=void 0!==i?i:Math.PI/2,this.exponent=void 0!==n?n:10,this.castShadow=!1,this.onlyShadow=!1,this.shadowCameraNear=50,this.shadowCameraFar=5e3,this.shadowCameraFov=50,this.shadowCameraVisible=!1,this.shadowBias=0,this.shadowDarkness=.5,this.shadowMapWidth=512,this.shadowMapHeight=512,this.shadowMap=null,this.shadowMapSize=null,this.shadowCamera=null,this.shadowMatrix=null},THREE.SpotLight.prototype=Object.create(THREE.Light.prototype),THREE.Loader=function(e){this.showStatus=e,this.statusDomElement=e?THREE.Loader.prototype.addStatusElement():null,this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var e=document.createElement("div");return e.style.position="absolute",e.style.right="0px",e.style.top="0px",e.style.fontSize="0.8em",e.style.textAlign="left",e.style.background="rgba(0,0,0,0.25)",e.style.color="#fff",e.style.width="120px",e.style.padding="0.5em 0.5em 0.5em 0.5em",e.style.zIndex=1e3,e.innerHTML="Loading ...",e},updateProgress:function(e){var t="Loaded ";t+=e.total?(100*e.loaded/e.total).toFixed(0)+"%":(e.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=t},extractUrlBase:function(e){var t=e.split("/");return t.pop(),(1>t.length?".":t.join("/"))+"/"},initMaterials:function(e,t){for(var r=[],i=0;e.length>i;++i)r[i]=THREE.Loader.prototype.createMaterial(e[i],t);return r},needsTangents:function(e){for(var t=0,r=e.length;r>t;t++){var i=e[t];if(i instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(e,t){function r(e){var t=Math.log(e)/Math.LN2;return Math.floor(t)==t}function i(e){var t=Math.log(e)/Math.LN2;return Math.pow(2,Math.round(t))}function n(e,t){var n=new Image;n.onload=function(){if(r(this.width)&&r(this.height))e.image=this;else{var t=i(this.width),n=i(this.height);e.image.width=t,e.image.height=n,e.image.getContext("2d").drawImage(this,0,0,t,n)}e.needsUpdate=!0},n.crossOrigin=s.crossOrigin,n.src=t}function a(e,r,i,a,o,s,l){var h=i.toLowerCase().endsWith(".dds"),c=t+"/"+i;if(h){var u=THREE.ImageUtils.loadCompressedTexture(c);e[r]=u}else{var u=document.createElement("canvas");e[r]=new THREE.Texture(u)}if(e[r].sourceFile=i,a&&(e[r].repeat.set(a[0],a[1]),1!==a[0]&&(e[r].wrapS=THREE.RepeatWrapping),1!==a[1]&&(e[r].wrapT=THREE.RepeatWrapping)),o&&e[r].offset.set(o[0],o[1]),s){var f={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==f[s[0]]&&(e[r].wrapS=f[s[0]]),void 0!==f[s[1]]&&(e[r].wrapT=f[s[1]])}l&&(e[r].anisotropy=l),h||n(e[r],c)}function o(e){return(255*e[0]<<16)+(255*e[1]<<8)+255*e[2]}var s=this,l="MeshLambertMaterial",h={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(e.shading){var c=e.shading.toLowerCase();"phong"===c?l="MeshPhongMaterial":"basic"===c&&(l="MeshBasicMaterial")}if(void 0!==e.blending&&void 0!==THREE[e.blending]&&(h.blending=THREE[e.blending]),(void 0!==e.transparent||1>e.opacity)&&(h.transparent=e.transparent),void 0!==e.depthTest&&(h.depthTest=e.depthTest),void 0!==e.depthWrite&&(h.depthWrite=e.depthWrite),void 0!==e.visible&&(h.visible=e.visible),void 0!==e.flipSided&&(h.side=THREE.BackSide),void 0!==e.doubleSided&&(h.side=THREE.DoubleSide),void 0!==e.wireframe&&(h.wireframe=e.wireframe),void 0!==e.vertexColors&&("face"===e.vertexColors?h.vertexColors=THREE.FaceColors:e.vertexColors&&(h.vertexColors=THREE.VertexColors)),e.colorDiffuse?h.color=o(e.colorDiffuse):e.DbgColor&&(h.color=e.DbgColor),e.colorSpecular&&(h.specular=o(e.colorSpecular)),e.colorAmbient&&(h.ambient=o(e.colorAmbient)),e.transparency&&(h.opacity=e.transparency),e.specularCoef&&(h.shininess=e.specularCoef),e.mapDiffuse&&t&&a(h,"map",e.mapDiffuse,e.mapDiffuseRepeat,e.mapDiffuseOffset,e.mapDiffuseWrap,e.mapDiffuseAnisotropy),e.mapLight&&t&&a(h,"lightMap",e.mapLight,e.mapLightRepeat,e.mapLightOffset,e.mapLightWrap,e.mapLightAnisotropy),e.mapBump&&t&&a(h,"bumpMap",e.mapBump,e.mapBumpRepeat,e.mapBumpOffset,e.mapBumpWrap,e.mapBumpAnisotropy),e.mapNormal&&t&&a(h,"normalMap",e.mapNormal,e.mapNormalRepeat,e.mapNormalOffset,e.mapNormalWrap,e.mapNormalAnisotropy),e.mapSpecular&&t&&a(h,"specularMap",e.mapSpecular,e.mapSpecularRepeat,e.mapSpecularOffset,e.mapSpecularWrap,e.mapSpecularAnisotropy),e.mapBumpScale&&(h.bumpScale=e.mapBumpScale),e.mapNormal){var u=THREE.ShaderLib.normalmap,f=THREE.UniformsUtils.clone(u.uniforms);f.tNormal.value=h.normalMap,e.mapNormalFactor&&f.uNormalScale.value.set(e.mapNormalFactor,e.mapNormalFactor),h.map&&(f.tDiffuse.value=h.map,f.enableDiffuse.value=!0),h.specularMap&&(f.tSpecular.value=h.specularMap,f.enableSpecular.value=!0),h.lightMap&&(f.tAO.value=h.lightMap,f.enableAO.value=!0),f.uDiffuseColor.value.setHex(h.color),f.uSpecularColor.value.setHex(h.specular),f.uAmbientColor.value.setHex(h.ambient),f.uShininess.value=h.shininess,void 0!==h.opacity&&(f.uOpacity.value=h.opacity);
var p={fragmentShader:u.fragmentShader,vertexShader:u.vertexShader,uniforms:f,lights:!0,fog:!0},d=new THREE.ShaderMaterial(p);h.transparent&&(d.transparent=!0)}else var d=new THREE[l](h);return void 0!==e.DbgName&&(d.name=e.DbgName),d}},THREE.ImageLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,t){var r=this;void 0===t&&(t=new Image),t.addEventListener("load",function(){r.dispatchEvent({type:"load",content:t})},!1),t.addEventListener("error",function(){r.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),r.crossOrigin&&(t.crossOrigin=r.crossOrigin),t.src=e}},THREE.JSONLoader=function(e){THREE.Loader.call(this,e),this.withCredentials=!1},THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype),THREE.JSONLoader.prototype.load=function(e,t,r){r=r&&"string"==typeof r?r:this.extractUrlBase(e),this.onLoadStart(),this.loadAjaxJSON(this,e,t,r)},THREE.JSONLoader.prototype.loadAjaxJSON=function(e,t,r,i,n){var a=new XMLHttpRequest,o=0;a.onreadystatechange=function(){if(a.readyState===a.DONE)if(200===a.status||0===a.status){if(a.responseText){var s=JSON.parse(a.responseText);e.createModel(s,r,i)}else console.warn("THREE.JSONLoader: ["+t+"] seems to be unreachable or file there is empty");e.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+t+"] ["+a.status+"]");else a.readyState===a.LOADING?n&&(0===o&&(o=a.getResponseHeader("Content-Length")),n({total:o,loaded:a.responseText.length})):a.readyState===a.HEADERS_RECEIVED&&(o=a.getResponseHeader("Content-Length"))},a.open("GET",t,!0),a.withCredentials=this.withCredentials,a.send(null)},THREE.JSONLoader.prototype.createModel=function(e,t,r){function i(t){function r(e,t){return e&1<<t}var i,n,a,s,l,h,c,u,f,p,d,m,E,g,v,y,T,R,x,H,b,w,_,S,M,C,A,L=e.faces,P=e.vertices,D=e.normals,F=e.colors,U=0;for(i=0;e.uvs.length>i;i++)e.uvs[i].length&&U++;for(i=0;U>i;i++)o.faceUvs[i]=[],o.faceVertexUvs[i]=[];for(s=0,l=P.length;l>s;)H=new THREE.Vector3,H.x=P[s++]*t,H.y=P[s++]*t,H.z=P[s++]*t,o.vertices.push(H);for(s=0,l=L.length;l>s;){if(d=L[s++],m=r(d,0),E=r(d,1),g=r(d,2),v=r(d,3),y=r(d,4),T=r(d,5),R=r(d,6),x=r(d,7),m?(b=new THREE.Face4,b.a=L[s++],b.b=L[s++],b.c=L[s++],b.d=L[s++],h=4):(b=new THREE.Face3,b.a=L[s++],b.b=L[s++],b.c=L[s++],h=3),E&&(p=L[s++],b.materialIndex=p),a=o.faces.length,g)for(i=0;U>i;i++)S=e.uvs[i],f=L[s++],C=S[2*f],A=S[2*f+1],o.faceUvs[i][a]=new THREE.Vector2(C,A);if(v)for(i=0;U>i;i++){for(S=e.uvs[i],M=[],n=0;h>n;n++)f=L[s++],C=S[2*f],A=S[2*f+1],M[n]=new THREE.Vector2(C,A);o.faceVertexUvs[i][a]=M}if(y&&(u=3*L[s++],_=new THREE.Vector3,_.x=D[u++],_.y=D[u++],_.z=D[u],b.normal=_),T)for(i=0;h>i;i++)u=3*L[s++],_=new THREE.Vector3,_.x=D[u++],_.y=D[u++],_.z=D[u],b.vertexNormals.push(_);if(R&&(c=L[s++],w=new THREE.Color(F[c]),b.color=w),x)for(i=0;h>i;i++)c=L[s++],w=new THREE.Color(F[c]),b.vertexColors.push(w);o.faces.push(b)}}function n(){var t,r,i,n,a,s,l,h,c,u;if(e.skinWeights)for(t=0,r=e.skinWeights.length;r>t;t+=2)i=e.skinWeights[t],n=e.skinWeights[t+1],a=0,s=0,o.skinWeights.push(new THREE.Vector4(i,n,a,s));if(e.skinIndices)for(t=0,r=e.skinIndices.length;r>t;t+=2)l=e.skinIndices[t],h=e.skinIndices[t+1],c=0,u=0,o.skinIndices.push(new THREE.Vector4(l,h,c,u));o.bones=e.bones,o.animation=e.animation}function a(t){if(void 0!==e.morphTargets){var r,i,n,a,s,l;for(r=0,i=e.morphTargets.length;i>r;r++)for(o.morphTargets[r]={},o.morphTargets[r].name=e.morphTargets[r].name,o.morphTargets[r].vertices=[],s=o.morphTargets[r].vertices,l=e.morphTargets[r].vertices,n=0,a=l.length;a>n;n+=3){var h=new THREE.Vector3;h.x=l[n]*t,h.y=l[n+1]*t,h.z=l[n+2]*t,s.push(h)}}if(void 0!==e.morphColors){var r,i,c,u,f,p,d;for(r=0,i=e.morphColors.length;i>r;r++)for(o.morphColors[r]={},o.morphColors[r].name=e.morphColors[r].name,o.morphColors[r].colors=[],f=o.morphColors[r].colors,p=e.morphColors[r].colors,c=0,u=p.length;u>c;c+=3)d=new THREE.Color(16755200),d.setRGB(p[c],p[c+1],p[c+2]),f.push(d)}}var o=new THREE.Geometry,s=void 0!==e.scale?1/e.scale:1;i(s),n(),a(s),o.computeCentroids(),o.computeFaceNormals();var l=this.initMaterials(e.materials,r);this.needsTangents(l)&&o.computeTangents(),t(o,l)},THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var e=this,t=0,r=0,i=function(){t++,e.dispatchEvent({type:"progress",loaded:t,total:r}),t===r&&e.dispatchEvent({type:"load"})};this.add=function(e){r++,e.addEventListener("load",i,!1)}},THREE.SceneLoader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){},this.callbackSync=function(){},this.callbackProgress=function(){},this.geometryHandlerMap={},this.hierarchyHandlerMap={},this.addGeometryHandler("ascii",THREE.JSONLoader)},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(e,t){var r=this,i=new XMLHttpRequest;i.onreadystatechange=function(){if(4===i.readyState)if(200===i.status||0===i.status){var n=JSON.parse(i.responseText);r.parse(n,t,e)}else console.error("THREE.SceneLoader: Couldn't load ["+e+"] ["+i.status+"]")},i.open("GET",e,!0),i.send(null)},THREE.SceneLoader.prototype.addGeometryHandler=function(e,t){this.geometryHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.addHierarchyHandler=function(e,t){this.hierarchyHandlerMap[e]={loaderClass:t}},THREE.SceneLoader.prototype.parse=function(e,t,r){function i(e,t){return"relativeToHTML"==t?e:M+"/"+e}function n(){a(_.scene,A.objects)}function a(e,t){var r,n,o,s,l,c;for(var u in t)if(void 0===_.objects[u]){var f=t[u],E=null;if(f.type&&f.type in S.hierarchyHandlerMap){if(void 0===f.loading){var g={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1},v={};for(var x in f)x in g||(v[x]=f[x]);d=_.materials[f.material],f.loading=!0;var H=S.hierarchyHandlerMap[f.type].loaderObject;H.options?H.load(i(f.url,A.urlBaseType),h(u,e,d,f)):H.load(i(f.url,A.urlBaseType),h(u,e,d,f),v)}}else if(void 0!==f.geometry){if(p=_.geometries[f.geometry]){var b=!1;if(d=_.materials[f.material],b=d instanceof THREE.ShaderMaterial,o=f.position,s=f.rotation,l=f.scale,r=f.matrix,c=f.quaternion,f.material||(d=new THREE.MeshFaceMaterial(_.face_materials[f.geometry])),d instanceof THREE.MeshFaceMaterial&&0===d.materials.length&&(d=new THREE.MeshFaceMaterial(_.face_materials[f.geometry])),d instanceof THREE.MeshFaceMaterial)for(var w=0;d.materials.length>w;w++)b=b||d.materials[w]instanceof THREE.ShaderMaterial;b&&p.computeTangents(),f.skin?E=new THREE.SkinnedMesh(p,d):f.morph?(E=new THREE.MorphAnimMesh(p,d),void 0!==f.duration&&(E.duration=f.duration),void 0!==f.time&&(E.time=f.time),void 0!==f.mirroredLoop&&(E.mirroredLoop=f.mirroredLoop),d.morphNormals&&p.computeMorphNormals()):E=new THREE.Mesh(p,d),E.name=u,r?(E.matrixAutoUpdate=!1,E.matrix.set(r[0],r[1],r[2],r[3],r[4],r[5],r[6],r[7],r[8],r[9],r[10],r[11],r[12],r[13],r[14],r[15])):(E.position.set(o[0],o[1],o[2]),c?(E.quaternion.set(c[0],c[1],c[2],c[3]),E.useQuaternion=!0):E.rotation.set(s[0],s[1],s[2]),E.scale.set(l[0],l[1],l[2])),E.visible=f.visible,E.castShadow=f.castShadow,E.receiveShadow=f.receiveShadow,e.add(E),_.objects[u]=E}}else"DirectionalLight"===f.type||"PointLight"===f.type||"AmbientLight"===f.type?(T=void 0!==f.color?f.color:16777215,R=void 0!==f.intensity?f.intensity:1,"DirectionalLight"===f.type?(o=f.direction,y=new THREE.DirectionalLight(T,R),y.position.set(o[0],o[1],o[2]),f.target&&(C.push({object:y,targetName:f.target}),y.target=null)):"PointLight"===f.type?(o=f.position,n=f.distance,y=new THREE.PointLight(T,R,n),y.position.set(o[0],o[1],o[2])):"AmbientLight"===f.type&&(y=new THREE.AmbientLight(T)),e.add(y),y.name=u,_.lights[u]=y,_.objects[u]=y):"PerspectiveCamera"===f.type||"OrthographicCamera"===f.type?("PerspectiveCamera"===f.type?m=new THREE.PerspectiveCamera(f.fov,f.aspect,f.near,f.far):"OrthographicCamera"===f.type&&(m=new THREE.OrthographicCamera(f.left,f.right,f.top,f.bottom,f.near,f.far)),o=f.position,m.position.set(o[0],o[1],o[2]),e.add(m),m.name=u,_.cameras[u]=m,_.objects[u]=m):(o=f.position,s=f.rotation,l=f.scale,c=f.quaternion,E=new THREE.Object3D,E.name=u,E.position.set(o[0],o[1],o[2]),c?(E.quaternion.set(c[0],c[1],c[2],c[3]),E.useQuaternion=!0):E.rotation.set(s[0],s[1],s[2]),E.scale.set(l[0],l[1],l[2]),E.visible=void 0!==f.visible?f.visible:!1,e.add(E),_.objects[u]=E,_.empties[u]=E);if(E){if(void 0!==f.properties)for(var M in f.properties){var L=f.properties[M];E.properties[M]=L}if(void 0!==f.groups)for(var w=0;f.groups.length>w;w++){var P=f.groups[w];void 0===_.groups[P]&&(_.groups[P]=[]),_.groups[P].push(u)}void 0!==f.children&&a(E,f.children)}}}function o(e,t,r){_.geometries[r]=e,_.face_materials[r]=t,n()}function s(e,t,r,i,a){var o=a.position,s=a.rotation,l=a.quaternion,h=a.scale;e.position.set(o[0],o[1],o[2]),l?(e.quaternion.set(l[0],l[1],l[2],l[3]),e.useQuaternion=!0):e.rotation.set(s[0],s[1],s[2]),e.scale.set(h[0],h[1],h[2]),i&&e.traverse(function(e){e.material=i});var c=void 0!==a.visible?a.visible:!0;e.traverse(function(e){e.visible=c}),r.add(e),e.name=t,_.objects[t]=e,n()}function l(e){return function(t,r){o(t,r,e),x-=1,S.onLoadComplete(),u()}}function h(e,t,r,i){return function(n){var a;a=n.content?n.content:n.dae?n.scene:n,s(a,e,t,r,i),x-=1,S.onLoadComplete(),u()}}function c(e){return function(t,r){_.geometries[e]=t,_.face_materials[e]=r}}function u(){var e={totalModels:b,totalTextures:w,loadedModels:b-x,loadedTextures:w-H};S.callbackProgress(e,_),S.onLoadProgress(),0===x&&0===H&&(f(),t(_))}function f(){for(var e=0;C.length>e;e++){var t=C[e],r=_.objects[t.targetName];r?t.object.target=r:(t.object.target=new THREE.Object3D,_.scene.add(t.object.target)),t.object.target.properties.targetInverse=t.object}}var p,d,m,E,g,v,y,T,R,x,H,b,w,_,S=this,M=THREE.Loader.prototype.extractUrlBase(r),C=[],A=e;for(var L in this.geometryHandlerMap){var P=this.geometryHandlerMap[L].loaderClass;this.geometryHandlerMap[L].loaderObject=new P}for(var L in this.hierarchyHandlerMap){var P=this.hierarchyHandlerMap[L].loaderClass;this.hierarchyHandlerMap[L].loaderObject=new P}if(x=0,H=0,_={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}},A.transform){var D=A.transform.position,F=A.transform.rotation,U=A.transform.scale;D&&_.scene.position.set(D[0],D[1],D[2]),F&&_.scene.rotation.set(F[0],F[1],F[2]),U&&_.scene.scale.set(U[0],U[1],U[2]),(D||F||U)&&(_.scene.updateMatrix(),_.scene.updateMatrixWorld())}var z,B,N=function(e){H-=e,u(),S.onLoadComplete()},I=function(e){return function(){N(e)}};for(z in A.fogs)B=A.fogs[z],"linear"===B.type?E=new THREE.Fog(0,B.near,B.far):"exp2"===B.type&&(E=new THREE.FogExp2(0,B.density)),v=B.color,E.color.setRGB(v[0],v[1],v[2]),_.fogs[z]=E;var V,O;for(V in A.geometries)O=A.geometries[V],O.type in this.geometryHandlerMap&&(x+=1,S.onLoadStart());var k,G;for(k in A.objects)G=A.objects[k],G.type&&G.type in this.hierarchyHandlerMap&&(x+=1,S.onLoadStart());b=x;for(V in A.geometries)if(O=A.geometries[V],"cube"===O.type)p=new THREE.CubeGeometry(O.width,O.height,O.depth,O.widthSegments,O.heightSegments,O.depthSegments),_.geometries[V]=p;else if("plane"===O.type)p=new THREE.PlaneGeometry(O.width,O.height,O.widthSegments,O.heightSegments),_.geometries[V]=p;else if("sphere"===O.type)p=new THREE.SphereGeometry(O.radius,O.widthSegments,O.heightSegments),_.geometries[V]=p;else if("cylinder"===O.type)p=new THREE.CylinderGeometry(O.topRad,O.botRad,O.height,O.radSegs,O.heightSegs),_.geometries[V]=p;else if("torus"===O.type)p=new THREE.TorusGeometry(O.radius,O.tube,O.segmentsR,O.segmentsT),_.geometries[V]=p;else if("icosahedron"===O.type)p=new THREE.IcosahedronGeometry(O.radius,O.subdivisions),_.geometries[V]=p;else if(O.type in this.geometryHandlerMap){var j={};for(var W in O)"type"!==W&&"url"!==W&&(j[W]=O[W]);var q=this.geometryHandlerMap[O.type].loaderObject;q.load(i(O.url,A.urlBaseType),l(V),j)}else if("embedded"===O.type){var X=A.embeds[O.id],Y="";if(X.metadata=A.metadata,X){var K=this.geometryHandlerMap.ascii.loaderObject;K.createModel(X,c(V),Y)}}var J,Q;for(J in A.textures)if(Q=A.textures[J],Q.url instanceof Array){H+=Q.url.length;for(var $=0;Q.url.length>$;$++)S.onLoadStart()}else H+=1,S.onLoadStart();w=H;for(J in A.textures){if(Q=A.textures[J],void 0!==Q.mapping&&void 0!==THREE[Q.mapping]&&(Q.mapping=new THREE[Q.mapping]),Q.url instanceof Array){for(var Z=Q.url.length,et=[],tt=0;Z>tt;tt++)et[tt]=i(Q.url[tt],A.urlBaseType);var rt=et[0].endsWith(".dds");g=rt?THREE.ImageUtils.loadCompressedTextureCube(et,Q.mapping,I(Z)):THREE.ImageUtils.loadTextureCube(et,Q.mapping,I(Z))}else{var rt=Q.url.toLowerCase().endsWith(".dds"),it=i(Q.url,A.urlBaseType),nt=I(1);if(g=rt?THREE.ImageUtils.loadCompressedTexture(it,Q.mapping,nt):THREE.ImageUtils.loadTexture(it,Q.mapping,nt),void 0!==THREE[Q.minFilter]&&(g.minFilter=THREE[Q.minFilter]),void 0!==THREE[Q.magFilter]&&(g.magFilter=THREE[Q.magFilter]),Q.anisotropy&&(g.anisotropy=Q.anisotropy),Q.repeat&&(g.repeat.set(Q.repeat[0],Q.repeat[1]),1!==Q.repeat[0]&&(g.wrapS=THREE.RepeatWrapping),1!==Q.repeat[1]&&(g.wrapT=THREE.RepeatWrapping)),Q.offset&&g.offset.set(Q.offset[0],Q.offset[1]),Q.wrap){var at={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};void 0!==at[Q.wrap[0]]&&(g.wrapS=at[Q.wrap[0]]),void 0!==at[Q.wrap[1]]&&(g.wrapT=at[Q.wrap[1]])}}_.textures[J]=g}var ot,st,lt;for(ot in A.materials){st=A.materials[ot];for(lt in st.parameters)if("envMap"===lt||"map"===lt||"lightMap"===lt||"bumpMap"===lt)st.parameters[lt]=_.textures[st.parameters[lt]];else if("shading"===lt)st.parameters[lt]="flat"===st.parameters[lt]?THREE.FlatShading:THREE.SmoothShading;else if("side"===lt)st.parameters[lt]="double"==st.parameters[lt]?THREE.DoubleSide:"back"==st.parameters[lt]?THREE.BackSide:THREE.FrontSide;else if("blending"===lt)st.parameters[lt]=st.parameters[lt]in THREE?THREE[st.parameters[lt]]:THREE.NormalBlending;else if("combine"===lt)st.parameters[lt]=st.parameters[lt]in THREE?THREE[st.parameters[lt]]:THREE.MultiplyOperation;else if("vertexColors"===lt)"face"==st.parameters[lt]?st.parameters[lt]=THREE.FaceColors:st.parameters[lt]&&(st.parameters[lt]=THREE.VertexColors);else if("wrapRGB"===lt){var ht=st.parameters[lt];st.parameters[lt]=new THREE.Vector3(ht[0],ht[1],ht[2])}if(void 0!==st.parameters.opacity&&1>st.parameters.opacity&&(st.parameters.transparent=!0),st.parameters.normalMap){var ct=THREE.ShaderLib.normalmap,ut=THREE.UniformsUtils.clone(ct.uniforms),ft=st.parameters.color,pt=st.parameters.specular,dt=st.parameters.ambient,mt=st.parameters.shininess;ut.tNormal.value=_.textures[st.parameters.normalMap],st.parameters.normalScale&&ut.uNormalScale.value.set(st.parameters.normalScale[0],st.parameters.normalScale[1]),st.parameters.map&&(ut.tDiffuse.value=st.parameters.map,ut.enableDiffuse.value=!0),st.parameters.envMap&&(ut.tCube.value=st.parameters.envMap,ut.enableReflection.value=!0,ut.uReflectivity.value=st.parameters.reflectivity),st.parameters.lightMap&&(ut.tAO.value=st.parameters.lightMap,ut.enableAO.value=!0),st.parameters.specularMap&&(ut.tSpecular.value=_.textures[st.parameters.specularMap],ut.enableSpecular.value=!0),st.parameters.displacementMap&&(ut.tDisplacement.value=_.textures[st.parameters.displacementMap],ut.enableDisplacement.value=!0,ut.uDisplacementBias.value=st.parameters.displacementBias,ut.uDisplacementScale.value=st.parameters.displacementScale),ut.uDiffuseColor.value.setHex(ft),ut.uSpecularColor.value.setHex(pt),ut.uAmbientColor.value.setHex(dt),ut.uShininess.value=mt,st.parameters.opacity&&(ut.uOpacity.value=st.parameters.opacity);var Et={fragmentShader:ct.fragmentShader,vertexShader:ct.vertexShader,uniforms:ut,lights:!0,fog:!0};d=new THREE.ShaderMaterial(Et)}else d=new THREE[st.type](st.parameters);_.materials[ot]=d}for(ot in A.materials)if(st=A.materials[ot],st.parameters.materials){for(var gt=[],tt=0;st.parameters.materials.length>tt;tt++){var vt=st.parameters.materials[tt];gt.push(_.materials[vt])}_.materials[ot].materials=gt}n(),_.cameras&&A.defaults.camera&&(_.currentCamera=_.cameras[A.defaults.camera]),_.fogs&&A.defaults.fog&&(_.scene.fog=_.fogs[A.defaults.fog]),S.callbackSync(_),u()},THREE.TextureLoader=function(){THREE.EventDispatcher.call(this),this.crossOrigin=null},THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var t=this,r=new Image;r.addEventListener("load",function(){var e=new THREE.Texture(r);e.needsUpdate=!0,t.dispatchEvent({type:"load",content:e})},!1),r.addEventListener("error",function(){t.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1),t.crossOrigin&&(r.crossOrigin=t.crossOrigin),r.src=e}},THREE.Material=function(){THREE.EventDispatcher.call(this),this.id=THREE.MaterialIdCount++,this.name="",this.side=THREE.FrontSide,this.opacity=1,this.transparent=!1,this.blending=THREE.NormalBlending,this.blendSrc=THREE.SrcAlphaFactor,this.blendDst=THREE.OneMinusSrcAlphaFactor,this.blendEquation=THREE.AddEquation,this.depthTest=!0,this.depthWrite=!0,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=!1,this.visible=!0,this.needsUpdate=!0},THREE.Material.prototype.setValues=function(e){if(void 0!==e)for(var t in e){var r=e[t];if(void 0!==r){if(t in this){var i=this[t];i instanceof THREE.Color&&r instanceof THREE.Color?i.copy(r):i instanceof THREE.Color?i.set(r):i instanceof THREE.Vector3&&r instanceof THREE.Vector3?i.copy(r):this[t]=r}}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},THREE.Material.prototype.clone=function(e){return void 0===e&&(e=new THREE.Material),e.name=this.name,e.side=this.side,e.opacity=this.opacity,e.transparent=this.transparent,e.blending=this.blending,e.blendSrc=this.blendSrc,e.blendDst=this.blendDst,e.blendEquation=this.blendEquation,e.depthTest=this.depthTest,e.depthWrite=this.depthWrite,e.polygonOffset=this.polygonOffset,e.polygonOffsetFactor=this.polygonOffsetFactor,e.polygonOffsetUnits=this.polygonOffsetUnits,e.alphaTest=this.alphaTest,e.overdraw=this.overdraw,e.visible=this.visible,e},THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.MaterialIdCount=0,THREE.LineBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineBasicMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.linecap=this.linecap,e.linejoin=this.linejoin,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.LineDashedMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype),THREE.LineDashedMaterial.prototype.clone=function(){var e=new THREE.LineDashedMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.linewidth=this.linewidth,e.scale=this.scale,e.dashSize=this.dashSize,e.gapSize=this.gapSize,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.MeshBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshBasicMaterial.prototype.clone=function(){var e=new THREE.MeshBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e},THREE.MeshLambertMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshLambertMaterial.prototype.clone=function(){var e=new THREE.MeshLambertMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshPhongMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.ambient=new THREE.Color(16777215),this.emissive=new THREE.Color(0),this.specular=new THREE.Color(1118481),this.shininess=30,this.metal=!1,this.perPixel=!0,this.wrapAround=!1,this.wrapRGB=new THREE.Vector3(1,1,1),this.map=null,this.lightMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new THREE.Vector2(1,1),this.specularMap=null,this.envMap=null,this.combine=THREE.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshPhongMaterial.prototype.clone=function(){var e=new THREE.MeshPhongMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.ambient.copy(this.ambient),e.emissive.copy(this.emissive),e.specular.copy(this.specular),e.shininess=this.shininess,e.metal=this.metal,e.perPixel=this.perPixel,e.wrapAround=this.wrapAround,e.wrapRGB.copy(this.wrapRGB),e.map=this.map,e.lightMap=this.lightMap,e.bumpMap=this.bumpMap,e.bumpScale=this.bumpScale,e.normalMap=this.normalMap,e.normalScale.copy(this.normalScale),e.specularMap=this.specularMap,e.envMap=this.envMap,e.combine=this.combine,e.reflectivity=this.reflectivity,e.refractionRatio=this.refractionRatio,e.fog=this.fog,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.wireframeLinecap=this.wireframeLinecap,e.wireframeLinejoin=this.wireframeLinejoin,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.MeshDepthMaterial=function(e){THREE.Material.call(this),this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshDepthMaterial.prototype.clone=function(){var e=new THREE.LineBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshNormalMaterial=function(e){THREE.Material.call(this,e),this.shading=THREE.FlatShading,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype),THREE.MeshNormalMaterial.prototype.clone=function(){var e=new THREE.MeshNormalMaterial;return THREE.Material.prototype.clone.call(this,e),e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e},THREE.MeshFaceMaterial=function(e){this.materials=e instanceof Array?e:[]},THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))},THREE.ParticleBasicMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=!1,this.fog=!0,this.setValues(e)},THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleBasicMaterial.prototype.clone=function(){var e=new THREE.ParticleBasicMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.size=this.size,e.sizeAttenuation=this.sizeAttenuation,e.vertexColors=this.vertexColors,e.fog=this.fog,e},THREE.ParticleCanvasMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.program=function(){},this.setValues(e)},THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ParticleCanvasMaterial.prototype.clone=function(){var e=new THREE.ParticleCanvasMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.program=this.program,e},THREE.ShaderMaterial=function(e){THREE.Material.call(this),this.fragmentShader="void main() {}",this.vertexShader="void main() {}",this.uniforms={},this.defines={},this.attributes=null,this.shading=THREE.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=THREE.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype),THREE.ShaderMaterial.prototype.clone=function(){var e=new THREE.ShaderMaterial;return THREE.Material.prototype.clone.call(this,e),e.fragmentShader=this.fragmentShader,e.vertexShader=this.vertexShader,e.uniforms=THREE.UniformsUtils.clone(this.uniforms),e.attributes=this.attributes,e.defines=this.defines,e.shading=this.shading,e.wireframe=this.wireframe,e.wireframeLinewidth=this.wireframeLinewidth,e.fog=this.fog,e.lights=this.lights,e.vertexColors=this.vertexColors,e.skinning=this.skinning,e.morphTargets=this.morphTargets,e.morphNormals=this.morphNormals,e},THREE.SpriteMaterial=function(e){THREE.Material.call(this),this.color=new THREE.Color(16777215),this.map=new THREE.Texture,this.useScreenCoordinates=!0,this.depthTest=!this.useScreenCoordinates,this.sizeAttenuation=!this.useScreenCoordinates,this.scaleByViewport=!this.sizeAttenuation,this.alignment=THREE.SpriteAlignment.center.clone(),this.fog=!1,this.uvOffset=new THREE.Vector2(0,0),this.uvScale=new THREE.Vector2(1,1),this.setValues(e),e=e||{},void 0===e.depthTest&&(this.depthTest=!this.useScreenCoordinates),void 0===e.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates),void 0===e.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)},THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype),THREE.SpriteMaterial.prototype.clone=function(){var e=new THREE.SpriteMaterial;return THREE.Material.prototype.clone.call(this,e),e.color.copy(this.color),e.map=this.map,e.useScreenCoordinates=this.useScreenCoordinates,e.sizeAttenuation=this.sizeAttenuation,e.scaleByViewport=this.scaleByViewport,e.alignment.copy(this.alignment),e.uvOffset.copy(this.uvOffset),e.uvScale.copy(this.uvScale),e.fog=this.fog,e},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Texture=function(e,t,r,i,n,a,o,s,l){THREE.EventDispatcher.call(this),this.id=THREE.TextureIdCount++,this.name="",this.image=e,this.mipmaps=[],this.mapping=void 0!==t?t:new THREE.UVMapping,this.wrapS=void 0!==r?r:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==i?i:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==n?n:THREE.LinearFilter,this.minFilter=void 0!==a?a:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==l?l:1,this.format=void 0!==o?o:THREE.RGBAFormat,this.type=void 0!==s?s:THREE.UnsignedByteType,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.needsUpdate=!1,this.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(e){return void 0===e&&(e=new THREE.Texture),e.image=this.image,e.mipmaps=this.mipmaps.slice(0),e.mapping=this.mapping,e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.format=this.format,e.type=this.type,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.generateMipmaps=this.generateMipmaps,e.premultiplyAlpha=this.premultiplyAlpha,e.flipY=this.flipY,e.unpackAlignment=this.unpackAlignment,e},dispose:function(){this.dispatchEvent({type:"dispose"})}},THREE.TextureIdCount=0,THREE.CompressedTexture=function(e,t,r,i,n,a,o,s,l,h,c){THREE.Texture.call(this,null,a,o,s,l,h,i,n,c),this.image={width:t,height:r},this.mipmaps=e,this.generateMipmaps=!1},THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype),THREE.CompressedTexture.prototype.clone=function(){var e=new THREE.CompressedTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.DataTexture=function(e,t,r,i,n,a,o,s,l,h,c){THREE.Texture.call(this,null,a,o,s,l,h,i,n,c),this.image={data:e,width:t,height:r}},THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype),THREE.DataTexture.prototype.clone=function(){var e=new THREE.DataTexture;return THREE.Texture.prototype.clone.call(this,e),e},THREE.Particle=function(e){THREE.Object3D.call(this),this.material=e},THREE.Particle.prototype=Object.create(THREE.Object3D.prototype),THREE.Particle.prototype.clone=function(e){return void 0===e&&(e=new THREE.Particle(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.ParticleSystem=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.ParticleBasicMaterial({color:16777215*Math.random()}),this.sortParticles=!1,this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.frustumCulled=!1},THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype),THREE.ParticleSystem.prototype.clone=function(e){return void 0===e&&(e=new THREE.ParticleSystem(this.geometry,this.material)),e.sortParticles=this.sortParticles,THREE.Object3D.prototype.clone.call(this,e),e},THREE.Line=function(e,t,r){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.LineBasicMaterial({color:16777215*Math.random()}),this.type=void 0!==r?r:THREE.LineStrip,this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=Object.create(THREE.Object3D.prototype),THREE.Line.prototype.clone=function(e){return void 0===e&&(e=new THREE.Line(this.geometry,this.material,this.type)),THREE.Object3D.prototype.clone.call(this,e),e
},THREE.Mesh=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=void 0!==t?t:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0}),void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())},THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype),THREE.Mesh.prototype.updateMorphTargets=function(){if(this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetForcedOrder=[],this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},THREE.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},THREE.Mesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.Mesh(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Bone=function(e){THREE.Object3D.call(this),this.skin=e,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=Object.create(THREE.Object3D.prototype),THREE.Bone.prototype.update=function(e,t){this.matrixAutoUpdate&&(t|=this.updateMatrix()),(t||this.matrixWorldNeedsUpdate)&&(e?this.skinMatrix.multiplyMatrices(e,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);var r,i=this.children.length;for(r=0;i>r;r++)this.children[r].update(this.skinMatrix,t)},THREE.SkinnedMesh=function(e,t,r){THREE.Mesh.call(this,e,t),this.useVertexTexture=void 0!==r?r:!0,this.identityMatrix=new THREE.Matrix4,this.bones=[],this.boneMatrices=[];var i,n,a,o,s,l;if(this.geometry&&void 0!==this.geometry.bones){for(i=0;this.geometry.bones.length>i;i++)a=this.geometry.bones[i],o=a.pos,s=a.rotq,l=a.scl,n=this.addBone(),n.name=a.name,n.position.set(o[0],o[1],o[2]),n.quaternion.set(s[0],s[1],s[2],s[3]),n.useQuaternion=!0,void 0!==l?n.scale.set(l[0],l[1],l[2]):n.scale.set(1,1,1);for(i=0;this.bones.length>i;i++)a=this.geometry.bones[i],n=this.bones[i],-1===a.parent?this.add(n):this.bones[a.parent].add(n);var h=this.bones.length;if(this.useVertexTexture){var c;c=h>256?64:h>64?32:h>16?16:8,this.boneTextureWidth=c,this.boneTextureHeight=c,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1}else this.boneMatrices=new Float32Array(16*h);this.pose()}},THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.SkinnedMesh.prototype.addBone=function(e){return void 0===e&&(e=new THREE.Bone(this)),this.bones.push(e),e},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++){var i=this.children[t];i instanceof THREE.Bone?i.update(this.identityMatrix,!1):i.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];for(var n=0,a=this.bones.length;a>n;n++){var o=new THREE.Matrix4;o.getInverse(this.bones[n].skinMatrix),this.boneInverses.push(o)}}for(var n=0,a=this.bones.length;a>n;n++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[n].skinMatrix,this.boneInverses[n]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*n);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)},THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;this.geometry.skinIndices.length>e;e++){var t=this.geometry.skinWeights[e],r=1/t.lengthManhattan();1/0!==r?t.multiplyScalar(r):t.set(1)}},THREE.SkinnedMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture)),THREE.Mesh.prototype.clone.call(this,e),e},THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4,THREE.MorphAnimMesh=function(e,t){THREE.Mesh.call(this,e,t),this.duration=1e3,this.mirroredLoop=!1,this.time=0,this.lastKeyframe=0,this.currentKeyframe=0,this.direction=1,this.directionBackwards=!1,this.setFrameRange(0,this.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphAnimMesh.prototype.setFrameRange=function(e,t){this.startKeyframe=e,this.endKeyframe=t,this.length=this.endKeyframe-this.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var e=this.geometry;e.animations||(e.animations={});for(var t,r=e.animations,i=/([a-z]+)(\d+)/,n=0,a=e.morphTargets.length;a>n;n++){var o=e.morphTargets[n],s=o.name.match(i);if(s&&s.length>1){var l=s[1];s[2],r[l]||(r[l]={start:1/0,end:-1/0});var h=r[l];h.start>n&&(h.start=n),n>h.end&&(h.end=n),t||(t=l)}}e.firstAnimation=t},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,t,r){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[e]={start:t,end:r}},THREE.MorphAnimMesh.prototype.playAnimation=function(e,t){var r=this.geometry.animations[e];r?(this.setFrameRange(r.start,r.end),this.duration=1e3*((r.end-r.start)/t),this.time=0):console.warn("animation["+e+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(e){var t=this.duration/this.length;this.time+=this.direction*e,this.mirroredLoop?(this.time>this.duration||0>this.time)&&(this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)):(this.time=this.time%this.duration,0>this.time&&(this.time+=this.duration));var r=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/t),0,this.length-1);r!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[r]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=r);var i=this.time%t/t;this.directionBackwards&&(i=1-i),this.morphTargetInfluences[this.currentKeyframe]=i,this.morphTargetInfluences[this.lastKeyframe]=1-i},THREE.MorphAnimMesh.prototype.clone=function(e){return void 0===e&&(e=new THREE.MorphAnimMesh(this.geometry,this.material)),e.duration=this.duration,e.mirroredLoop=this.mirroredLoop,e.time=this.time,e.lastKeyframe=this.lastKeyframe,e.currentKeyframe=this.currentKeyframe,e.direction=this.direction,e.directionBackwards=this.directionBackwards,THREE.Mesh.prototype.clone.call(this,e),e},THREE.Ribbon=function(e,t){THREE.Object3D.call(this),this.geometry=e,this.material=t},THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype),THREE.Ribbon.prototype.clone=function(e){return void 0===e&&(e=new THREE.Ribbon(this.geometry,this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=Object.create(THREE.Object3D.prototype),THREE.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var r=0;this.LODs.length>r&&!(this.LODs[r].visibleAtDistance>t);r++);this.LODs.splice(r,0,{visibleAtDistance:t,object3D:e}),this.add(e)},THREE.LOD.prototype.update=function(e){if(this.LODs.length>1){e.matrixWorldInverse.getInverse(e.matrixWorld);var t=e.matrixWorldInverse,r=-(t.elements[2]*this.matrixWorld.elements[12]+t.elements[6]*this.matrixWorld.elements[13]+t.elements[10]*this.matrixWorld.elements[14]+t.elements[14]);this.LODs[0].object3D.visible=!0;for(var i=1;this.LODs.length>i&&r>=this.LODs[i].visibleAtDistance;i++)this.LODs[i-1].object3D.visible=!1,this.LODs[i].object3D.visible=!0;for(;this.LODs.length>i;i++)this.LODs[i].object3D.visible=!1}},THREE.LOD.prototype.clone=function(){},THREE.Sprite=function(e){THREE.Object3D.call(this),this.material=void 0!==e?e:new THREE.SpriteMaterial,this.rotation3d=this.rotation,this.rotation=0},THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype),THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position),this.rotation3d.set(0,0,this.rotation),this.matrix.setRotationFromEuler(this.rotation3d),(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale),this.matrixWorldNeedsUpdate=!0},THREE.Sprite.prototype.clone=function(e){return void 0===e&&(e=new THREE.Sprite(this.material)),THREE.Object3D.prototype.clone.call(this,e),e},THREE.Scene=function(){THREE.Object3D.call(this),this.fog=null,this.overrideMaterial=null,this.matrixAutoUpdate=!1,this.__objects=[],this.__lights=[],this.__objectsAdded=[],this.__objectsRemoved=[]},THREE.Scene.prototype=Object.create(THREE.Object3D.prototype),THREE.Scene.prototype.__addObject=function(e){if(e instanceof THREE.Light)-1===this.__lights.indexOf(e)&&this.__lights.push(e),e.target&&void 0===e.target.parent&&this.add(e.target);else if(!(e instanceof THREE.Camera||e instanceof THREE.Bone)&&-1===this.__objects.indexOf(e)){this.__objects.push(e),this.__objectsAdded.push(e);var t=this.__objectsRemoved.indexOf(e);-1!==t&&this.__objectsRemoved.splice(t,1)}for(var r=0;e.children.length>r;r++)this.__addObject(e.children[r])},THREE.Scene.prototype.__removeObject=function(e){if(e instanceof THREE.Light){var t=this.__lights.indexOf(e);-1!==t&&this.__lights.splice(t,1)}else if(!(e instanceof THREE.Camera)){var t=this.__objects.indexOf(e);if(-1!==t){this.__objects.splice(t,1),this.__objectsRemoved.push(e);var r=this.__objectsAdded.indexOf(e);-1!==r&&this.__objectsAdded.splice(r,1)}}for(var i=0;e.children.length>i;i++)this.__removeObject(e.children[i])},THREE.Fog=function(e,t,r){this.name="",this.color=new THREE.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==r?r:1e3},THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)},THREE.FogExp2=function(e,t){this.name="",this.color=new THREE.Color(e),this.density=void 0!==t?t:25e-5},THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)},THREE.CanvasRenderer=function(e){function t(e){Z!==e&&(J.globalAlpha=e,Z=e)}function r(e){et!==e&&(e===THREE.NormalBlending?J.globalCompositeOperation="source-over":e===THREE.AdditiveBlending?J.globalCompositeOperation="lighter":e===THREE.SubtractiveBlending&&(J.globalCompositeOperation="darker"),et=e)}function i(e){it!==e&&(J.lineWidth=e,it=e)}function n(e){nt!==e&&(J.lineCap=e,nt=e)}function a(e){at!==e&&(J.lineJoin=e,at=e)}function o(e){tt!==e&&(J.strokeStyle=e,tt=e)}function s(e){rt!==e&&(J.fillStyle=e,rt=e)}console.log("THREE.CanvasRenderer",THREE.REVISION),e=e||{};var l,h,c,u,f,p,d,m,E,g,v,y,T,R,x,H,b,w,_,S,M,C,A,L,P,D,F,U,z,B,N,I,V,O,k,G,j,W,q,X=this,Y=new THREE.Projector,K=void 0!==e.canvas?e.canvas:document.createElement("canvas"),J=K.getContext("2d"),Q=new THREE.Color(0),$=0,Z=1,et=0,tt=null,rt=null,it=null,nt=null,at=null,ot=new THREE.RenderableVertex,st=new THREE.RenderableVertex,lt=new THREE.Color,ht=new THREE.Color,ct=new THREE.Color,ut=new THREE.Color,ft=new THREE.Color,pt=new THREE.Color,dt=new THREE.Color,mt=new THREE.Color,Et={},gt={},vt=new THREE.Box2,yt=new THREE.Box2,Tt=new THREE.Box2,Rt=!1,xt=new THREE.Color,Ht=new THREE.Color,bt=new THREE.Color,wt=(2*Math.PI,new THREE.Vector3),_t=16;O=document.createElement("canvas"),O.width=O.height=2,k=O.getContext("2d"),k.fillStyle="rgba(0,0,0,1)",k.fillRect(0,0,2,2),G=k.getImageData(0,0,2,2),j=G.data,W=document.createElement("canvas"),W.width=W.height=_t,q=W.getContext("2d"),q.translate(-_t/2,-_t/2),q.scale(_t,_t),_t--,this.domElement=K,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.sortObjects=!0,this.sortElements=!0,this.info={render:{vertices:0,faces:0}},this.supportsVertexTextures=function(){},this.setFaceCulling=function(){},this.setSize=function(e,t){u=e*this.devicePixelRatio,f=t*this.devicePixelRatio,p=Math.floor(u/2),d=Math.floor(f/2),K.width=u,K.height=f,K.style.width=e+"px",K.style.height=t+"px",vt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d)),yt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d)),Z=1,et=0,tt=null,rt=null,it=null,nt=null,at=null},this.setClearColor=function(e,t){Q.copy(e),$=void 0!==t?t:1,yt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d))},this.setClearColorHex=function(e,t){Q.setHex(e),$=void 0!==t?t:1,yt.set(new THREE.Vector2(-p,-d),new THREE.Vector2(p,d))},this.getMaxAnisotropy=function(){return 0},this.clear=function(){J.setTransform(1,0,0,-1,p,d),yt.empty()===!1&&(yt.intersect(vt),yt.expandByScalar(2),1>$&&J.clearRect(0|yt.min.x,0|yt.min.y,0|yt.max.x-yt.min.x,0|yt.max.y-yt.min.y),$>0&&(r(THREE.NormalBlending),t(1),s("rgba("+Math.floor(255*Q.r)+","+Math.floor(255*Q.g)+","+Math.floor(255*Q.b)+","+$+")"),J.fillRect(0|yt.min.x,0|yt.min.y,0|yt.max.x-yt.min.x,0|yt.max.y-yt.min.y)),yt.makeEmpty())},this.render=function(e,u){function f(){xt.setRGB(0,0,0),Ht.setRGB(0,0,0),bt.setRGB(0,0,0);for(var e=0,t=c.length;t>e;e++){var r=c[e],i=r.color;r instanceof THREE.AmbientLight?xt.add(i):r instanceof THREE.DirectionalLight?Ht.add(i):r instanceof THREE.PointLight&&bt.add(i)}}function K(e,t,r){for(var i=0,n=c.length;n>i;i++){var a=c[i];if(mt.copy(a.color),a instanceof THREE.DirectionalLight){var o=a.matrixWorld.getPosition().normalize(),s=t.dot(o);if(0>=s)continue;s*=a.intensity,r.add(mt.multiplyScalar(s))}else if(a instanceof THREE.PointLight){var o=a.matrixWorld.getPosition(),s=t.dot(wt.subVectors(o,e).normalize());if(0>=s)continue;if(s*=0==a.distance?1:1-Math.min(e.distanceTo(o)/a.distance,1),0==s)continue;s*=a.intensity,r.add(mt.multiplyScalar(s))}}}function Q(e,i,n){t(n.opacity),r(n.blending);var a,l,h,c,u,f,m;if(n instanceof THREE.ParticleBasicMaterial)if(null===n.map){if(h=i.object.scale.x,c=i.object.scale.y,h*=i.scale.x*p,c*=i.scale.y*d,Tt.min.set(e.x-h,e.y-c),Tt.max.set(e.x+h,e.y+c),vt.isIntersectionBox(Tt)===!1)return;s(n.color.getStyle()),J.save(),J.translate(e.x,e.y),J.rotate(-i.rotation),J.scale(h,c),J.fillRect(-1,-1,2,2),J.restore()}else{if(u=n.map.image,f=u.width>>1,m=u.height>>1,h=i.scale.x*p,c=i.scale.y*d,a=h*f,l=c*m,Tt.min.set(e.x-a,e.y-l),Tt.max.set(e.x+a,e.y+l),vt.isIntersectionBox(Tt)===!1)return;J.save(),J.translate(e.x,e.y),J.rotate(-i.rotation),J.scale(h,-c),J.translate(-f,-m),J.drawImage(u,0,0),J.restore()}else if(n instanceof THREE.ParticleCanvasMaterial){if(a=i.scale.x*p,l=i.scale.y*d,Tt.min.set(e.x-a,e.y-l),Tt.max.set(e.x+a,e.y+l),vt.isIntersectionBox(Tt)===!1)return;o(n.color.getStyle()),s(n.color.getStyle()),J.save(),J.translate(e.x,e.y),J.rotate(-i.rotation),J.scale(a,l),n.program(J),J.restore()}}function $(e,s,l,h){t(h.opacity),r(h.blending),J.beginPath(),J.moveTo(e.positionScreen.x,e.positionScreen.y),J.lineTo(s.positionScreen.x,s.positionScreen.y),h instanceof THREE.LineBasicMaterial&&(i(h.linewidth),n(h.linecap),a(h.linejoin),o(h.color.getStyle()),J.stroke(),Tt.expandByScalar(2*h.linewidth))}function Z(e,i,n,a,o,s,l,h){if(X.info.render.vertices+=3,X.info.render.faces++,t(h.opacity),r(h.blending),y=e.positionScreen.x,T=e.positionScreen.y,R=i.positionScreen.x,x=i.positionScreen.y,H=n.positionScreen.x,b=n.positionScreen.y,tt(y,T,R,x,H,b),(h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)&&null===h.map&&null===h.map)pt.copy(h.color),dt.copy(h.emissive),h.vertexColors===THREE.FaceColors&&pt.multiply(l.color),Rt===!0?h.wireframe===!1&&h.shading==THREE.SmoothShading&&3==l.vertexNormalsLength?(ht.copy(xt),ct.copy(xt),ut.copy(xt),K(l.v1.positionWorld,l.vertexNormalsModel[0],ht),K(l.v2.positionWorld,l.vertexNormalsModel[1],ct),K(l.v3.positionWorld,l.vertexNormalsModel[2],ut),ht.multiply(pt).add(dt),ct.multiply(pt).add(dt),ut.multiply(pt).add(dt),ft.addColors(ct,ut).multiplyScalar(.5),D=St(ht,ct,ut,ft),_t(y,T,R,x,H,b,0,0,1,0,0,1,D)):(lt.copy(xt),K(l.centroidModel,l.normalModel,lt),lt.multiply(pt).add(dt),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt)):h.wireframe===!0?it(h.color,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(h.color);else if(h instanceof THREE.MeshBasicMaterial||h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)null!==h.map?h.map.mapping instanceof THREE.UVMapping&&(F=l.uvs[0],at(y,T,R,x,H,b,F[a].x,F[a].y,F[o].x,F[o].y,F[s].x,F[s].y,h.map)):null!==h.envMap?h.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(wt.copy(l.vertexNormalsModelView[a]),U=.5*wt.x+.5,z=.5*wt.y+.5,wt.copy(l.vertexNormalsModelView[o]),B=.5*wt.x+.5,N=.5*wt.y+.5,wt.copy(l.vertexNormalsModelView[s]),I=.5*wt.x+.5,V=.5*wt.y+.5,at(y,T,R,x,H,b,U,z,B,N,I,V,h.envMap)):(lt.copy(h.color),h.vertexColors===THREE.FaceColors&&lt.multiply(l.color),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt));else if(h instanceof THREE.MeshDepthMaterial){L=u.near,P=u.far;var c;c=1-Mt(e.positionScreen.z*e.positionScreen.w,L,P),ht.setRGB(c,c,c),c=1-Mt(i.positionScreen.z*i.positionScreen.w,L,P),ct.setRGB(c,c,c),c=1-Mt(n.positionScreen.z*n.positionScreen.w,L,P),ut.setRGB(c,c,c),ft.addColors(ct,ut).multiplyScalar(.5),D=St(ht,ct,ut,ft),_t(y,T,R,x,H,b,0,0,1,0,0,1,D)}else if(h instanceof THREE.MeshNormalMaterial){var f;h.shading==THREE.FlatShading?(f=l.normalModelView,lt.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt)):h.shading==THREE.SmoothShading&&(f=l.vertexNormalsModelView[a],ht.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),f=l.vertexNormalsModelView[o],ct.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),f=l.vertexNormalsModelView[s],ut.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),ft.addColors(ct,ut).multiplyScalar(.5),D=St(ht,ct,ut,ft),_t(y,T,R,x,H,b,0,0,1,0,0,1,D))}}function et(e,i,n,a,o,s,l,h,c){if(X.info.render.vertices+=4,X.info.render.faces++,t(h.opacity),r(h.blending),void 0!==h.map&&null!==h.map||void 0!==h.envMap&&null!==h.envMap)return Z(e,i,a,0,1,3,l,h,c),Z(o,n,s,1,2,3,l,h,c),void 0;if(y=e.positionScreen.x,T=e.positionScreen.y,R=i.positionScreen.x,x=i.positionScreen.y,H=n.positionScreen.x,b=n.positionScreen.y,w=a.positionScreen.x,_=a.positionScreen.y,S=o.positionScreen.x,M=o.positionScreen.y,C=s.positionScreen.x,A=s.positionScreen.y,h instanceof THREE.MeshLambertMaterial||h instanceof THREE.MeshPhongMaterial)pt.copy(h.color),dt.copy(h.emissive),h.vertexColors===THREE.FaceColors&&pt.multiply(l.color),Rt===!0?h.wireframe===!1&&h.shading==THREE.SmoothShading&&4==l.vertexNormalsLength?(ht.copy(xt),ct.copy(xt),ut.copy(xt),ft.copy(xt),K(l.v1.positionWorld,l.vertexNormalsModel[0],ht),K(l.v2.positionWorld,l.vertexNormalsModel[1],ct),K(l.v4.positionWorld,l.vertexNormalsModel[3],ut),K(l.v3.positionWorld,l.vertexNormalsModel[2],ft),ht.multiply(pt).add(dt),ct.multiply(pt).add(dt),ut.multiply(pt).add(dt),ft.multiply(pt).add(dt),D=St(ht,ct,ut,ft),tt(y,T,R,x,w,_),_t(y,T,R,x,w,_,0,0,1,0,0,1,D),tt(S,M,H,b,C,A),_t(S,M,H,b,C,A,1,0,1,1,0,1,D)):(lt.copy(xt),K(l.centroidModel,l.normalModel,lt),lt.multiply(pt).add(dt),rt(y,T,R,x,H,b,w,_),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt)):(lt.addColors(pt,dt),rt(y,T,R,x,H,b,w,_),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt));else if(h instanceof THREE.MeshBasicMaterial)lt.copy(h.color),h.vertexColors===THREE.FaceColors&&lt.multiply(l.color),rt(y,T,R,x,H,b,w,_),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt);else if(h instanceof THREE.MeshNormalMaterial){var f;h.shading==THREE.FlatShading?(f=l.normalModelView,lt.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),rt(y,T,R,x,H,b,w,_),h.wireframe===!0?it(lt,h.wireframeLinewidth,h.wireframeLinecap,h.wireframeLinejoin):nt(lt)):h.shading==THREE.SmoothShading&&(f=l.vertexNormalsModelView[0],ht.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),f=l.vertexNormalsModelView[1],ct.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),f=l.vertexNormalsModelView[3],ut.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),f=l.vertexNormalsModelView[2],ft.setRGB(f.x,f.y,f.z).multiplyScalar(.5).addScalar(.5),D=St(ht,ct,ut,ft),tt(y,T,R,x,w,_),_t(y,T,R,x,w,_,0,0,1,0,0,1,D),tt(S,M,H,b,C,A),_t(S,M,H,b,C,A,1,0,1,1,0,1,D))}else h instanceof THREE.MeshDepthMaterial&&(L=u.near,P=u.far,ht.r=ht.g=ht.b=1-Mt(e.positionScreen.z*e.positionScreen.w,L,P),ct.r=ct.g=ct.b=1-Mt(i.positionScreen.z*i.positionScreen.w,L,P),ut.r=ut.g=ut.b=1-Mt(a.positionScreen.z*a.positionScreen.w,L,P),ft.r=ft.g=ft.b=1-Mt(n.positionScreen.z*n.positionScreen.w,L,P),D=St(ht,ct,ut,ft),tt(y,T,R,x,w,_),_t(y,T,R,x,w,_,0,0,1,0,0,1,D),tt(S,M,H,b,C,A),_t(S,M,H,b,C,A,1,0,1,1,0,1,D))}function tt(e,t,r,i,n,a){J.beginPath(),J.moveTo(e,t),J.lineTo(r,i),J.lineTo(n,a),J.closePath()}function rt(e,t,r,i,n,a,o,s){J.beginPath(),J.moveTo(e,t),J.lineTo(r,i),J.lineTo(n,a),J.lineTo(o,s),J.closePath()}function it(e,t,r,s){i(t),n(r),a(s),o(e.getStyle()),J.stroke(),Tt.expandByScalar(2*t)}function nt(e){s(e.getStyle()),J.fill()}function at(e,t,r,i,n,a,o,l,h,c,u,f,p){if(!(p instanceof THREE.DataTexture||void 0===p.image||0==p.image.width)){if(p.needsUpdate===!0){var d=p.wrapS==THREE.RepeatWrapping,m=p.wrapT==THREE.RepeatWrapping;Et[p.id]=J.createPattern(p.image,d===!0&&m===!0?"repeat":d===!0&&m===!1?"repeat-x":d===!1&&m===!0?"repeat-y":"no-repeat"),p.needsUpdate=!1}void 0===Et[p.id]?s("rgba(0,0,0,1)"):s(Et[p.id]);var E,g,v,y,T,R,x,H,b=p.offset.x/p.repeat.x,w=p.offset.y/p.repeat.y,_=p.image.width*p.repeat.x,S=p.image.height*p.repeat.y;if(o=(o+b)*_,l=(1-l+w)*S,h=(h+b)*_,c=(1-c+w)*S,u=(u+b)*_,f=(1-f+w)*S,r-=e,i-=t,n-=e,a-=t,h-=o,c-=l,u-=o,f-=l,x=h*f-u*c,0===x){if(void 0===gt[p.id]){var M=document.createElement("canvas");M.width=p.image.width,M.height=p.image.height;var C=M.getContext("2d");C.drawImage(p.image,0,0),gt[p.id]=C.getImageData(0,0,p.image.width,p.image.height).data}var A=gt[p.id],L=4*(Math.floor(o)+Math.floor(l)*p.image.width);return lt.setRGB(A[L]/255,A[L+1]/255,A[L+2]/255),nt(lt),void 0}H=1/x,E=(f*r-c*n)*H,g=(f*i-c*a)*H,v=(h*n-u*r)*H,y=(h*a-u*i)*H,T=e-E*o-v*l,R=t-g*o-y*l,J.save(),J.transform(E,g,v,y,T,R),J.fill(),J.restore()}}function _t(e,t,r,i,n,a,o,s,l,h,c,u,f){var p,d,m,E,g,v,y,T,R=f.width-1,x=f.height-1;o*=R,s*=x,l*=R,h*=x,c*=R,u*=x,r-=e,i-=t,n-=e,a-=t,l-=o,h-=s,c-=o,u-=s,y=l*u-c*h,T=1/y,p=(u*r-h*n)*T,d=(u*i-h*a)*T,m=(l*n-c*r)*T,E=(l*a-c*i)*T,g=e-p*o-m*s,v=t-d*o-E*s,J.save(),J.transform(p,d,m,E,g,v),J.clip(),J.drawImage(f,0,0),J.restore()}function St(e,t,r,i){return j[0]=0|255*e.r,j[1]=0|255*e.g,j[2]=0|255*e.b,j[4]=0|255*t.r,j[5]=0|255*t.g,j[6]=0|255*t.b,j[8]=0|255*r.r,j[9]=0|255*r.g,j[10]=0|255*r.b,j[12]=0|255*i.r,j[13]=0|255*i.g,j[14]=0|255*i.b,k.putImageData(G,0,0),q.drawImage(O,0,0),W}function Mt(e,t,r){var i=(e-t)/(r-t);return i*i*(3-2*i)}function Ct(e,t){var r,i=t.x-e.x,n=t.y-e.y,a=i*i+n*n;0!==a&&(r=1/Math.sqrt(a),i*=r,n*=r,t.x+=i,t.y+=n,e.x-=i,e.y-=n)}if(u instanceof THREE.Camera==!1)return console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera."),void 0;this.autoClear===!0&&this.clear(),J.setTransform(1,0,0,-1,p,d),X.info.render.vertices=0,X.info.render.faces=0,l=Y.projectScene(e,u,this.sortObjects,this.sortElements),h=l.elements,c=l.lights,Rt=c.length>0,Rt===!0&&f();for(var At=0,Lt=h.length;Lt>At;At++){var Pt=h[At],Dt=Pt.material;if(void 0!==Dt&&Dt.visible!==!1){if(Tt.makeEmpty(),Pt instanceof THREE.RenderableParticle)m=Pt,m.x*=p,m.y*=d,Q(m,Pt,Dt,e);else if(Pt instanceof THREE.RenderableLine)m=Pt.v1,E=Pt.v2,m.positionScreen.x*=p,m.positionScreen.y*=d,E.positionScreen.x*=p,E.positionScreen.y*=d,Tt.setFromPoints([m.positionScreen,E.positionScreen]),vt.isIntersectionBox(Tt)===!0&&$(m,E,Pt,Dt,e);else if(Pt instanceof THREE.RenderableFace3){if(m=Pt.v1,E=Pt.v2,g=Pt.v3,-1>m.positionScreen.z||m.positionScreen.z>1)continue;if(-1>E.positionScreen.z||E.positionScreen.z>1)continue;if(-1>g.positionScreen.z||g.positionScreen.z>1)continue;m.positionScreen.x*=p,m.positionScreen.y*=d,E.positionScreen.x*=p,E.positionScreen.y*=d,g.positionScreen.x*=p,g.positionScreen.y*=d,Dt.overdraw===!0&&(Ct(m.positionScreen,E.positionScreen),Ct(E.positionScreen,g.positionScreen),Ct(g.positionScreen,m.positionScreen)),Tt.setFromPoints([m.positionScreen,E.positionScreen,g.positionScreen]),Z(m,E,g,0,1,2,Pt,Dt,e)}else if(Pt instanceof THREE.RenderableFace4){if(m=Pt.v1,E=Pt.v2,g=Pt.v3,v=Pt.v4,-1>m.positionScreen.z||m.positionScreen.z>1)continue;if(-1>E.positionScreen.z||E.positionScreen.z>1)continue;if(-1>g.positionScreen.z||g.positionScreen.z>1)continue;if(-1>v.positionScreen.z||v.positionScreen.z>1)continue;m.positionScreen.x*=p,m.positionScreen.y*=d,E.positionScreen.x*=p,E.positionScreen.y*=d,g.positionScreen.x*=p,g.positionScreen.y*=d,v.positionScreen.x*=p,v.positionScreen.y*=d,ot.positionScreen.copy(E.positionScreen),st.positionScreen.copy(v.positionScreen),Dt.overdraw===!0&&(Ct(m.positionScreen,E.positionScreen),Ct(E.positionScreen,v.positionScreen),Ct(v.positionScreen,m.positionScreen),Ct(g.positionScreen,ot.positionScreen),Ct(g.positionScreen,st.positionScreen)),Tt.setFromPoints([m.positionScreen,E.positionScreen,g.positionScreen,v.positionScreen]),et(m,E,g,v,ot,st,Pt,Dt,e)}yt.union(Tt)}}J.setTransform(1,0,0,1,0,0)}},THREE.ShaderChunk={fog_pars_fragment:["#ifdef USE_FOG","uniform vec3 fogColor;","#ifdef FOG_EXP2","uniform float fogDensity;","#else","uniform float fogNear;","uniform float fogFar;","#endif","#endif"].join("\n"),fog_fragment:["#ifdef USE_FOG","float depth = gl_FragCoord.z / gl_FragCoord.w;","#ifdef FOG_EXP2","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","#else","float fogFactor = smoothstep( fogNear, fogFar, depth );","#endif","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","#endif"].join("\n"),envmap_pars_fragment:["#ifdef USE_ENVMAP","uniform float reflectivity;","uniform samplerCube envMap;","uniform float flipEnvMap;","uniform int combine;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","uniform bool useRefract;","uniform float refractionRatio;","#else","varying vec3 vReflect;","#endif","#endif"].join("\n"),envmap_fragment:["#ifdef USE_ENVMAP","vec3 reflectVec;","#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","reflectVec = refract( cameraToVertex, normal, refractionRatio );","} else { ","reflectVec = reflect( cameraToVertex, normal );","}","#else","reflectVec = vReflect;","#endif","#ifdef DOUBLE_SIDED","float flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );","vec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#else","vec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );","#endif","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","if ( combine == 1 ) {","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );","} else if ( combine == 2 ) {","gl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;","} else {","gl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );","}","#endif"].join("\n"),envmap_pars_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","varying vec3 vReflect;","uniform float refractionRatio;","uniform bool useRefract;","#endif"].join("\n"),worldpos_vertex:["#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )","#ifdef USE_SKINNING","vec4 worldPosition = modelMatrix * skinned;","#endif","#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );","#endif","#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","#endif","#endif"].join("\n"),envmap_vertex:["#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )","vec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;","worldNormal = normalize( worldNormal );","vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, worldNormal, refractionRatio );","} else {","vReflect = reflect( cameraToVertex, worldNormal );","}","#endif"].join("\n"),map_particle_pars_fragment:["#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_particle_fragment:["#ifdef USE_MAP","gl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );","#endif"].join("\n"),map_pars_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","uniform vec4 offsetRepeat;","#endif"].join("\n"),map_pars_fragment:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","varying vec2 vUv;","#endif","#ifdef USE_MAP","uniform sampler2D map;","#endif"].join("\n"),map_vertex:["#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )","vUv = uv * offsetRepeat.zw + offsetRepeat.xy;","#endif"].join("\n"),map_fragment:["#ifdef USE_MAP","vec4 texelColor = texture2D( map, vUv );","#ifdef GAMMA_INPUT","texelColor.xyz *= texelColor.xyz;","#endif","gl_FragColor = gl_FragColor * texelColor;","#endif"].join("\n"),lightmap_pars_fragment:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","uniform sampler2D lightMap;","#endif"].join("\n"),lightmap_pars_vertex:["#ifdef USE_LIGHTMAP","varying vec2 vUv2;","#endif"].join("\n"),lightmap_fragment:["#ifdef USE_LIGHTMAP","gl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );","#endif"].join("\n"),lightmap_vertex:["#ifdef USE_LIGHTMAP","vUv2 = uv2;","#endif"].join("\n"),bumpmap_pars_fragment:["#ifdef USE_BUMPMAP","uniform sampler2D bumpMap;","uniform float bumpScale;","vec2 dHdxy_fwd() {","vec2 dSTdx = dFdx( vUv );","vec2 dSTdy = dFdy( vUv );","float Hll = bumpScale * texture2D( bumpMap, vUv ).x;","float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;","float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;","return vec2( dBx, dBy );","}","vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {","vec3 vSigmaX = dFdx( surf_pos );","vec3 vSigmaY = dFdy( surf_pos );","vec3 vN = surf_norm;","vec3 R1 = cross( vSigmaY, vN );","vec3 R2 = cross( vN, vSigmaX );","float fDet = dot( vSigmaX, R1 );","vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );","return normalize( abs( fDet ) * surf_norm - vGrad );","}","#endif"].join("\n"),normalmap_pars_fragment:["#ifdef USE_NORMALMAP","uniform sampler2D normalMap;","uniform vec2 normalScale;","vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {","vec3 q0 = dFdx( eye_pos.xyz );","vec3 q1 = dFdy( eye_pos.xyz );","vec2 st0 = dFdx( vUv.st );","vec2 st1 = dFdy( vUv.st );","vec3 S = normalize(  q0 * st1.t - q1 * st0.t );","vec3 T = normalize( -q0 * st1.s + q1 * st0.s );","vec3 N = normalize( surf_norm );","vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;","mapN.xy = normalScale * mapN.xy;","mat3 tsn = mat3( S, T, N );","return normalize( tsn * mapN );","}","#endif"].join("\n"),specularmap_pars_fragment:["#ifdef USE_SPECULARMAP","uniform sampler2D specularMap;","#endif"].join("\n"),specularmap_fragment:["float specularStrength;","#ifdef USE_SPECULARMAP","vec4 texelSpecular = texture2D( specularMap, vUv );","specularStrength = texelSpecular.r;","#else","specularStrength = 1.0;","#endif"].join("\n"),lights_lambert_pars_vertex:["uniform vec3 ambient;","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif"].join("\n"),lights_lambert_vertex:["vLightFront = vec3( 0.0 );","#ifdef DOUBLE_SIDED","vLightBack = vec3( 0.0 );","#endif","transformedNormal = normalize( transformedNormal );","#if MAX_DIR_LIGHTS > 0","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, dirVector );","vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","directionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","directionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += directionalLightColor[ i ] * directionalLightWeighting;","#ifdef DOUBLE_SIDED","vLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;","#endif","}","#endif","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","pointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","pointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;","#ifdef DOUBLE_SIDED","vLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","float dotProduct = dot( transformedNormal, lVector );","vec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );","#ifdef DOUBLE_SIDED","vec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );","#endif","#endif","#ifdef WRAP_AROUND","vec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );","spotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );","#ifdef DOUBLE_SIDED","spotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );","#endif","#endif","vLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;","#ifdef DOUBLE_SIDED","vLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_HEMI_LIGHTS > 0","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( transformedNormal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","float hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;","vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","#ifdef DOUBLE_SIDED","vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );","#endif","}","#endif","vLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;","#ifdef DOUBLE_SIDED","vLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;","#endif"].join("\n"),lights_phong_pars_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif"].join("\n"),lights_phong_vertex:["#ifndef PHONG_PER_PIXEL","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#if MAX_SPOT_LIGHTS > 0","for( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","vSpotLight[ i ] = vec4( lVector, lDistance );","}","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","vWorldPosition = worldPosition.xyz;","#endif"].join("\n"),lights_phong_pars_fragment:["uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#else","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","#ifdef PHONG_PER_PIXEL","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#else","varying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];","#endif","#endif","#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )","varying vec3 vWorldPosition;","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;","varying vec3 vNormal;"].join("\n"),lights_phong_fragment:["vec3 normal = normalize( vNormal );","vec3 viewPosition = normalize( vViewPosition );","#ifdef DOUBLE_SIDED","normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );","#endif","#ifdef USE_NORMALMAP","normal = perturbNormal2Arb( -viewPosition, normal );","#elif defined( USE_BUMPMAP )","normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );","#endif","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse  = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vPointLight[ i ].xyz );","float lDistance = vPointLight[ i ].w;","#endif","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dotProduct, 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dotProduct, 0.0 );","#endif","pointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;","vec3 pointHalfVector = normalize( lVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;","#else","pointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse  = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","#ifdef PHONG_PER_PIXEL","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz + vViewPosition.xyz;","float lDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","#else","vec3 lVector = normalize( vSpotLight[ i ].xyz );","float lDistance = vSpotLight[ i ].w;","#endif","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","float dotProduct = dot( normal, lVector );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dotProduct, 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dotProduct, 0.0 );","#endif","spotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;","vec3 spotHalfVector = normalize( lVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;","#else","spotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse  = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, dirVector );","#ifdef WRAP_AROUND","float dirDiffuseWeightFull = max( dotProduct, 0.0 );","float dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dotProduct, 0.0 );","#endif","dirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += diffuse * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( shininess + 2.0001 ) / 8.0;","vec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;","#endif"].join("\n"),color_pars_fragment:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_fragment:["#ifdef USE_COLOR","gl_FragColor = gl_FragColor * vec4( vColor, opacity );","#endif"].join("\n"),color_pars_vertex:["#ifdef USE_COLOR","varying vec3 vColor;","#endif"].join("\n"),color_vertex:["#ifdef USE_COLOR","#ifdef GAMMA_INPUT","vColor = color * color;","#else","vColor = color;","#endif","#endif"].join("\n"),skinning_pars_vertex:["#ifdef USE_SKINNING","#ifdef BONE_TEXTURE","uniform sampler2D boneTexture;","mat4 getBoneMatrix( const in float i ) {","float j = i * 4.0;","float x = mod( j, N_BONE_PIXEL_X );","float y = floor( j / N_BONE_PIXEL_X );","const float dx = 1.0 / N_BONE_PIXEL_X;","const float dy = 1.0 / N_BONE_PIXEL_Y;","y = dy * ( y + 0.5 );","vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );","vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );","vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );","vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );","mat4 bone = mat4( v1, v2, v3, v4 );","return bone;","}","#else","uniform mat4 boneGlobalMatrices[ MAX_BONES ];","mat4 getBoneMatrix( const in float i ) {","mat4 bone = boneGlobalMatrices[ int(i) ];","return bone;","}","#endif","#endif"].join("\n"),skinbase_vertex:["#ifdef USE_SKINNING","mat4 boneMatX = getBoneMatrix( skinIndex.x );","mat4 boneMatY = getBoneMatrix( skinIndex.y );","#endif"].join("\n"),skinning_vertex:["#ifdef USE_SKINNING","#ifdef USE_MORPHTARGETS","vec4 skinVertex = vec4( morphed, 1.0 );","#else","vec4 skinVertex = vec4( position, 1.0 );","#endif","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","#endif"].join("\n"),morphtarget_pars_vertex:["#ifdef USE_MORPHTARGETS","#ifndef USE_MORPHNORMALS","uniform float morphTargetInfluences[ 8 ];","#else","uniform float morphTargetInfluences[ 4 ];","#endif","#endif"].join("\n"),morphtarget_vertex:["#ifdef USE_MORPHTARGETS","vec3 morphed = vec3( 0.0 );","morphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];","morphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];","morphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];","morphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];","#ifndef USE_MORPHNORMALS","morphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];","morphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];","morphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];","morphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];","#endif","morphed += position;","#endif"].join("\n"),default_vertex:["vec4 mvPosition;","#ifdef USE_SKINNING","mvPosition = modelViewMatrix * skinned;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( morphed, 1.0 );","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )","mvPosition = modelViewMatrix * vec4( position, 1.0 );","#endif","gl_Position = projectionMatrix * mvPosition;"].join("\n"),morphnormal_vertex:["#ifdef USE_MORPHNORMALS","vec3 morphedNormal = vec3( 0.0 );","morphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];","morphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];","morphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];","morphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];","morphedNormal += normal;","#endif"].join("\n"),skinnormal_vertex:["#ifdef USE_SKINNING","mat4 skinMatrix = skinWeight.x * boneMatX;","skinMatrix 	+= skinWeight.y * boneMatY;","#ifdef USE_MORPHNORMALS","vec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );","#else","vec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );","#endif","#endif"].join("\n"),defaultnormal_vertex:["vec3 objectNormal;","#ifdef USE_SKINNING","objectNormal = skinnedNormal.xyz;","#endif","#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )","objectNormal = morphedNormal;","#endif","#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )","objectNormal = normal;","#endif","#ifdef FLIP_SIDED","objectNormal = -objectNormal;","#endif","vec3 transformedNormal = normalMatrix * objectNormal;"].join("\n"),shadowmap_pars_fragment:["#ifdef USE_SHADOWMAP","uniform sampler2D shadowMap[ MAX_SHADOWS ];","uniform vec2 shadowMapSize[ MAX_SHADOWS ];","uniform float shadowDarkness[ MAX_SHADOWS ];","uniform float shadowBias[ MAX_SHADOWS ];","varying vec4 vShadowCoord[ MAX_SHADOWS ];","float unpackDepth( const in vec4 rgba_depth ) {","const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","float depth = dot( rgba_depth, bit_shift );","return depth;","}","#endif"].join("\n"),shadowmap_fragment:["#ifdef USE_SHADOWMAP","#ifdef SHADOWMAP_DEBUG","vec3 frustumColors[3];","frustumColors[0] = vec3( 1.0, 0.5, 0.0 );","frustumColors[1] = vec3( 0.0, 1.0, 0.8 );","frustumColors[2] = vec3( 0.0, 0.5, 1.0 );","#endif","#ifdef SHADOWMAP_CASCADE","int inFrustumCount = 0;","#endif","float fDepth;","vec3 shadowColor = vec3( 1.0 );","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;","bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );","bool inFrustum = all( inFrustumVec );","#ifdef SHADOWMAP_CASCADE","inFrustumCount += int( inFrustum );","bvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );","#else","bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );","#endif","bool frustumTest = all( frustumTestVec );","if ( frustumTest ) {","shadowCoord.z += shadowBias[ i ];","#if defined( SHADOWMAP_TYPE_PCF )","float shadow = 0.0;","const float shadowDelta = 1.0 / 9.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.25 * xPixelOffset;","float dy0 = -1.25 * yPixelOffset;","float dx1 = 1.25 * xPixelOffset;","float dy1 = 1.25 * yPixelOffset;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( fDepth < shadowCoord.z ) shadow += shadowDelta;","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#elif defined( SHADOWMAP_TYPE_PCF_SOFT )","float shadow = 0.0;","float xPixelOffset = 1.0 / shadowMapSize[ i ].x;","float yPixelOffset = 1.0 / shadowMapSize[ i ].y;","float dx0 = -1.0 * xPixelOffset;","float dy0 = -1.0 * yPixelOffset;","float dx1 = 1.0 * xPixelOffset;","float dy1 = 1.0 * yPixelOffset;","mat3 shadowKernel;","mat3 depthKernel;","depthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );","if ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;","else shadowKernel[0][0] = 0.0;","depthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );","if ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;","else shadowKernel[0][1] = 0.0;","depthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );","if ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;","else shadowKernel[0][2] = 0.0;","depthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );","if ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;","else shadowKernel[1][0] = 0.0;","depthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );","if ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;","else shadowKernel[1][1] = 0.0;","depthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );","if ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;","else shadowKernel[1][2] = 0.0;","depthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );","if ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;","else shadowKernel[2][0] = 0.0;","depthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );","if ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;","else shadowKernel[2][1] = 0.0;","depthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );","if ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;","else shadowKernel[2][2] = 0.0;","vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );","shadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );","shadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );","vec4 shadowValues;","shadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );","shadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );","shadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );","shadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );","shadow = dot( shadowValues, vec4( 1.0 ) );","shadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );","#else","vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );","float fDepth = unpackDepth( rgbaDepth );","if ( fDepth < shadowCoord.z )","shadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );","#endif","}","#ifdef SHADOWMAP_DEBUG","#ifdef SHADOWMAP_CASCADE","if ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];","#else","if ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];","#endif","#endif","}","#ifdef GAMMA_OUTPUT","shadowColor *= shadowColor;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * shadowColor;","#endif"].join("\n"),shadowmap_pars_vertex:["#ifdef USE_SHADOWMAP","varying vec4 vShadowCoord[ MAX_SHADOWS ];","uniform mat4 shadowMatrix[ MAX_SHADOWS ];","#endif"].join("\n"),shadowmap_vertex:["#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif"].join("\n"),alphatest_fragment:["#ifdef ALPHATEST","if ( gl_FragColor.a < ALPHATEST ) discard;","#endif"].join("\n"),linear_to_gamma_fragment:["#ifdef GAMMA_OUTPUT","gl_FragColor.xyz = sqrt( gl_FragColor.xyz );","#endif"].join("\n")},THREE.UniformsUtils={merge:function(e){var t,r,i,n={};
for(t=0;e.length>t;t++){i=this.clone(e[t]);for(r in i)n[r]=i[r]}return n},clone:function(e){var t,r,i,n={};for(t in e){n[t]={};for(r in e[t])i=e[t][r],n[t][r]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}return n}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","if ( mod( vLineDistance, totalSize ) > dashSize ) {","discard;","}","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:["void main() {","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;","void main() {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float color = 1.0 - smoothstep( mNear, mFar, depth );","gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;","void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vNormal = normalize( normalMatrix * normal );","gl_Position = projectionMatrix * mvPosition;","}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;","void main() {","gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );","}"].join("\n")},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:.98},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform vec2 uNormalScale;","uniform bool useRefract;","uniform float uRefractionRatio;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_HEMI_LIGHTS > 0","uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];","uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","#endif","#if MAX_SPOT_LIGHTS > 0","uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];","uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];","uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];","uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];","uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","#ifdef FLIP_SIDED","finalNormal = -finalNormal;","#endif","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 pointVector = lPosition.xyz + vViewPosition.xyz;","float pointDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","pointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );","pointVector = normalize( pointVector );","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_SPOT_LIGHTS > 0","vec3 spotDiffuse = vec3( 0.0 );","vec3 spotSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {","vec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );","vec3 spotVector = lPosition.xyz + vViewPosition.xyz;","float spotDistance = 1.0;","if ( spotLightDistance[ i ] > 0.0 )","spotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );","spotVector = normalize( spotVector );","float spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );","if ( spotEffect > spotLightAngleCos[ i ] ) {","spotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );","#ifdef WRAP_AROUND","float spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );","float spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );","vec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );","#else","float spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );","#endif","spotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;","vec3 spotHalfVector = normalize( spotVector + viewPosition );","float spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );","float spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );","spotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;","#else","spotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;","#endif","}","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","#if MAX_HEMI_LIGHTS > 0","vec3 hemiDiffuse  = vec3( 0.0 );","vec3 hemiSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {","vec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );","vec3 lVector = normalize( lDirection.xyz );","float dotProduct = dot( normal, lVector );","float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;","vec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );","hemiDiffuse += uDiffuseColor * hemiColor;","vec3 hemiHalfVectorSky = normalize( lVector + viewPosition );","float hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;","float hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );","vec3 lVectorGround = -lVector;","vec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );","float hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;","float hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float dotProductGround = dot( normal, lVectorGround );","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );","vec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );","hemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );","#else","hemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_HEMI_LIGHTS > 0","totalDiffuse += hemiDiffuse;","totalSpecular += hemiSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","#if MAX_SPOT_LIGHTS > 0","totalDiffuse += spotDiffuse;","totalSpecular += spotSpecular;","#endif","#ifdef METAL","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );","#else","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;","#endif","if ( enableReflection ) {","vec3 vReflect;","vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );","if ( useRefract ) {","vReflect = refract( cameraToVertex, normal, uRefractionRatio );","} else {","vReflect = reflect( cameraToVertex, normal );","}","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","uniform bool enableDisplacement;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","varying vec3 vWorldPosition;","varying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING","vNormal = normalize( normalMatrix * skinnedNormal.xyz );","vec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );","vTangent = normalize( normalMatrix * skinnedTangent.xyz );","#else","vNormal = normalize( normalMatrix * normal );","vTangent = normalize( normalMatrix * tangent.xyz );","#endif","vBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );","vUv = uv * uRepeat + uOffset;","vec3 displacedPosition;","#ifdef VERTEX_TEXTURES","if ( enableDisplacement ) {","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","displacedPosition = position + normalize( normal ) * df;","} else {","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","}","#else","#ifdef USE_SKINNING","vec4 skinVertex = vec4( position, 1.0 );","vec4 skinned  = boneMatX * skinVertex * skinWeight.x;","skinned 	  += boneMatY * skinVertex * skinWeight.y;","displacedPosition  = skinned.xyz;","#else","displacedPosition = position;","#endif","#endif","vec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );","vec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );","gl_Position = projectionMatrix * mvPosition;","vWorldPosition = worldPosition.xyz;","vViewPosition = -mvPosition.xyz;","#ifdef USE_SHADOWMAP","for( int i = 0; i < MAX_SHADOWS; i ++ ) {","vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;","}","#endif","}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;","void main() {","vec4 worldPosition = modelMatrix * vec4( position, 1.0 );","vWorldPosition = worldPosition.xyz;","gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;","void main() {","gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );","}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:["vec4 pack_depth( const in float depth ) {","const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","const vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","vec4 res = fract( depth * bit_shift );","res -= res.xxyz * bit_mask;","return res;","}","void main() {","gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","}"].join("\n")}},THREE.WebGLRenderer=function(e){function t(e){e.__webglVertexBuffer=Nt.createBuffer(),e.__webglColorBuffer=Nt.createBuffer(),Gt.info.memory.geometries++}function r(e){e.__webglVertexBuffer=Nt.createBuffer(),e.__webglColorBuffer=Nt.createBuffer(),e.__webglLineDistanceBuffer=Nt.createBuffer(),Gt.info.memory.geometries++}function i(e){e.__webglVertexBuffer=Nt.createBuffer(),e.__webglColorBuffer=Nt.createBuffer(),e.__webglNormalBuffer=Nt.createBuffer(),Gt.info.memory.geometries++}function n(e){e.__webglVertexBuffer=Nt.createBuffer(),e.__webglNormalBuffer=Nt.createBuffer(),e.__webglTangentBuffer=Nt.createBuffer(),e.__webglColorBuffer=Nt.createBuffer(),e.__webglUVBuffer=Nt.createBuffer(),e.__webglUV2Buffer=Nt.createBuffer(),e.__webglSkinIndicesBuffer=Nt.createBuffer(),e.__webglSkinWeightsBuffer=Nt.createBuffer(),e.__webglFaceBuffer=Nt.createBuffer(),e.__webglLineBuffer=Nt.createBuffer();var t,r;if(e.numMorphTargets)for(e.__webglMorphTargetsBuffers=[],t=0,r=e.numMorphTargets;r>t;t++)e.__webglMorphTargetsBuffers.push(Nt.createBuffer());if(e.numMorphNormals)for(e.__webglMorphNormalsBuffers=[],t=0,r=e.numMorphNormals;r>t;t++)e.__webglMorphNormalsBuffers.push(Nt.createBuffer());Gt.info.memory.geometries++}function a(e){if(e.__webglCustomAttributesList)for(var t in e.__webglCustomAttributesList)Nt.deleteBuffer(e.__webglCustomAttributesList[t].buffer)}function o(e,t){var r=e.vertices.length,i=t.material;if(i.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var n in i.attributes){var a=i.attributes[n];if(!a.__webglInitialized||a.createUniqueBuffers){a.__webglInitialized=!0;var o=1;"v2"===a.type?o=2:"v3"===a.type?o=3:"v4"===a.type?o=4:"c"===a.type&&(o=3),a.size=o,a.array=new Float32Array(r*o),a.buffer=Nt.createBuffer(),a.buffer.belongsToAttribute=n,a.needsUpdate=!0}e.__webglCustomAttributesList.push(a)}}}function s(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__sortArray=[],e.__webglParticleCount=r,o(e,t)}function l(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__lineDistanceArray=new Float32Array(1*r),e.__webglLineCount=r,o(e,t)}function h(e,t){var r=e.vertices.length;e.__vertexArray=new Float32Array(3*r),e.__colorArray=new Float32Array(3*r),e.__normalArray=new Float32Array(3*r),e.__webglVertexCount=r,o(e,t)}function c(e,t){var r=t.geometry,i=e.faces3,n=e.faces4,a=3*i.length+4*n.length,o=1*i.length+2*n.length,s=3*i.length+4*n.length,l=u(t,e),h=m(l),c=p(l),f=d(l);e.__vertexArray=new Float32Array(3*a),c&&(e.__normalArray=new Float32Array(3*a)),r.hasTangents&&(e.__tangentArray=new Float32Array(4*a)),f&&(e.__colorArray=new Float32Array(3*a)),h&&((r.faceUvs.length>0||r.faceVertexUvs.length>0)&&(e.__uvArray=new Float32Array(2*a)),(r.faceUvs.length>1||r.faceVertexUvs.length>1)&&(e.__uv2Array=new Float32Array(2*a))),t.geometry.skinWeights.length&&t.geometry.skinIndices.length&&(e.__skinIndexArray=new Float32Array(4*a),e.__skinWeightArray=new Float32Array(4*a)),e.__faceArray=new Uint16Array(3*o),e.__lineArray=new Uint16Array(2*s);var E,g;if(e.numMorphTargets)for(e.__morphTargetsArrays=[],E=0,g=e.numMorphTargets;g>E;E++)e.__morphTargetsArrays.push(new Float32Array(3*a));if(e.numMorphNormals)for(e.__morphNormalsArrays=[],E=0,g=e.numMorphNormals;g>E;E++)e.__morphNormalsArrays.push(new Float32Array(3*a));if(e.__webglFaceCount=3*o,e.__webglLineCount=2*s,l.attributes){void 0===e.__webglCustomAttributesList&&(e.__webglCustomAttributesList=[]);for(var v in l.attributes){var y=l.attributes[v],T={};for(var R in y)T[R]=y[R];if(!T.__webglInitialized||T.createUniqueBuffers){T.__webglInitialized=!0;var x=1;"v2"===T.type?x=2:"v3"===T.type?x=3:"v4"===T.type?x=4:"c"===T.type&&(x=3),T.size=x,T.array=new Float32Array(a*x),T.buffer=Nt.createBuffer(),T.buffer.belongsToAttribute=v,y.needsUpdate=!0,T.__original=y}e.__webglCustomAttributesList.push(T)}}e.__inittedArrays=!0}function u(e,t){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[t.materialIndex]:e.material}function f(e){return e&&void 0!==e.shading&&e.shading===THREE.SmoothShading}function p(e){return e instanceof THREE.MeshBasicMaterial&&!e.envMap||e instanceof THREE.MeshDepthMaterial?!1:f(e)?THREE.SmoothShading:THREE.FlatShading}function d(e){return e.vertexColors?e.vertexColors:!1}function m(e){return e.map||e.lightMap||e.bumpMap||e.normalMap||e.specularMap||e instanceof THREE.ShaderMaterial?!0:!1}function E(e){var t,r,i;for(t in e.attributes)i="index"===t?Nt.ELEMENT_ARRAY_BUFFER:Nt.ARRAY_BUFFER,r=e.attributes[t],r.buffer=Nt.createBuffer(),Nt.bindBuffer(i,r.buffer),Nt.bufferData(i,r.array,Nt.STATIC_DRAW)}function g(e,t,r){var i,n,a,o,s,l,h,c,u,f,p,d,m=e.vertices,E=m.length,g=e.colors,v=g.length,y=e.__vertexArray,T=e.__colorArray,R=e.__sortArray,x=e.verticesNeedUpdate,H=(e.elementsNeedUpdate,e.colorsNeedUpdate),b=e.__webglCustomAttributesList;
if(r.sortParticles){for(Tr.copy(yr),Tr.multiply(r.matrixWorld),i=0;E>i;i++)a=m[i],Rr.copy(a),Rr.applyProjection(Tr),R[i]=[Rr.z,i];for(R.sort(_),i=0;E>i;i++)a=m[R[i][1]],o=3*i,y[o]=a.x,y[o+1]=a.y,y[o+2]=a.z;for(n=0;v>n;n++)o=3*n,l=g[R[n][1]],T[o]=l.r,T[o+1]=l.g,T[o+2]=l.b;if(b)for(h=0,c=b.length;c>h;h++)if(d=b[h],void 0===d.boundTo||"vertices"===d.boundTo)if(o=0,f=d.value.length,1===d.size)for(u=0;f>u;u++)s=R[u][1],d.array[u]=d.value[s];else if(2===d.size)for(u=0;f>u;u++)s=R[u][1],p=d.value[s],d.array[o]=p.x,d.array[o+1]=p.y,o+=2;else if(3===d.size)if("c"===d.type)for(u=0;f>u;u++)s=R[u][1],p=d.value[s],d.array[o]=p.r,d.array[o+1]=p.g,d.array[o+2]=p.b,o+=3;else for(u=0;f>u;u++)s=R[u][1],p=d.value[s],d.array[o]=p.x,d.array[o+1]=p.y,d.array[o+2]=p.z,o+=3;else if(4===d.size)for(u=0;f>u;u++)s=R[u][1],p=d.value[s],d.array[o]=p.x,d.array[o+1]=p.y,d.array[o+2]=p.z,d.array[o+3]=p.w,o+=4}else{if(x)for(i=0;E>i;i++)a=m[i],o=3*i,y[o]=a.x,y[o+1]=a.y,y[o+2]=a.z;if(H)for(n=0;v>n;n++)l=g[n],o=3*n,T[o]=l.r,T[o+1]=l.g,T[o+2]=l.b;if(b)for(h=0,c=b.length;c>h;h++)if(d=b[h],d.needsUpdate&&(void 0===d.boundTo||"vertices"===d.boundTo))if(f=d.value.length,o=0,1===d.size)for(u=0;f>u;u++)d.array[u]=d.value[u];else if(2===d.size)for(u=0;f>u;u++)p=d.value[u],d.array[o]=p.x,d.array[o+1]=p.y,o+=2;else if(3===d.size)if("c"===d.type)for(u=0;f>u;u++)p=d.value[u],d.array[o]=p.r,d.array[o+1]=p.g,d.array[o+2]=p.b,o+=3;else for(u=0;f>u;u++)p=d.value[u],d.array[o]=p.x,d.array[o+1]=p.y,d.array[o+2]=p.z,o+=3;else if(4===d.size)for(u=0;f>u;u++)p=d.value[u],d.array[o]=p.x,d.array[o+1]=p.y,d.array[o+2]=p.z,d.array[o+3]=p.w,o+=4}if((x||r.sortParticles)&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,y,t)),(H||r.sortParticles)&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,T,t)),b)for(h=0,c=b.length;c>h;h++)d=b[h],(d.needsUpdate||r.sortParticles)&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,d.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,d.array,t))}function v(e,t){var r,i,n,a,o,s,l,h,c,u,f,p,d=e.vertices,m=e.colors,E=e.lineDistances,g=d.length,v=m.length,y=E.length,T=e.__vertexArray,R=e.__colorArray,x=e.__lineDistanceArray,H=e.verticesNeedUpdate,b=e.colorsNeedUpdate,w=e.lineDistancesNeedUpdate,_=e.__webglCustomAttributesList;if(H){for(r=0;g>r;r++)a=d[r],o=3*r,T[o]=a.x,T[o+1]=a.y,T[o+2]=a.z;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,T,t)}if(b){for(i=0;v>i;i++)s=m[i],o=3*i,R[o]=s.r,R[o+1]=s.g,R[o+2]=s.b;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,R,t)}if(w){for(n=0;y>n;n++)x[n]=E[n];Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglLineDistanceBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,x,t)}if(_)for(l=0,h=_.length;h>l;l++)if(p=_[l],p.needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo)){if(o=0,u=p.value.length,1===p.size)for(c=0;u>c;c++)p.array[c]=p.value[c];else if(2===p.size)for(c=0;u>c;c++)f=p.value[c],p.array[o]=f.x,p.array[o+1]=f.y,o+=2;else if(3===p.size)if("c"===p.type)for(c=0;u>c;c++)f=p.value[c],p.array[o]=f.r,p.array[o+1]=f.g,p.array[o+2]=f.b,o+=3;else for(c=0;u>c;c++)f=p.value[c],p.array[o]=f.x,p.array[o+1]=f.y,p.array[o+2]=f.z,o+=3;else if(4===p.size)for(c=0;u>c;c++)f=p.value[c],p.array[o]=f.x,p.array[o+1]=f.y,p.array[o+2]=f.z,p.array[o+3]=f.w,o+=4;Nt.bindBuffer(Nt.ARRAY_BUFFER,p.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,p.array,t)}}function y(e,t){var r,i,n,a,o,s,l,h,c,u,f,p,d,m=e.vertices,E=e.colors,g=e.normals,v=m.length,y=E.length,T=g.length,R=e.__vertexArray,x=e.__colorArray,H=e.__normalArray,b=e.verticesNeedUpdate,w=e.colorsNeedUpdate,_=e.normalsNeedUpdate,S=e.__webglCustomAttributesList;if(b){for(r=0;v>r;r++)a=m[r],o=3*r,R[o]=a.x,R[o+1]=a.y,R[o+2]=a.z;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,R,t)}if(w){for(i=0;y>i;i++)s=E[i],o=3*i,x[o]=s.r,x[o+1]=s.g,x[o+2]=s.b;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,x,t)}if(_){for(n=0;T>n;n++)l=g[n],o=3*n,H[o]=l.x,H[o+1]=l.y,H[o+2]=l.z;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglNormalBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,H,t)}if(S)for(h=0,c=S.length;c>h;h++)if(p=S[h],p.needsUpdate&&(void 0===p.boundTo||"vertices"===p.boundTo)){if(o=0,f=p.value.length,1===p.size)for(u=0;f>u;u++)p.array[u]=p.value[u];else if(2===p.size)for(u=0;f>u;u++)d=p.value[u],p.array[o]=d.x,p.array[o+1]=d.y,o+=2;else if(3===p.size)if("c"===p.type)for(u=0;f>u;u++)d=p.value[u],p.array[o]=d.r,p.array[o+1]=d.g,p.array[o+2]=d.b,o+=3;else for(u=0;f>u;u++)d=p.value[u],p.array[o]=d.x,p.array[o+1]=d.y,p.array[o+2]=d.z,o+=3;else if(4===p.size)for(u=0;f>u;u++)d=p.value[u],p.array[o]=d.x,p.array[o+1]=d.y,p.array[o+2]=d.z,p.array[o+3]=d.w,o+=4;Nt.bindBuffer(Nt.ARRAY_BUFFER,p.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,p.array,t)}}function T(e,t,r,i,n){if(e.__inittedArrays){var a,o,s,l,h,c,u,f,E,g,v,y,T,R,x,H,b,w,_,S,M,C,A,L,P,D,F,U,z,B,N,I,V,O,k,G,j,W,q,X,Y,K,J,Q,$,Z,et,tt,rt=p(n),it=d(n),nt=m(n),at=rt===THREE.SmoothShading,ot=0,st=0,lt=0,ht=0,ct=0,ut=0,ft=0,pt=0,dt=0,mt=0,Et=0,gt=0,vt=0,yt=e.__vertexArray,Tt=e.__uvArray,Rt=e.__uv2Array,xt=e.__normalArray,Ht=e.__tangentArray,bt=e.__colorArray,wt=e.__skinIndexArray,_t=e.__skinWeightArray,St=e.__morphTargetsArrays,Mt=e.__morphNormalsArrays,Ct=e.__webglCustomAttributesList,At=e.__faceArray,Lt=e.__lineArray,Pt=t.geometry,Dt=Pt.verticesNeedUpdate,Ft=Pt.elementsNeedUpdate,Ut=Pt.uvsNeedUpdate,zt=Pt.normalsNeedUpdate,Bt=Pt.tangentsNeedUpdate,It=Pt.colorsNeedUpdate,Vt=Pt.morphTargetsNeedUpdate,Ot=Pt.vertices,kt=e.faces3,Gt=e.faces4,jt=Pt.faces,Wt=Pt.faceVertexUvs[0],qt=Pt.faceVertexUvs[1],Xt=(Pt.colors,Pt.skinIndices),Yt=Pt.skinWeights,Kt=Pt.morphTargets,Jt=Pt.morphNormals;if(Dt){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],y=Ot[l.a],T=Ot[l.b],R=Ot[l.c],yt[st]=y.x,yt[st+1]=y.y,yt[st+2]=y.z,yt[st+3]=T.x,yt[st+4]=T.y,yt[st+5]=T.z,yt[st+6]=R.x,yt[st+7]=R.y,yt[st+8]=R.z,st+=9;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],y=Ot[l.a],T=Ot[l.b],R=Ot[l.c],x=Ot[l.d],yt[st]=y.x,yt[st+1]=y.y,yt[st+2]=y.z,yt[st+3]=T.x,yt[st+4]=T.y,yt[st+5]=T.z,yt[st+6]=R.x,yt[st+7]=R.y,yt[st+8]=R.z,yt[st+9]=x.x,yt[st+10]=x.y,yt[st+11]=x.z,st+=12;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,yt,r)}if(Vt)for(Y=0,K=Kt.length;K>Y;Y++){for(Et=0,a=0,o=kt.length;o>a;a++)$=kt[a],l=jt[$],y=Kt[Y].vertices[l.a],T=Kt[Y].vertices[l.b],R=Kt[Y].vertices[l.c],J=St[Y],J[Et]=y.x,J[Et+1]=y.y,J[Et+2]=y.z,J[Et+3]=T.x,J[Et+4]=T.y,J[Et+5]=T.z,J[Et+6]=R.x,J[Et+7]=R.y,J[Et+8]=R.z,n.morphNormals&&(at?(Z=Jt[Y].vertexNormals[$],S=Z.a,M=Z.b,C=Z.c):(S=Jt[Y].faceNormals[$],M=S,C=S),Q=Mt[Y],Q[Et]=S.x,Q[Et+1]=S.y,Q[Et+2]=S.z,Q[Et+3]=M.x,Q[Et+4]=M.y,Q[Et+5]=M.z,Q[Et+6]=C.x,Q[Et+7]=C.y,Q[Et+8]=C.z),Et+=9;for(a=0,o=Gt.length;o>a;a++)$=Gt[a],l=jt[$],y=Kt[Y].vertices[l.a],T=Kt[Y].vertices[l.b],R=Kt[Y].vertices[l.c],x=Kt[Y].vertices[l.d],J=St[Y],J[Et]=y.x,J[Et+1]=y.y,J[Et+2]=y.z,J[Et+3]=T.x,J[Et+4]=T.y,J[Et+5]=T.z,J[Et+6]=R.x,J[Et+7]=R.y,J[Et+8]=R.z,J[Et+9]=x.x,J[Et+10]=x.y,J[Et+11]=x.z,n.morphNormals&&(at?(Z=Jt[Y].vertexNormals[$],S=Z.a,M=Z.b,C=Z.c,A=Z.d):(S=Jt[Y].faceNormals[$],M=S,C=S,A=S),Q=Mt[Y],Q[Et]=S.x,Q[Et+1]=S.y,Q[Et+2]=S.z,Q[Et+3]=M.x,Q[Et+4]=M.y,Q[Et+5]=M.z,Q[Et+6]=C.x,Q[Et+7]=C.y,Q[Et+8]=C.z,Q[Et+9]=A.x,Q[Et+10]=A.y,Q[Et+11]=A.z),Et+=12;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[Y]),Nt.bufferData(Nt.ARRAY_BUFFER,St[Y],r),n.morphNormals&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[Y]),Nt.bufferData(Nt.ARRAY_BUFFER,Mt[Y],r))}if(Yt.length){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],U=Yt[l.a],z=Yt[l.b],B=Yt[l.c],_t[mt]=U.x,_t[mt+1]=U.y,_t[mt+2]=U.z,_t[mt+3]=U.w,_t[mt+4]=z.x,_t[mt+5]=z.y,_t[mt+6]=z.z,_t[mt+7]=z.w,_t[mt+8]=B.x,_t[mt+9]=B.y,_t[mt+10]=B.z,_t[mt+11]=B.w,I=Xt[l.a],V=Xt[l.b],O=Xt[l.c],wt[mt]=I.x,wt[mt+1]=I.y,wt[mt+2]=I.z,wt[mt+3]=I.w,wt[mt+4]=V.x,wt[mt+5]=V.y,wt[mt+6]=V.z,wt[mt+7]=V.w,wt[mt+8]=O.x,wt[mt+9]=O.y,wt[mt+10]=O.z,wt[mt+11]=O.w,mt+=12;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],U=Yt[l.a],z=Yt[l.b],B=Yt[l.c],N=Yt[l.d],_t[mt]=U.x,_t[mt+1]=U.y,_t[mt+2]=U.z,_t[mt+3]=U.w,_t[mt+4]=z.x,_t[mt+5]=z.y,_t[mt+6]=z.z,_t[mt+7]=z.w,_t[mt+8]=B.x,_t[mt+9]=B.y,_t[mt+10]=B.z,_t[mt+11]=B.w,_t[mt+12]=N.x,_t[mt+13]=N.y,_t[mt+14]=N.z,_t[mt+15]=N.w,I=Xt[l.a],V=Xt[l.b],O=Xt[l.c],k=Xt[l.d],wt[mt]=I.x,wt[mt+1]=I.y,wt[mt+2]=I.z,wt[mt+3]=I.w,wt[mt+4]=V.x,wt[mt+5]=V.y,wt[mt+6]=V.z,wt[mt+7]=V.w,wt[mt+8]=O.x,wt[mt+9]=O.y,wt[mt+10]=O.z,wt[mt+11]=O.w,wt[mt+12]=k.x,wt[mt+13]=k.y,wt[mt+14]=k.z,wt[mt+15]=k.w,mt+=16;mt>0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,wt,r),Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,_t,r))}if(It&&it){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],u=l.vertexColors,f=l.color,3===u.length&&it===THREE.VertexColors?(L=u[0],P=u[1],D=u[2]):(L=f,P=f,D=f),bt[dt]=L.r,bt[dt+1]=L.g,bt[dt+2]=L.b,bt[dt+3]=P.r,bt[dt+4]=P.g,bt[dt+5]=P.b,bt[dt+6]=D.r,bt[dt+7]=D.g,bt[dt+8]=D.b,dt+=9;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],u=l.vertexColors,f=l.color,4===u.length&&it===THREE.VertexColors?(L=u[0],P=u[1],D=u[2],F=u[3]):(L=f,P=f,D=f,F=f),bt[dt]=L.r,bt[dt+1]=L.g,bt[dt+2]=L.b,bt[dt+3]=P.r,bt[dt+4]=P.g,bt[dt+5]=P.b,bt[dt+6]=D.r,bt[dt+7]=D.g,bt[dt+8]=D.b,bt[dt+9]=F.r,bt[dt+10]=F.g,bt[dt+11]=F.b,dt+=12;dt>0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,bt,r))}if(Bt&&Pt.hasTangents){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],E=l.vertexTangents,H=E[0],b=E[1],w=E[2],Ht[ft]=H.x,Ht[ft+1]=H.y,Ht[ft+2]=H.z,Ht[ft+3]=H.w,Ht[ft+4]=b.x,Ht[ft+5]=b.y,Ht[ft+6]=b.z,Ht[ft+7]=b.w,Ht[ft+8]=w.x,Ht[ft+9]=w.y,Ht[ft+10]=w.z,Ht[ft+11]=w.w,ft+=12;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],E=l.vertexTangents,H=E[0],b=E[1],w=E[2],_=E[3],Ht[ft]=H.x,Ht[ft+1]=H.y,Ht[ft+2]=H.z,Ht[ft+3]=H.w,Ht[ft+4]=b.x,Ht[ft+5]=b.y,Ht[ft+6]=b.z,Ht[ft+7]=b.w,Ht[ft+8]=w.x,Ht[ft+9]=w.y,Ht[ft+10]=w.z,Ht[ft+11]=w.w,Ht[ft+12]=_.x,Ht[ft+13]=_.y,Ht[ft+14]=_.z,Ht[ft+15]=_.w,ft+=16;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglTangentBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,Ht,r)}if(zt&&rt){for(a=0,o=kt.length;o>a;a++)if(l=jt[kt[a]],h=l.vertexNormals,c=l.normal,3===h.length&&at)for(G=0;3>G;G++)W=h[G],xt[ut]=W.x,xt[ut+1]=W.y,xt[ut+2]=W.z,ut+=3;else for(G=0;3>G;G++)xt[ut]=c.x,xt[ut+1]=c.y,xt[ut+2]=c.z,ut+=3;for(a=0,o=Gt.length;o>a;a++)if(l=jt[Gt[a]],h=l.vertexNormals,c=l.normal,4===h.length&&at)for(G=0;4>G;G++)W=h[G],xt[ut]=W.x,xt[ut+1]=W.y,xt[ut+2]=W.z,ut+=3;else for(G=0;4>G;G++)xt[ut]=c.x,xt[ut+1]=c.y,xt[ut+2]=c.z,ut+=3;Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglNormalBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,xt,r)}if(Ut&&Wt&&nt){for(a=0,o=kt.length;o>a;a++)if(s=kt[a],g=Wt[s],void 0!==g)for(G=0;3>G;G++)q=g[G],Tt[lt]=q.x,Tt[lt+1]=q.y,lt+=2;for(a=0,o=Gt.length;o>a;a++)if(s=Gt[a],g=Wt[s],void 0!==g)for(G=0;4>G;G++)q=g[G],Tt[lt]=q.x,Tt[lt+1]=q.y,lt+=2;lt>0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglUVBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,Tt,r))}if(Ut&&qt&&nt){for(a=0,o=kt.length;o>a;a++)if(s=kt[a],v=qt[s],void 0!==v)for(G=0;3>G;G++)X=v[G],Rt[ht]=X.x,Rt[ht+1]=X.y,ht+=2;for(a=0,o=Gt.length;o>a;a++)if(s=Gt[a],v=qt[s],void 0!==v)for(G=0;4>G;G++)X=v[G],Rt[ht]=X.x,Rt[ht+1]=X.y,ht+=2;ht>0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglUV2Buffer),Nt.bufferData(Nt.ARRAY_BUFFER,Rt,r))}if(Ft){for(a=0,o=kt.length;o>a;a++)At[ct]=ot,At[ct+1]=ot+1,At[ct+2]=ot+2,ct+=3,Lt[pt]=ot,Lt[pt+1]=ot+1,Lt[pt+2]=ot,Lt[pt+3]=ot+2,Lt[pt+4]=ot+1,Lt[pt+5]=ot+2,pt+=6,ot+=3;for(a=0,o=Gt.length;o>a;a++)At[ct]=ot,At[ct+1]=ot+1,At[ct+2]=ot+3,At[ct+3]=ot+1,At[ct+4]=ot+2,At[ct+5]=ot+3,ct+=6,Lt[pt]=ot,Lt[pt+1]=ot+1,Lt[pt+2]=ot,Lt[pt+3]=ot+3,Lt[pt+4]=ot+1,Lt[pt+5]=ot+2,Lt[pt+6]=ot+2,Lt[pt+7]=ot+3,pt+=8,ot+=4;Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),Nt.bufferData(Nt.ELEMENT_ARRAY_BUFFER,At,r),Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),Nt.bufferData(Nt.ELEMENT_ARRAY_BUFFER,Lt,r)}if(Ct)for(G=0,j=Ct.length;j>G;G++)if(tt=Ct[G],tt.__original.needsUpdate){if(gt=0,vt=0,1===tt.size){if(void 0===tt.boundTo||"vertices"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],tt.array[gt]=tt.value[l.a],tt.array[gt+1]=tt.value[l.b],tt.array[gt+2]=tt.value[l.c],gt+=3;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],tt.array[gt]=tt.value[l.a],tt.array[gt+1]=tt.value[l.b],tt.array[gt+2]=tt.value[l.c],tt.array[gt+3]=tt.value[l.d],gt+=4}else if("faces"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)et=tt.value[kt[a]],tt.array[gt]=et,tt.array[gt+1]=et,tt.array[gt+2]=et,gt+=3;for(a=0,o=Gt.length;o>a;a++)et=tt.value[Gt[a]],tt.array[gt]=et,tt.array[gt+1]=et,tt.array[gt+2]=et,tt.array[gt+3]=et,gt+=4}}else if(2===tt.size){if(void 0===tt.boundTo||"vertices"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,gt+=6;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],x=tt.value[l.d],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,tt.array[gt+6]=x.x,tt.array[gt+7]=x.y,gt+=8}else if("faces"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)et=tt.value[kt[a]],y=et,T=et,R=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,gt+=6;for(a=0,o=Gt.length;o>a;a++)et=tt.value[Gt[a]],y=et,T=et,R=et,x=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=T.x,tt.array[gt+3]=T.y,tt.array[gt+4]=R.x,tt.array[gt+5]=R.y,tt.array[gt+6]=x.x,tt.array[gt+7]=x.y,gt+=8}}else if(3===tt.size){var Qt;if(Qt="c"===tt.type?["r","g","b"]:["x","y","z"],void 0===tt.boundTo||"vertices"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],tt.array[gt]=y[Qt[0]],tt.array[gt+1]=y[Qt[1]],tt.array[gt+2]=y[Qt[2]],tt.array[gt+3]=T[Qt[0]],tt.array[gt+4]=T[Qt[1]],tt.array[gt+5]=T[Qt[2]],tt.array[gt+6]=R[Qt[0]],tt.array[gt+7]=R[Qt[1]],tt.array[gt+8]=R[Qt[2]],gt+=9;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],x=tt.value[l.d],tt.array[gt]=y[Qt[0]],tt.array[gt+1]=y[Qt[1]],tt.array[gt+2]=y[Qt[2]],tt.array[gt+3]=T[Qt[0]],tt.array[gt+4]=T[Qt[1]],tt.array[gt+5]=T[Qt[2]],tt.array[gt+6]=R[Qt[0]],tt.array[gt+7]=R[Qt[1]],tt.array[gt+8]=R[Qt[2]],tt.array[gt+9]=x[Qt[0]],tt.array[gt+10]=x[Qt[1]],tt.array[gt+11]=x[Qt[2]],gt+=12}else if("faces"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)et=tt.value[kt[a]],y=et,T=et,R=et,tt.array[gt]=y[Qt[0]],tt.array[gt+1]=y[Qt[1]],tt.array[gt+2]=y[Qt[2]],tt.array[gt+3]=T[Qt[0]],tt.array[gt+4]=T[Qt[1]],tt.array[gt+5]=T[Qt[2]],tt.array[gt+6]=R[Qt[0]],tt.array[gt+7]=R[Qt[1]],tt.array[gt+8]=R[Qt[2]],gt+=9;for(a=0,o=Gt.length;o>a;a++)et=tt.value[Gt[a]],y=et,T=et,R=et,x=et,tt.array[gt]=y[Qt[0]],tt.array[gt+1]=y[Qt[1]],tt.array[gt+2]=y[Qt[2]],tt.array[gt+3]=T[Qt[0]],tt.array[gt+4]=T[Qt[1]],tt.array[gt+5]=T[Qt[2]],tt.array[gt+6]=R[Qt[0]],tt.array[gt+7]=R[Qt[1]],tt.array[gt+8]=R[Qt[2]],tt.array[gt+9]=x[Qt[0]],tt.array[gt+10]=x[Qt[1]],tt.array[gt+11]=x[Qt[2]],gt+=12}else if("faceVertices"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)et=tt.value[kt[a]],y=et[0],T=et[1],R=et[2],tt.array[gt]=y[Qt[0]],tt.array[gt+1]=y[Qt[1]],tt.array[gt+2]=y[Qt[2]],tt.array[gt+3]=T[Qt[0]],tt.array[gt+4]=T[Qt[1]],tt.array[gt+5]=T[Qt[2]],tt.array[gt+6]=R[Qt[0]],tt.array[gt+7]=R[Qt[1]],tt.array[gt+8]=R[Qt[2]],gt+=9;for(a=0,o=Gt.length;o>a;a++)et=tt.value[Gt[a]],y=et[0],T=et[1],R=et[2],x=et[3],tt.array[gt]=y[Qt[0]],tt.array[gt+1]=y[Qt[1]],tt.array[gt+2]=y[Qt[2]],tt.array[gt+3]=T[Qt[0]],tt.array[gt+4]=T[Qt[1]],tt.array[gt+5]=T[Qt[2]],tt.array[gt+6]=R[Qt[0]],tt.array[gt+7]=R[Qt[1]],tt.array[gt+8]=R[Qt[2]],tt.array[gt+9]=x[Qt[0]],tt.array[gt+10]=x[Qt[1]],tt.array[gt+11]=x[Qt[2]],gt+=12}}else if(4===tt.size)if(void 0===tt.boundTo||"vertices"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)l=jt[kt[a]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,gt+=12;for(a=0,o=Gt.length;o>a;a++)l=jt[Gt[a]],y=tt.value[l.a],T=tt.value[l.b],R=tt.value[l.c],x=tt.value[l.d],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,tt.array[gt+12]=x.x,tt.array[gt+13]=x.y,tt.array[gt+14]=x.z,tt.array[gt+15]=x.w,gt+=16}else if("faces"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)et=tt.value[kt[a]],y=et,T=et,R=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,gt+=12;for(a=0,o=Gt.length;o>a;a++)et=tt.value[Gt[a]],y=et,T=et,R=et,x=et,tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,tt.array[gt+12]=x.x,tt.array[gt+13]=x.y,tt.array[gt+14]=x.z,tt.array[gt+15]=x.w,gt+=16}else if("faceVertices"===tt.boundTo){for(a=0,o=kt.length;o>a;a++)et=tt.value[kt[a]],y=et[0],T=et[1],R=et[2],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,gt+=12;for(a=0,o=Gt.length;o>a;a++)et=tt.value[Gt[a]],y=et[0],T=et[1],R=et[2],x=et[3],tt.array[gt]=y.x,tt.array[gt+1]=y.y,tt.array[gt+2]=y.z,tt.array[gt+3]=y.w,tt.array[gt+4]=T.x,tt.array[gt+5]=T.y,tt.array[gt+6]=T.z,tt.array[gt+7]=T.w,tt.array[gt+8]=R.x,tt.array[gt+9]=R.y,tt.array[gt+10]=R.z,tt.array[gt+11]=R.w,tt.array[gt+12]=x.x,tt.array[gt+13]=x.y,tt.array[gt+14]=x.z,tt.array[gt+15]=x.w,gt+=16}Nt.bindBuffer(Nt.ARRAY_BUFFER,tt.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,tt.array,r)}i&&(delete e.__inittedArrays,delete e.__colorArray,delete e.__normalArray,delete e.__tangentArray,delete e.__uvArray,delete e.__uv2Array,delete e.__faceArray,delete e.__vertexArray,delete e.__lineArray,delete e.__skinIndexArray,delete e.__skinWeightArray)}}function R(e,t,r){var i=e.attributes,n=i.index,a=i.position,o=i.normal,s=i.uv,l=i.color,h=i.tangent;if(e.elementsNeedUpdate&&void 0!==n&&(Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,n.buffer),Nt.bufferData(Nt.ELEMENT_ARRAY_BUFFER,n.array,t)),e.verticesNeedUpdate&&void 0!==a&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,a.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,a.array,t)),e.normalsNeedUpdate&&void 0!==o&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,o.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,o.array,t)),e.uvsNeedUpdate&&void 0!==s&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,s.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,s.array,t)),e.colorsNeedUpdate&&void 0!==l&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,l.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,l.array,t)),e.tangentsNeedUpdate&&void 0!==h&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,h.buffer),Nt.bufferData(Nt.ARRAY_BUFFER,h.array,t)),r)for(var c in e.attributes)delete e.attributes[c].array}function x(e){gr[e]||(Nt.enableVertexAttribArray(e),gr[e]=!0)}function H(){for(var e in gr)gr[e]&&(Nt.disableVertexAttribArray(e),gr[e]=!1)}function b(e,t,r){var i=e.program.attributes;if(-1!==r.morphTargetBase&&i.position>=0?(Nt.bindBuffer(Nt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[r.morphTargetBase]),x(i.position),Nt.vertexAttribPointer(i.position,3,Nt.FLOAT,!1,0,0)):i.position>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,t.__webglVertexBuffer),x(i.position),Nt.vertexAttribPointer(i.position,3,Nt.FLOAT,!1,0,0)),r.morphTargetForcedOrder.length)for(var n=0,a=r.morphTargetForcedOrder,o=r.morphTargetInfluences;e.numSupportedMorphTargets>n&&a.length>n;)i["morphTarget"+n]>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[a[n]]),x(i["morphTarget"+n]),Nt.vertexAttribPointer(i["morphTarget"+n],3,Nt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&e.morphNormals&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[a[n]]),x(i["morphNormal"+n]),Nt.vertexAttribPointer(i["morphNormal"+n],3,Nt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=o[a[n]],n++;else{var s,l,h=[],o=r.morphTargetInfluences,c=o.length;for(l=0;c>l;l++)s=o[l],s>0&&h.push([s,l]);h.length>e.numSupportedMorphTargets?(h.sort(_),h.length=e.numSupportedMorphTargets):h.length>e.numSupportedMorphNormals?h.sort(_):0===h.length&&h.push([0,0]);for(var u,n=0;e.numSupportedMorphTargets>n;)h[n]?(u=h[n][1],i["morphTarget"+n]>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,t.__webglMorphTargetsBuffers[u]),x(i["morphTarget"+n]),Nt.vertexAttribPointer(i["morphTarget"+n],3,Nt.FLOAT,!1,0,0)),i["morphNormal"+n]>=0&&e.morphNormals&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,t.__webglMorphNormalsBuffers[u]),x(i["morphNormal"+n]),Nt.vertexAttribPointer(i["morphNormal"+n],3,Nt.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[n]=o[u]):r.__webglMorphTargetInfluences[n]=0,n++}null!==e.program.uniforms.morphTargetInfluences&&Nt.uniform1fv(e.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}function w(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}function _(e,t){return t[0]-e[0]}function S(e,t,r){if(e.length)for(var i=0,n=e.length;n>i;i++)qt=null,Jt=null,tr=-1,ar=-1,or=-1,Zt=-1,er=-1,Kt=-1,Yt=-1,Hr=!0,e[i].render(t,r,mr,Er),qt=null,Jt=null,tr=-1,ar=-1,or=-1,Zt=-1,er=-1,Kt=-1,Yt=-1,Hr=!0}function M(e,t,r,i,n,a,o,s){var l,h,c,u,f,p,d;t?(f=e.length-1,p=-1,d=-1):(f=0,p=e.length,d=1);for(var m=f;m!==p;m+=d)if(l=e[m],l.render){if(h=l.object,c=l.buffer,s)u=s;else{if(u=l[r],!u)continue;o&&Gt.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),Gt.setDepthTest(u.depthTest),Gt.setDepthWrite(u.depthWrite),st(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits)}Gt.setMaterialFaces(u),c instanceof THREE.BufferGeometry?Gt.renderBufferDirect(i,n,a,u,c,h):Gt.renderBuffer(i,n,a,u,c,h)}}function C(e,t,r,i,n,a,o){for(var s,l,h,c=0,u=e.length;u>c;c++)if(s=e[c],l=s.object,l.visible){if(o)h=o;else{if(h=s[t],!h)continue;a&&Gt.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst),Gt.setDepthTest(h.depthTest),Gt.setDepthWrite(h.depthWrite),st(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}Gt.renderImmediateObject(r,i,n,h,l)}}function A(e){var t=e.object,r=t.material;r.transparent?(e.transparent=r,e.opaque=null):(e.opaque=r,e.transparent=null)}function L(e){var t,r,i,n=e.object,a=e.buffer;i=n.material,i instanceof THREE.MeshFaceMaterial?(r=a.materialIndex,t=i.materials[r],t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)):(t=i,t&&(t.transparent?(e.transparent=t,e.opaque=null):(e.opaque=t,e.transparent=null)))}function P(e,t){var r,i,n,a,o,s,l={},h=e.morphTargets.length,c=e.morphNormals.length,u=t instanceof THREE.MeshFaceMaterial;for(e.geometryGroups={},r=0,i=e.faces.length;i>r;r++)n=e.faces[r],a=u?n.materialIndex:0,void 0===l[a]&&(l[a]={hash:a,counter:0}),s=l[a].hash+"_"+l[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:c}),o=n instanceof THREE.Face3?3:4,e.geometryGroups[s].vertices+o>65535&&(l[a].counter+=1,s=l[a].hash+"_"+l[a].counter,void 0===e.geometryGroups[s]&&(e.geometryGroups[s]={faces3:[],faces4:[],materialIndex:a,vertices:0,numMorphTargets:h,numMorphNormals:c})),n instanceof THREE.Face3?e.geometryGroups[s].faces3.push(r):e.geometryGroups[s].faces4.push(r),e.geometryGroups[s].vertices+=o;e.geometryGroupsList=[];for(var f in e.geometryGroups)e.geometryGroups[f].id=Qt++,e.geometryGroupsList.push(e.geometryGroups[f])}function D(e,a){var o,u,f,p;if(!e.__webglInit)if(e.__webglInit=!0,e._modelViewMatrix=new THREE.Matrix4,e._normalMatrix=new THREE.Matrix3,void 0!==e.geometry&&void 0===e.geometry.__webglInit&&(e.geometry.__webglInit=!0,e.geometry.addEventListener("dispose",Br)),e instanceof THREE.Mesh)if(u=e.geometry,f=e.material,u instanceof THREE.Geometry){void 0===u.geometryGroups&&P(u,f);for(o in u.geometryGroups)p=u.geometryGroups[o],p.__webglVertexBuffer||(n(p),c(p,e),u.verticesNeedUpdate=!0,u.morphTargetsNeedUpdate=!0,u.elementsNeedUpdate=!0,u.uvsNeedUpdate=!0,u.normalsNeedUpdate=!0,u.tangentsNeedUpdate=!0,u.colorsNeedUpdate=!0)}else u instanceof THREE.BufferGeometry&&E(u);else e instanceof THREE.Ribbon?(u=e.geometry,u.__webglVertexBuffer||(i(u),h(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.normalsNeedUpdate=!0)):e instanceof THREE.Line?(u=e.geometry,u.__webglVertexBuffer||(u instanceof THREE.Geometry?(r(u),l(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0,u.lineDistancesNeedUpdate=!0):u instanceof THREE.BufferGeometry&&E(u))):e instanceof THREE.ParticleSystem&&(u=e.geometry,u.__webglVertexBuffer||(u instanceof THREE.Geometry?(t(u),s(u,e),u.verticesNeedUpdate=!0,u.colorsNeedUpdate=!0):u instanceof THREE.BufferGeometry&&E(u)));if(!e.__webglActive){if(e instanceof THREE.Mesh){if(u=e.geometry,u instanceof THREE.BufferGeometry)F(a.__webglObjects,u,e);else if(u instanceof THREE.Geometry)for(o in u.geometryGroups)p=u.geometryGroups[o],F(a.__webglObjects,p,e)}else e instanceof THREE.Ribbon||e instanceof THREE.Line||e instanceof THREE.ParticleSystem?(u=e.geometry,F(a.__webglObjects,u,e)):e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback?U(a.__webglObjectsImmediate,e):e instanceof THREE.Sprite?a.__webglSprites.push(e):e instanceof THREE.LensFlare&&a.__webglFlares.push(e);e.__webglActive=!0}}function F(e,t,r){e.push({buffer:t,object:r,opaque:null,transparent:null})}function U(e,t){e.push({object:t,opaque:null,transparent:null})}function z(e){var t,r,i,n=e.geometry;if(e instanceof THREE.Mesh)if(n instanceof THREE.BufferGeometry)(n.verticesNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate)&&R(n,Nt.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1;else{for(var a=0,o=n.geometryGroupsList.length;o>a;a++)t=n.geometryGroupsList[a],i=u(e,t),n.buffersNeedUpdate&&c(t,e),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.morphTargetsNeedUpdate||n.elementsNeedUpdate||n.uvsNeedUpdate||n.normalsNeedUpdate||n.colorsNeedUpdate||n.tangentsNeedUpdate||r)&&T(t,e,Nt.DYNAMIC_DRAW,!n.dynamic,i);n.verticesNeedUpdate=!1,n.morphTargetsNeedUpdate=!1,n.elementsNeedUpdate=!1,n.uvsNeedUpdate=!1,n.normalsNeedUpdate=!1,n.colorsNeedUpdate=!1,n.tangentsNeedUpdate=!1,n.buffersNeedUpdate=!1,i.attributes&&N(i)}else e instanceof THREE.Ribbon?(i=u(e,n),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.normalsNeedUpdate||r)&&y(n,Nt.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.normalsNeedUpdate=!1,i.attributes&&N(i)):e instanceof THREE.Line?n instanceof THREE.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&R(n,Nt.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(i=u(e,n),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||n.lineDistancesNeedUpdate||r)&&v(n,Nt.DYNAMIC_DRAW),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,n.lineDistancesNeedUpdate=!1,i.attributes&&N(i)):e instanceof THREE.ParticleSystem&&(n instanceof THREE.BufferGeometry?((n.verticesNeedUpdate||n.colorsNeedUpdate)&&R(n,Nt.DYNAMIC_DRAW,!n.dynamic),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1):(i=u(e,n),r=i.attributes&&B(i),(n.verticesNeedUpdate||n.colorsNeedUpdate||e.sortParticles||r)&&g(n,Nt.DYNAMIC_DRAW,e),n.verticesNeedUpdate=!1,n.colorsNeedUpdate=!1,i.attributes&&N(i)))}function B(e){for(var t in e.attributes)if(e.attributes[t].needsUpdate)return!0;return!1}function N(e){for(var t in e.attributes)e.attributes[t].needsUpdate=!1}function I(e,t){e instanceof THREE.Mesh||e instanceof THREE.ParticleSystem||e instanceof THREE.Ribbon||e instanceof THREE.Line?V(t.__webglObjects,e):e instanceof THREE.Sprite?O(t.__webglSprites,e):e instanceof THREE.LensFlare?O(t.__webglFlares,e):(e instanceof THREE.ImmediateRenderObject||e.immediateRenderCallback)&&V(t.__webglObjectsImmediate,e),e.__webglActive=!1}function V(e,t){for(var r=e.length-1;r>=0;r--)e[r].object===t&&e.splice(r,1)}function O(e,t){for(var r=e.length-1;r>=0;r--)e[r]===t&&e.splice(r,1)}function k(e,t){e.uniforms=THREE.UniformsUtils.clone(t.uniforms),e.vertexShader=t.vertexShader,e.fragmentShader=t.fragmentShader}function G(e,t,r,i,n){$t=0,i.needsUpdate&&(i.program&&jr(i),Gt.initMaterial(i,t,r,n),i.needsUpdate=!1),i.morphTargets&&(n.__webglMorphTargetInfluences||(n.__webglMorphTargetInfluences=new Float32Array(Gt.maxMorphTargets)));var a=!1,o=i.program,s=o.uniforms,l=i.uniforms;if(o!==qt&&(Nt.useProgram(o),qt=o,a=!0),i.id!==Yt&&(Yt=i.id,a=!0),(a||e!==Jt)&&(Nt.uniformMatrix4fv(s.projectionMatrix,!1,e.projectionMatrix.elements),e!==Jt&&(Jt=e)),i.skinning)if(Ar&&n.useVertexTexture){if(null!==s.boneTexture){var h=et();Nt.uniform1i(s.boneTexture,h),Gt.setTexture(n.boneTexture,h)}}else null!==s.boneGlobalMatrices&&Nt.uniformMatrix4fv(s.boneGlobalMatrices,!1,n.boneMatrices);if(a){if(r&&i.fog&&Y(l,r),(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i.lights)&&(Hr&&(at(o,t),Hr=!1),Q(l,br)),(i instanceof THREE.MeshBasicMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.MeshPhongMaterial)&&j(l,i),i instanceof THREE.LineBasicMaterial?W(l,i):i instanceof THREE.LineDashedMaterial?(W(l,i),q(l,i)):i instanceof THREE.ParticleBasicMaterial?X(l,i):i instanceof THREE.MeshPhongMaterial?K(l,i):i instanceof THREE.MeshLambertMaterial?J(l,i):i instanceof THREE.MeshDepthMaterial?(l.mNear.value=e.near,l.mFar.value=e.far,l.opacity.value=i.opacity):i instanceof THREE.MeshNormalMaterial&&(l.opacity.value=i.opacity),n.receiveShadow&&!i._shadowPass&&$(l,t),tt(o,i.uniformsList),(i instanceof THREE.ShaderMaterial||i instanceof THREE.MeshPhongMaterial||i.envMap)&&null!==s.cameraPosition){var c=e.matrixWorld.getPosition();Nt.uniform3f(s.cameraPosition,c.x,c.y,c.z)}(i instanceof THREE.MeshPhongMaterial||i instanceof THREE.MeshLambertMaterial||i instanceof THREE.ShaderMaterial||i.skinning)&&null!==s.viewMatrix&&Nt.uniformMatrix4fv(s.viewMatrix,!1,e.matrixWorldInverse.elements)}return Z(s,n),null!==s.modelMatrix&&Nt.uniformMatrix4fv(s.modelMatrix,!1,n.matrixWorld.elements),o}function j(e,t){e.opacity.value=t.opacity,Gt.gammaInput?e.diffuse.value.copyGammaToLinear(t.color):e.diffuse.value=t.color,e.map.value=t.map,e.lightMap.value=t.lightMap,e.specularMap.value=t.specularMap,t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale));var r;if(t.map?r=t.map:t.specularMap?r=t.specularMap:t.normalMap?r=t.normalMap:t.bumpMap&&(r=t.bumpMap),void 0!==r){var i=r.offset,n=r.repeat;e.offsetRepeat.value.set(i.x,i.y,n.x,n.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,e.reflectivity.value=Gt.gammaInput?t.reflectivity:t.reflectivity,e.refractionRatio.value=t.refractionRatio,e.combine.value=t.combine,e.useRefract.value=t.envMap&&t.envMap.mapping instanceof THREE.CubeRefractionMapping}function W(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function q(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function X(e,t){e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=Ct.height/2,e.map.value=t.map}function Y(e,t){e.fogColor.value=t.color,t instanceof THREE.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof THREE.FogExp2&&(e.fogDensity.value=t.density)}function K(e,t){e.shininess.value=t.shininess,Gt.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive),e.specular.value.copyGammaToLinear(t.specular)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive,e.specular.value=t.specular),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)}function J(e,t){Gt.gammaInput?(e.ambient.value.copyGammaToLinear(t.ambient),e.emissive.value.copyGammaToLinear(t.emissive)):(e.ambient.value=t.ambient,e.emissive.value=t.emissive),t.wrapAround&&e.wrapRGB.value.copy(t.wrapRGB)
}function Q(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}function $(e,t){if(e.shadowMatrix)for(var r=0,i=0,n=t.length;n>i;i++){var a=t[i];a.castShadow&&(a instanceof THREE.SpotLight||a instanceof THREE.DirectionalLight&&!a.shadowCascade)&&(e.shadowMap.value[r]=a.shadowMap,e.shadowMapSize.value[r]=a.shadowMapSize,e.shadowMatrix.value[r]=a.shadowMatrix,e.shadowDarkness.value[r]=a.shadowDarkness,e.shadowBias.value[r]=a.shadowBias,r++)}}function Z(e,t){Nt.uniformMatrix4fv(e.modelViewMatrix,!1,t._modelViewMatrix.elements),e.normalMatrix&&Nt.uniformMatrix3fv(e.normalMatrix,!1,t._normalMatrix.elements)}function et(){var e=$t;return e>=wr&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+wr),$t+=1,e}function tt(e,t){var r,i,n,a,o,s,l,h,c,u,f;for(c=0,u=t.length;u>c;c++)if(a=e.uniforms[t[c][1]])if(r=t[c][0],n=r.type,i=r.value,"i"===n)Nt.uniform1i(a,i);else if("f"===n)Nt.uniform1f(a,i);else if("v2"===n)Nt.uniform2f(a,i.x,i.y);else if("v3"===n)Nt.uniform3f(a,i.x,i.y,i.z);else if("v4"===n)Nt.uniform4f(a,i.x,i.y,i.z,i.w);else if("c"===n)Nt.uniform3f(a,i.r,i.g,i.b);else if("iv1"===n)Nt.uniform1iv(a,i);else if("iv"===n)Nt.uniform3iv(a,i);else if("fv1"===n)Nt.uniform1fv(a,i);else if("fv"===n)Nt.uniform3fv(a,i);else if("v2v"===n){for(void 0===r._array&&(r._array=new Float32Array(2*i.length)),l=0,h=i.length;h>l;l++)f=2*l,r._array[f]=i[l].x,r._array[f+1]=i[l].y;Nt.uniform2fv(a,r._array)}else if("v3v"===n){for(void 0===r._array&&(r._array=new Float32Array(3*i.length)),l=0,h=i.length;h>l;l++)f=3*l,r._array[f]=i[l].x,r._array[f+1]=i[l].y,r._array[f+2]=i[l].z;Nt.uniform3fv(a,r._array)}else if("v4v"===n){for(void 0===r._array&&(r._array=new Float32Array(4*i.length)),l=0,h=i.length;h>l;l++)f=4*l,r._array[f]=i[l].x,r._array[f+1]=i[l].y,r._array[f+2]=i[l].z,r._array[f+3]=i[l].w;Nt.uniform4fv(a,r._array)}else if("m4"===n)void 0===r._array&&(r._array=new Float32Array(16)),i.flattenToArray(r._array),Nt.uniformMatrix4fv(a,!1,r._array);else if("m4v"===n){for(void 0===r._array&&(r._array=new Float32Array(16*i.length)),l=0,h=i.length;h>l;l++)i[l].flattenToArrayOffset(r._array,16*l);Nt.uniformMatrix4fv(a,!1,r._array)}else if("t"===n){if(o=i,s=et(),Nt.uniform1i(a,s),!o)continue;o.image instanceof Array&&6===o.image.length?gt(o,s):o instanceof THREE.WebGLRenderTargetCube?vt(o,s):Gt.setTexture(o,s)}else if("tv"===n){for(void 0===r._array&&(r._array=[]),l=0,h=r.value.length;h>l;l++)r._array[l]=et();for(Nt.uniform1iv(a,r._array),l=0,h=r.value.length;h>l;l++)o=r.value[l],s=r._array[l],o&&Gt.setTexture(o,s)}}function rt(e,t){e._modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),e._normalMatrix.getInverse(e._modelViewMatrix),e._normalMatrix.transpose()}function it(e,t,r,i){e[t]=r.r*r.r*i,e[t+1]=r.g*r.g*i,e[t+2]=r.b*r.b*i}function nt(e,t,r,i){e[t]=r.r*i,e[t+1]=r.g*i,e[t+2]=r.b*i}function at(e,t){var r,i,n,a,o,s,l,h,c,u,f=0,p=0,d=0,m=br,E=m.directional.colors,g=m.directional.positions,v=m.point.colors,y=m.point.positions,T=m.point.distances,R=m.spot.colors,x=m.spot.positions,H=m.spot.distances,b=m.spot.directions,w=m.spot.anglesCos,_=m.spot.exponents,S=m.hemi.skyColors,M=m.hemi.groundColors,C=m.hemi.positions,A=0,L=0,P=0,D=0,F=0,U=0,z=0,B=0,N=0,I=0,V=0,O=0;for(r=0,i=t.length;i>r;r++)if(n=t[r],!n.onlyShadow)if(a=n.color,l=n.intensity,u=n.distance,n instanceof THREE.AmbientLight){if(!n.visible)continue;Gt.gammaInput?(f+=a.r*a.r,p+=a.g*a.g,d+=a.b*a.b):(f+=a.r,p+=a.g,d+=a.b)}else if(n instanceof THREE.DirectionalLight){if(F+=1,!n.visible)continue;if(xr.copy(n.matrixWorld.getPosition()),xr.sub(n.target.matrixWorld.getPosition()),xr.normalize(),0===xr.x&&0===xr.y&&0===xr.z)continue;N=3*A,g[N]=xr.x,g[N+1]=xr.y,g[N+2]=xr.z,Gt.gammaInput?it(E,N,a,l*l):nt(E,N,a,l),A+=1}else if(n instanceof THREE.PointLight){if(U+=1,!n.visible)continue;I=3*L,Gt.gammaInput?it(v,I,a,l*l):nt(v,I,a,l),c=n.matrixWorld.getPosition(),y[I]=c.x,y[I+1]=c.y,y[I+2]=c.z,T[L]=u,L+=1}else if(n instanceof THREE.SpotLight){if(z+=1,!n.visible)continue;V=3*P,Gt.gammaInput?it(R,V,a,l*l):nt(R,V,a,l),c=n.matrixWorld.getPosition(),x[V]=c.x,x[V+1]=c.y,x[V+2]=c.z,H[P]=u,xr.copy(c),xr.sub(n.target.matrixWorld.getPosition()),xr.normalize(),b[V]=xr.x,b[V+1]=xr.y,b[V+2]=xr.z,w[P]=Math.cos(n.angle),_[P]=n.exponent,P+=1}else if(n instanceof THREE.HemisphereLight){if(B+=1,!n.visible)continue;if(xr.copy(n.matrixWorld.getPosition()),xr.normalize(),0===xr.x&&0===xr.y&&0===xr.z)continue;O=3*D,C[O]=xr.x,C[O+1]=xr.y,C[O+2]=xr.z,o=n.color,s=n.groundColor,Gt.gammaInput?(h=l*l,it(S,O,o,h),it(M,O,s,h)):(nt(S,O,o,l),nt(M,O,s,l)),D+=1}for(r=3*A,i=Math.max(E.length,3*F);i>r;r++)E[r]=0;for(r=3*L,i=Math.max(v.length,3*U);i>r;r++)v[r]=0;for(r=3*P,i=Math.max(R.length,3*z);i>r;r++)R[r]=0;for(r=3*D,i=Math.max(S.length,3*B);i>r;r++)S[r]=0;for(r=3*D,i=Math.max(M.length,3*B);i>r;r++)M[r]=0;m.directional.length=A,m.point.length=L,m.spot.length=P,m.hemi.length=D,m.ambient[0]=f,m.ambient[1]=p,m.ambient[2]=d}function ot(e){e!==cr&&(Nt.lineWidth(e),cr=e)}function st(e,t,r){sr!==e&&(e?Nt.enable(Nt.POLYGON_OFFSET_FILL):Nt.disable(Nt.POLYGON_OFFSET_FILL),sr=e),!e||lr===t&&hr===r||(Nt.polygonOffset(t,r),lr=t,hr=r)}function lt(e){var t,r,i=[];for(var n in e)t=e[n],t!==!1&&(r="#define "+n+" "+t,i.push(r));return i.join("\n")}function ht(e,t,r,i,n,a,o){var s,l,h,c,u,f=[];e?f.push(e):(f.push(t),f.push(r));for(h in a)f.push(h),f.push(a[h]);for(s in o)f.push(s),f.push(o[s]);for(u=f.join(),s=0,l=jt.length;l>s;s++){var p=jt[s];if(p.code===u)return p.usedTimes++,p.program}var d="SHADOWMAP_TYPE_BASIC";o.shadowMapType===THREE.PCFShadowMap?d="SHADOWMAP_TYPE_PCF":o.shadowMapType===THREE.PCFSoftShadowMap&&(d="SHADOWMAP_TYPE_PCF_SOFT");var m=lt(a);c=Nt.createProgram();var E=["precision "+At+" float;",m,Cr?"#define VERTEX_TEXTURES":"",Gt.gammaInput?"#define GAMMA_INPUT":"",Gt.gammaOutput?"#define GAMMA_OUTPUT":"",Gt.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,"#define MAX_BONES "+o.maxBones,o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.lightMap?"#define USE_LIGHTMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.vertexColors?"#define USE_COLOR":"",o.skinning?"#define USE_SKINNING":"",o.useVertexTexture?"#define BONE_TEXTURE":"",o.boneTextureWidth?"#define N_BONE_PIXEL_X "+o.boneTextureWidth.toFixed(1):"",o.boneTextureHeight?"#define N_BONE_PIXEL_Y "+o.boneTextureHeight.toFixed(1):"",o.morphTargets?"#define USE_MORPHTARGETS":"",o.morphNormals?"#define USE_MORPHNORMALS":"",o.perPixel?"#define PHONG_PER_PIXEL":"",o.wrapAround?"#define WRAP_AROUND":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+d:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",o.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),g=["precision "+At+" float;",o.bumpMap||o.normalMap?"#extension GL_OES_standard_derivatives : enable":"",m,"#define MAX_DIR_LIGHTS "+o.maxDirLights,"#define MAX_POINT_LIGHTS "+o.maxPointLights,"#define MAX_SPOT_LIGHTS "+o.maxSpotLights,"#define MAX_HEMI_LIGHTS "+o.maxHemiLights,"#define MAX_SHADOWS "+o.maxShadows,o.alphaTest?"#define ALPHATEST "+o.alphaTest:"",Gt.gammaInput?"#define GAMMA_INPUT":"",Gt.gammaOutput?"#define GAMMA_OUTPUT":"",Gt.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",o.useFog&&o.fog?"#define USE_FOG":"",o.useFog&&o.fogExp?"#define FOG_EXP2":"",o.map?"#define USE_MAP":"",o.envMap?"#define USE_ENVMAP":"",o.lightMap?"#define USE_LIGHTMAP":"",o.bumpMap?"#define USE_BUMPMAP":"",o.normalMap?"#define USE_NORMALMAP":"",o.specularMap?"#define USE_SPECULARMAP":"",o.vertexColors?"#define USE_COLOR":"",o.metal?"#define METAL":"",o.perPixel?"#define PHONG_PER_PIXEL":"",o.wrapAround?"#define WRAP_AROUND":"",o.doubleSided?"#define DOUBLE_SIDED":"",o.flipSided?"#define FLIP_SIDED":"",o.shadowMapEnabled?"#define USE_SHADOWMAP":"",o.shadowMapEnabled?"#define "+d:"",o.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",o.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n"),v=pt("fragment",g+t),y=pt("vertex",E+r);Nt.attachShader(c,y),Nt.attachShader(c,v),Nt.linkProgram(c),Nt.getProgramParameter(c,Nt.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+Nt.getProgramParameter(c,Nt.VALIDATE_STATUS)+", gl error ["+Nt.getError()+"]"),Nt.deleteShader(v),Nt.deleteShader(y),c.uniforms={},c.attributes={};var T,R,x,H;T=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","modelMatrix","cameraPosition","morphTargetInfluences"],o.useVertexTexture?T.push("boneTexture"):T.push("boneGlobalMatrices");for(R in i)T.push(R);for(ct(c,T),T=["position","normal","uv","uv2","tangent","color","skinIndex","skinWeight","lineDistance"],H=0;o.maxMorphTargets>H;H++)T.push("morphTarget"+H);for(H=0;o.maxMorphNormals>H;H++)T.push("morphNormal"+H);for(x in n)T.push(x);return ut(c,T),c.id=Wt++,jt.push({program:c,code:u,usedTimes:1}),Gt.info.memory.programs=jt.length,c}function ct(e,t){var r,i,n;for(r=0,i=t.length;i>r;r++)n=t[r],e.uniforms[n]=Nt.getUniformLocation(e,n)}function ut(e,t){var r,i,n;for(r=0,i=t.length;i>r;r++)n=t[r],e.attributes[n]=Nt.getAttribLocation(e,n)}function ft(e){for(var t=e.split("\n"),r=0,i=t.length;i>r;r++)t[r]=r+1+": "+t[r];return t.join("\n")}function pt(e,t){var r;return"fragment"===e?r=Nt.createShader(Nt.FRAGMENT_SHADER):"vertex"===e&&(r=Nt.createShader(Nt.VERTEX_SHADER)),Nt.shaderSource(r,t),Nt.compileShader(r),Nt.getShaderParameter(r,Nt.COMPILE_STATUS)?r:(console.error(Nt.getShaderInfoLog(r)),console.error(ft(t)),null)}function dt(e){return 0===(e&e-1)}function mt(e,t,r){r?(Nt.texParameteri(e,Nt.TEXTURE_WRAP_S,Ht(t.wrapS)),Nt.texParameteri(e,Nt.TEXTURE_WRAP_T,Ht(t.wrapT)),Nt.texParameteri(e,Nt.TEXTURE_MAG_FILTER,Ht(t.magFilter)),Nt.texParameteri(e,Nt.TEXTURE_MIN_FILTER,Ht(t.minFilter))):(Nt.texParameteri(e,Nt.TEXTURE_WRAP_S,Nt.CLAMP_TO_EDGE),Nt.texParameteri(e,Nt.TEXTURE_WRAP_T,Nt.CLAMP_TO_EDGE),Nt.texParameteri(e,Nt.TEXTURE_MAG_FILTER,xt(t.magFilter)),Nt.texParameteri(e,Nt.TEXTURE_MIN_FILTER,xt(t.minFilter))),Ot&&t.type!==THREE.FloatType&&(t.anisotropy>1||t.__oldAnisotropy)&&(Nt.texParameterf(e,Ot.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,Mr)),t.__oldAnisotropy=t.anisotropy)}function Et(e,t){if(t>=e.width&&t>=e.height)return e;var r=Math.max(e.width,e.height),i=Math.floor(e.width*t/r),n=Math.floor(e.height*t/r),a=document.createElement("canvas");a.width=i,a.height=n;var o=a.getContext("2d");return o.drawImage(e,0,0,e.width,e.height,0,0,i,n),a}function gt(e,t){if(6===e.image.length)if(e.needsUpdate){e.image.__webglTextureCube||(e.image.__webglTextureCube=Nt.createTexture(),Gt.info.memory.textures++),Nt.activeTexture(Nt.TEXTURE0+t),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube),Nt.pixelStorei(Nt.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof THREE.CompressedTexture,i=[],n=0;6>n;n++)i[n]=Gt.autoScaleCubemaps&&!r?Et(e.image[n],Sr):e.image[n];var a=i[0],o=dt(a.width)&&dt(a.height),s=Ht(e.format),l=Ht(e.type);mt(Nt.TEXTURE_CUBE_MAP,e,o);for(var n=0;6>n;n++)if(r)for(var h,c=i[n].mipmaps,u=0,f=c.length;f>u;u++)h=c[u],Nt.compressedTexImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+n,u,s,h.width,h.height,0,h.data);else Nt.texImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,s,s,l,i[n]);e.generateMipmaps&&o&&Nt.generateMipmap(Nt.TEXTURE_CUBE_MAP),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Nt.activeTexture(Nt.TEXTURE0+t),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,e.image.__webglTextureCube)}function vt(e,t){Nt.activeTexture(Nt.TEXTURE0+t),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,e.__webglTexture)}function yt(e,t,r){Nt.bindFramebuffer(Nt.FRAMEBUFFER,e),Nt.framebufferTexture2D(Nt.FRAMEBUFFER,Nt.COLOR_ATTACHMENT0,r,t.__webglTexture,0)}function Tt(e,t){Nt.bindRenderbuffer(Nt.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Nt.renderbufferStorage(Nt.RENDERBUFFER,Nt.DEPTH_COMPONENT16,t.width,t.height),Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_ATTACHMENT,Nt.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Nt.renderbufferStorage(Nt.RENDERBUFFER,Nt.DEPTH_STENCIL,t.width,t.height),Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_STENCIL_ATTACHMENT,Nt.RENDERBUFFER,e)):Nt.renderbufferStorage(Nt.RENDERBUFFER,Nt.RGBA4,t.width,t.height)}function Rt(e){e instanceof THREE.WebGLRenderTargetCube?(Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,e.__webglTexture),Nt.generateMipmap(Nt.TEXTURE_CUBE_MAP),Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,null)):(Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture),Nt.generateMipmap(Nt.TEXTURE_2D),Nt.bindTexture(Nt.TEXTURE_2D,null))}function xt(e){return e===THREE.NearestFilter||e===THREE.NearestMipMapNearestFilter||e===THREE.NearestMipMapLinearFilter?Nt.NEAREST:Nt.LINEAR}function Ht(e){if(e===THREE.RepeatWrapping)return Nt.REPEAT;if(e===THREE.ClampToEdgeWrapping)return Nt.CLAMP_TO_EDGE;if(e===THREE.MirroredRepeatWrapping)return Nt.MIRRORED_REPEAT;if(e===THREE.NearestFilter)return Nt.NEAREST;if(e===THREE.NearestMipMapNearestFilter)return Nt.NEAREST_MIPMAP_NEAREST;if(e===THREE.NearestMipMapLinearFilter)return Nt.NEAREST_MIPMAP_LINEAR;if(e===THREE.LinearFilter)return Nt.LINEAR;if(e===THREE.LinearMipMapNearestFilter)return Nt.LINEAR_MIPMAP_NEAREST;if(e===THREE.LinearMipMapLinearFilter)return Nt.LINEAR_MIPMAP_LINEAR;if(e===THREE.UnsignedByteType)return Nt.UNSIGNED_BYTE;if(e===THREE.UnsignedShort4444Type)return Nt.UNSIGNED_SHORT_4_4_4_4;if(e===THREE.UnsignedShort5551Type)return Nt.UNSIGNED_SHORT_5_5_5_1;if(e===THREE.UnsignedShort565Type)return Nt.UNSIGNED_SHORT_5_6_5;if(e===THREE.ByteType)return Nt.BYTE;if(e===THREE.ShortType)return Nt.SHORT;if(e===THREE.UnsignedShortType)return Nt.UNSIGNED_SHORT;if(e===THREE.IntType)return Nt.INT;if(e===THREE.UnsignedIntType)return Nt.UNSIGNED_INT;if(e===THREE.FloatType)return Nt.FLOAT;if(e===THREE.AlphaFormat)return Nt.ALPHA;if(e===THREE.RGBFormat)return Nt.RGB;if(e===THREE.RGBAFormat)return Nt.RGBA;if(e===THREE.LuminanceFormat)return Nt.LUMINANCE;if(e===THREE.LuminanceAlphaFormat)return Nt.LUMINANCE_ALPHA;if(e===THREE.AddEquation)return Nt.FUNC_ADD;if(e===THREE.SubtractEquation)return Nt.FUNC_SUBTRACT;if(e===THREE.ReverseSubtractEquation)return Nt.FUNC_REVERSE_SUBTRACT;if(e===THREE.ZeroFactor)return Nt.ZERO;if(e===THREE.OneFactor)return Nt.ONE;if(e===THREE.SrcColorFactor)return Nt.SRC_COLOR;if(e===THREE.OneMinusSrcColorFactor)return Nt.ONE_MINUS_SRC_COLOR;if(e===THREE.SrcAlphaFactor)return Nt.SRC_ALPHA;if(e===THREE.OneMinusSrcAlphaFactor)return Nt.ONE_MINUS_SRC_ALPHA;if(e===THREE.DstAlphaFactor)return Nt.DST_ALPHA;if(e===THREE.OneMinusDstAlphaFactor)return Nt.ONE_MINUS_DST_ALPHA;if(e===THREE.DstColorFactor)return Nt.DST_COLOR;if(e===THREE.OneMinusDstColorFactor)return Nt.ONE_MINUS_DST_COLOR;if(e===THREE.SrcAlphaSaturateFactor)return Nt.SRC_ALPHA_SATURATE;if(void 0!==kt){if(e===THREE.RGB_S3TC_DXT1_Format)return kt.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT1_Format)return kt.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===THREE.RGBA_S3TC_DXT3_Format)return kt.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===THREE.RGBA_S3TC_DXT5_Format)return kt.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}function bt(e){if(Ar&&e&&e.useVertexTexture)return 1024;var t=Nt.getParameter(Nt.MAX_VERTEX_UNIFORM_VECTORS),r=Math.floor((t-20)/4),i=r;return void 0!==e&&e instanceof THREE.SkinnedMesh&&(i=Math.min(e.bones.length,i),e.bones.length>i&&console.warn("WebGLRenderer: too many bones - "+e.bones.length+", this GPU supports just "+i+" (try OpenGL instead of ANGLE)")),i}function wt(e){var t,r,i,n,a,o,s;for(n=a=o=s=0,t=0,r=e.length;r>t;t++)i=e[t],i.onlyShadow||(i instanceof THREE.DirectionalLight&&n++,i instanceof THREE.PointLight&&a++,i instanceof THREE.SpotLight&&o++,i instanceof THREE.HemisphereLight&&s++);return{directional:n,point:a,spot:o,hemi:s}}function _t(e){var t,r,i,n=0;for(t=0,r=e.length;r>t;t++)i=e[t],i.castShadow&&(i instanceof THREE.SpotLight&&n++,i instanceof THREE.DirectionalLight&&!i.shadowCascade&&n++);return n}function St(){try{if(!(Nt=Ct.getContext("experimental-webgl",{alpha:Lt,premultipliedAlpha:Pt,antialias:Dt,stencil:Ft,preserveDrawingBuffer:Ut})))throw"Error creating WebGL context."}catch(e){console.error(e)}It=Nt.getExtension("OES_texture_float"),Vt=Nt.getExtension("OES_standard_derivatives"),Ot=Nt.getExtension("EXT_texture_filter_anisotropic")||Nt.getExtension("MOZ_EXT_texture_filter_anisotropic")||Nt.getExtension("WEBKIT_EXT_texture_filter_anisotropic"),kt=Nt.getExtension("WEBGL_compressed_texture_s3tc")||Nt.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||Nt.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc"),It||console.log("THREE.WebGLRenderer: Float textures not supported."),Vt||console.log("THREE.WebGLRenderer: Standard derivatives not supported."),Ot||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported."),kt||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.")}function Mt(){Nt.clearColor(0,0,0,1),Nt.clearDepth(1),Nt.clearStencil(0),Nt.enable(Nt.DEPTH_TEST),Nt.depthFunc(Nt.LEQUAL),Nt.frontFace(Nt.CCW),Nt.cullFace(Nt.BACK),Nt.enable(Nt.CULL_FACE),Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.SRC_ALPHA,Nt.ONE_MINUS_SRC_ALPHA),Nt.clearColor(zt.r,zt.g,zt.b,Bt)}e=e||{};var Ct=void 0!==e.canvas?e.canvas:document.createElement("canvas"),At=void 0!==e.precision?e.precision:"highp",Lt=void 0!==e.alpha?e.alpha:!0,Pt=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,Dt=void 0!==e.antialias?e.antialias:!1,Ft=void 0!==e.stencil?e.stencil:!0,Ut=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,zt=void 0!==e.clearColor?new THREE.Color(e.clearColor):new THREE.Color(0),Bt=void 0!==e.clearAlpha?e.clearAlpha:0;this.domElement=Ct,this.context=null,this.devicePixelRatio=void 0!==e.devicePixelRatio?e.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.autoUpdateObjects=!0,this.autoUpdateScene=!0,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyBasedShading=!1,this.shadowMapEnabled=!1,this.shadowMapAutoUpdate=!0,this.shadowMapType=THREE.PCFShadowMap,this.shadowMapCullFace=THREE.CullFaceFront,this.shadowMapDebug=!1,this.shadowMapCascade=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0,this.renderPluginsPre=[],this.renderPluginsPost=[],this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var Nt,It,Vt,Ot,kt,Gt=this,jt=[],Wt=0,qt=null,Xt=null,Yt=-1,Kt=null,Jt=null,Qt=0,$t=0,Zt=-1,er=-1,tr=-1,rr=-1,ir=-1,nr=-1,ar=-1,or=-1,sr=null,lr=null,hr=null,cr=null,ur=0,fr=0,pr=0,dr=0,mr=0,Er=0,gr={},vr=new THREE.Frustum,yr=new THREE.Matrix4,Tr=new THREE.Matrix4,Rr=new THREE.Vector3,xr=new THREE.Vector3,Hr=!0,br={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}};St(),Mt(),this.context=Nt;var wr=Nt.getParameter(Nt.MAX_TEXTURE_IMAGE_UNITS),_r=Nt.getParameter(Nt.MAX_VERTEX_TEXTURE_IMAGE_UNITS);Nt.getParameter(Nt.MAX_TEXTURE_SIZE);var Sr=Nt.getParameter(Nt.MAX_CUBE_MAP_TEXTURE_SIZE),Mr=Ot?Nt.getParameter(Ot.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,Cr=_r>0,Ar=Cr&&It;kt?Nt.getParameter(Nt.COMPRESSED_TEXTURE_FORMATS):[];var Lr=Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.HIGH_FLOAT),Pr=Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.MEDIUM_FLOAT);Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.LOW_FLOAT);var Dr=Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.HIGH_FLOAT),Fr=Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.MEDIUM_FLOAT);Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.LOW_FLOAT),Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.HIGH_INT),Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.MEDIUM_INT),Nt.getShaderPrecisionFormat(Nt.VERTEX_SHADER,Nt.LOW_INT),Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.HIGH_INT),Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.MEDIUM_INT),Nt.getShaderPrecisionFormat(Nt.FRAGMENT_SHADER,Nt.LOW_INT);var Ur=Lr.precision>0&&Dr.precision>0,zr=Pr.precision>0&&Fr.precision>0;"highp"!==At||Ur||(zr?(At="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(At="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp"))),"mediump"!==At||zr||(At="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp")),this.getContext=function(){return Nt},this.supportsVertexTextures=function(){return Cr},this.supportsFloatTextures=function(){return It},this.supportsStandardDerivatives=function(){return Vt},this.supportsCompressedTextureS3TC=function(){return kt},this.getMaxAnisotropy=function(){return Mr},this.getPrecision=function(){return At},this.setSize=function(e,t){Ct.width=e*this.devicePixelRatio,Ct.height=t*this.devicePixelRatio,Ct.style.width=e+"px",Ct.style.height=t+"px",this.setViewport(0,0,Ct.width,Ct.height)},this.setViewport=function(e,t,r,i){ur=void 0!==e?e:0,fr=void 0!==t?t:0,pr=void 0!==r?r:Ct.width,dr=void 0!==i?i:Ct.height,Nt.viewport(ur,fr,pr,dr)},this.setScissor=function(e,t,r,i){Nt.scissor(e,t,r,i)},this.enableScissorTest=function(e){e?Nt.enable(Nt.SCISSOR_TEST):Nt.disable(Nt.SCISSOR_TEST)},this.setClearColorHex=function(e,t){zt.setHex(e),Bt=t,Nt.clearColor(zt.r,zt.g,zt.b,Bt)},this.setClearColor=function(e,t){zt.copy(e),Bt=t,Nt.clearColor(zt.r,zt.g,zt.b,Bt)},this.getClearColor=function(){return zt},this.getClearAlpha=function(){return Bt},this.clear=function(e,t,r){var i=0;(void 0===e||e)&&(i|=Nt.COLOR_BUFFER_BIT),(void 0===t||t)&&(i|=Nt.DEPTH_BUFFER_BIT),(void 0===r||r)&&(i|=Nt.STENCIL_BUFFER_BIT),Nt.clear(i)},this.clearTarget=function(e,t,r,i){this.setRenderTarget(e),this.clear(t,r,i)},this.addPostPlugin=function(e){e.init(this),this.renderPluginsPost.push(e)},this.addPrePlugin=function(e){e.init(this),this.renderPluginsPre.push(e)},this.updateShadowMap=function(e,t){qt=null,tr=-1,ar=-1,or=-1,Kt=-1,Yt=-1,Hr=!0,Zt=-1,er=-1,this.shadowMapPlugin.update(e,t)};var Br=function(e){var t=e.target;t.removeEventListener("dispose",Br),Or(t),Gt.info.memory.geometries--},Nr=function(e){var t=e.target;t.removeEventListener("dispose",Nr),kr(t),Gt.info.memory.textures--},Ir=function(e){var t=e.target;t.removeEventListener("dispose",Ir),Gr(t),Gt.info.memory.textures--},Vr=function(e){var t=e.target;t.removeEventListener("dispose",Vr),jr(t)},Or=function(e){if(e.__webglInit=void 0,void 0!==e.__webglVertexBuffer&&Nt.deleteBuffer(e.__webglVertexBuffer),void 0!==e.__webglNormalBuffer&&Nt.deleteBuffer(e.__webglNormalBuffer),void 0!==e.__webglTangentBuffer&&Nt.deleteBuffer(e.__webglTangentBuffer),void 0!==e.__webglColorBuffer&&Nt.deleteBuffer(e.__webglColorBuffer),void 0!==e.__webglUVBuffer&&Nt.deleteBuffer(e.__webglUVBuffer),void 0!==e.__webglUV2Buffer&&Nt.deleteBuffer(e.__webglUV2Buffer),void 0!==e.__webglSkinIndicesBuffer&&Nt.deleteBuffer(e.__webglSkinIndicesBuffer),void 0!==e.__webglSkinWeightsBuffer&&Nt.deleteBuffer(e.__webglSkinWeightsBuffer),void 0!==e.__webglFaceBuffer&&Nt.deleteBuffer(e.__webglFaceBuffer),void 0!==e.__webglLineBuffer&&Nt.deleteBuffer(e.__webglLineBuffer),void 0!==e.__webglLineDistanceBuffer&&Nt.deleteBuffer(e.__webglLineDistanceBuffer),void 0!==e.geometryGroups)for(var t in e.geometryGroups){var r=e.geometryGroups[t];if(void 0!==r.numMorphTargets)for(var i=0,n=r.numMorphTargets;n>i;i++)Nt.deleteBuffer(r.__webglMorphTargetsBuffers[i]);if(void 0!==r.numMorphNormals)for(var i=0,n=r.numMorphNormals;n>i;i++)Nt.deleteBuffer(r.__webglMorphNormalsBuffers[i]);a(r)}a(e)},kr=function(e){if(e.image&&e.image.__webglTextureCube)Nt.deleteTexture(e.image.__webglTextureCube);else{if(!e.__webglInit)return;e.__webglInit=!1,Nt.deleteTexture(e.__webglTexture)}},Gr=function(e){if(e&&e.__webglTexture)if(Nt.deleteTexture(e.__webglTexture),e instanceof THREE.WebGLRenderTargetCube)for(var t=0;6>t;t++)Nt.deleteFramebuffer(e.__webglFramebuffer[t]),Nt.deleteRenderbuffer(e.__webglRenderbuffer[t]);else Nt.deleteFramebuffer(e.__webglFramebuffer),Nt.deleteRenderbuffer(e.__webglRenderbuffer)},jr=function(e){var t=e.program;if(void 0!==t){e.program=void 0;var r,i,n,a=!1;for(r=0,i=jt.length;i>r;r++)if(n=jt[r],n.program===t){n.usedTimes--,0===n.usedTimes&&(a=!0);break}if(a===!0){var o=[];for(r=0,i=jt.length;i>r;r++)n=jt[r],n.program!==t&&o.push(n);jt=o,Nt.deleteProgram(t),Gt.info.memory.programs--}}};this.renderBufferImmediate=function(e,t,r){if(e.hasPositions&&!e.__webglVertexBuffer&&(e.__webglVertexBuffer=Nt.createBuffer()),e.hasNormals&&!e.__webglNormalBuffer&&(e.__webglNormalBuffer=Nt.createBuffer()),e.hasUvs&&!e.__webglUvBuffer&&(e.__webglUvBuffer=Nt.createBuffer()),e.hasColors&&!e.__webglColorBuffer&&(e.__webglColorBuffer=Nt.createBuffer()),e.hasPositions&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglVertexBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,e.positionArray,Nt.DYNAMIC_DRAW),Nt.enableVertexAttribArray(t.attributes.position),Nt.vertexAttribPointer(t.attributes.position,3,Nt.FLOAT,!1,0,0)),e.hasNormals){if(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglNormalBuffer),r.shading===THREE.FlatShading){var i,n,a,o,s,l,h,c,u,f,p,d,m,E,g=3*e.count;for(E=0;g>E;E+=9)m=e.normalArray,o=m[E],h=m[E+1],f=m[E+2],s=m[E+3],c=m[E+4],p=m[E+5],l=m[E+6],u=m[E+7],d=m[E+8],i=(o+s+l)/3,n=(h+c+u)/3,a=(f+p+d)/3,m[E]=i,m[E+1]=n,m[E+2]=a,m[E+3]=i,m[E+4]=n,m[E+5]=a,m[E+6]=i,m[E+7]=n,m[E+8]=a}Nt.bufferData(Nt.ARRAY_BUFFER,e.normalArray,Nt.DYNAMIC_DRAW),Nt.enableVertexAttribArray(t.attributes.normal),Nt.vertexAttribPointer(t.attributes.normal,3,Nt.FLOAT,!1,0,0)}e.hasUvs&&r.map&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglUvBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,e.uvArray,Nt.DYNAMIC_DRAW),Nt.enableVertexAttribArray(t.attributes.uv),Nt.vertexAttribPointer(t.attributes.uv,2,Nt.FLOAT,!1,0,0)),e.hasColors&&r.vertexColors!==THREE.NoColors&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,e.__webglColorBuffer),Nt.bufferData(Nt.ARRAY_BUFFER,e.colorArray,Nt.DYNAMIC_DRAW),Nt.enableVertexAttribArray(t.attributes.color),Nt.vertexAttribPointer(t.attributes.color,3,Nt.FLOAT,!1,0,0)),Nt.drawArrays(Nt.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,r,i,n,a){if(i.visible!==!1){var o,s;o=G(e,t,r,i,a),s=o.attributes;var l=!1,h=i.wireframe?1:0,c=16777215*n.id+2*o.id+h;if(c!==Kt&&(Kt=c,l=!0),l&&H(),a instanceof THREE.Mesh){var u=n.attributes.index;if(u){var f=n.offsets;f.length>1&&(l=!0);for(var p=0,d=f.length;d>p;p++){var m=f[p].index;if(l){var E=n.attributes.position,g=E.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,E.buffer),x(s.position),Nt.vertexAttribPointer(s.position,g,Nt.FLOAT,!1,0,4*m*g);var v=n.attributes.normal;if(s.normal>=0&&v){var y=v.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,v.buffer),x(s.normal),Nt.vertexAttribPointer(s.normal,y,Nt.FLOAT,!1,0,4*m*y)}var T=n.attributes.uv;if(s.uv>=0&&T){var R=T.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,T.buffer),x(s.uv),Nt.vertexAttribPointer(s.uv,R,Nt.FLOAT,!1,0,4*m*R)}var b=n.attributes.color;if(s.color>=0&&b){var w=b.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,b.buffer),x(s.color),Nt.vertexAttribPointer(s.color,w,Nt.FLOAT,!1,0,4*m*w)}var _=n.attributes.tangent;if(s.tangent>=0&&_){var S=_.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,_.buffer),x(s.tangent),Nt.vertexAttribPointer(s.tangent,S,Nt.FLOAT,!1,0,4*m*S)}Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,u.buffer)}Nt.drawElements(Nt.TRIANGLES,f[p].count,Nt.UNSIGNED_SHORT,2*f[p].start),Gt.info.render.calls++,Gt.info.render.vertices+=f[p].count,Gt.info.render.faces+=f[p].count/3}}else{if(l){var E=n.attributes.position,g=E.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,E.buffer),x(s.position),Nt.vertexAttribPointer(s.position,g,Nt.FLOAT,!1,0,0);var v=n.attributes.normal;if(s.normal>=0&&v){var y=v.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,v.buffer),x(s.normal),Nt.vertexAttribPointer(s.normal,y,Nt.FLOAT,!1,0,0)}var T=n.attributes.uv;if(s.uv>=0&&T){var R=T.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,T.buffer),x(s.uv),Nt.vertexAttribPointer(s.uv,R,Nt.FLOAT,!1,0,0)}var b=n.attributes.color;if(s.color>=0&&b){var w=b.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,b.buffer),x(s.color),Nt.vertexAttribPointer(s.color,w,Nt.FLOAT,!1,0,0)}var _=n.attributes.tangent;if(s.tangent>=0&&_){var S=_.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,_.buffer),x(s.tangent),Nt.vertexAttribPointer(s.tangent,S,Nt.FLOAT,!1,0,0)}}Nt.drawArrays(Nt.TRIANGLES,0,E.numItems/3),Gt.info.render.calls++,Gt.info.render.vertices+=E.numItems/3,Gt.info.render.faces+=E.numItems/3/3}}else if(a instanceof THREE.ParticleSystem){if(l){var E=n.attributes.position,g=E.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,E.buffer),x(s.position),Nt.vertexAttribPointer(s.position,g,Nt.FLOAT,!1,0,0);var b=n.attributes.color;if(s.color>=0&&b){var w=b.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,b.buffer),x(s.color),Nt.vertexAttribPointer(s.color,w,Nt.FLOAT,!1,0,0)}Nt.drawArrays(Nt.POINTS,0,E.numItems/3),Gt.info.render.calls++,Gt.info.render.points+=E.numItems/3}}else if(a instanceof THREE.Line&&l){var E=n.attributes.position,g=E.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,E.buffer),x(s.position),Nt.vertexAttribPointer(s.position,g,Nt.FLOAT,!1,0,0);var b=n.attributes.color;if(s.color>=0&&b){var w=b.itemSize;Nt.bindBuffer(Nt.ARRAY_BUFFER,b.buffer),x(s.color),Nt.vertexAttribPointer(s.color,w,Nt.FLOAT,!1,0,0)}Nt.drawArrays(Nt.LINE_STRIP,0,E.numItems/3),Gt.info.render.calls++,Gt.info.render.points+=E.numItems}}},this.renderBuffer=function(e,t,r,i,n,a){if(i.visible!==!1){var o,s,l,h,c,u;o=G(e,t,r,i,a),s=o.attributes;var f=!1,p=i.wireframe?1:0,d=16777215*n.id+2*o.id+p;if(d!==Kt&&(Kt=d,f=!0),f&&H(),!i.morphTargets&&s.position>=0?f&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglVertexBuffer),x(s.position),Nt.vertexAttribPointer(s.position,3,Nt.FLOAT,!1,0,0)):a.morphTargetBase&&b(i,n,a),f){if(n.__webglCustomAttributesList)for(c=0,u=n.__webglCustomAttributesList.length;u>c;c++)h=n.__webglCustomAttributesList[c],s[h.buffer.belongsToAttribute]>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,h.buffer),x(s[h.buffer.belongsToAttribute]),Nt.vertexAttribPointer(s[h.buffer.belongsToAttribute],h.size,Nt.FLOAT,!1,0,0));s.color>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglColorBuffer),x(s.color),Nt.vertexAttribPointer(s.color,3,Nt.FLOAT,!1,0,0)),s.normal>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglNormalBuffer),x(s.normal),Nt.vertexAttribPointer(s.normal,3,Nt.FLOAT,!1,0,0)),s.tangent>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglTangentBuffer),x(s.tangent),Nt.vertexAttribPointer(s.tangent,4,Nt.FLOAT,!1,0,0)),s.uv>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglUVBuffer),x(s.uv),Nt.vertexAttribPointer(s.uv,2,Nt.FLOAT,!1,0,0)),s.uv2>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglUV2Buffer),x(s.uv2),Nt.vertexAttribPointer(s.uv2,2,Nt.FLOAT,!1,0,0)),i.skinning&&s.skinIndex>=0&&s.skinWeight>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglSkinIndicesBuffer),x(s.skinIndex),Nt.vertexAttribPointer(s.skinIndex,4,Nt.FLOAT,!1,0,0),Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglSkinWeightsBuffer),x(s.skinWeight),Nt.vertexAttribPointer(s.skinWeight,4,Nt.FLOAT,!1,0,0)),s.lineDistance>=0&&(Nt.bindBuffer(Nt.ARRAY_BUFFER,n.__webglLineDistanceBuffer),x(s.lineDistance),Nt.vertexAttribPointer(s.lineDistance,1,Nt.FLOAT,!1,0,0))
}a instanceof THREE.Mesh?(i.wireframe?(ot(i.wireframeLinewidth),f&&Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,n.__webglLineBuffer),Nt.drawElements(Nt.LINES,n.__webglLineCount,Nt.UNSIGNED_SHORT,0)):(f&&Nt.bindBuffer(Nt.ELEMENT_ARRAY_BUFFER,n.__webglFaceBuffer),Nt.drawElements(Nt.TRIANGLES,n.__webglFaceCount,Nt.UNSIGNED_SHORT,0)),Gt.info.render.calls++,Gt.info.render.vertices+=n.__webglFaceCount,Gt.info.render.faces+=n.__webglFaceCount/3):a instanceof THREE.Line?(l=a.type===THREE.LineStrip?Nt.LINE_STRIP:Nt.LINES,ot(i.linewidth),Nt.drawArrays(l,0,n.__webglLineCount),Gt.info.render.calls++):a instanceof THREE.ParticleSystem?(Nt.drawArrays(Nt.POINTS,0,n.__webglParticleCount),Gt.info.render.calls++,Gt.info.render.points+=n.__webglParticleCount):a instanceof THREE.Ribbon&&(Nt.drawArrays(Nt.TRIANGLE_STRIP,0,n.__webglVertexCount),Gt.info.render.calls++)}},this.render=function(e,t,r,i){if(t instanceof THREE.Camera==!1)return console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera."),void 0;var n,a,o,s,l,h=e.__lights,c=e.fog;for(Yt=-1,Hr=!0,this.autoUpdateScene&&e.updateMatrixWorld(),void 0===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),yr.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),vr.setFromMatrix(yr),this.autoUpdateObjects&&this.initWebGLObjects(e),S(this.renderPluginsPre,e,t),Gt.info.render.calls=0,Gt.info.render.vertices=0,Gt.info.render.faces=0,Gt.info.render.points=0,this.setRenderTarget(r),(this.autoClear||i)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),l=e.__webglObjects,n=0,a=l.length;a>n;n++)o=l[n],s=o.object,o.render=!1,s.visible&&((s instanceof THREE.Mesh||s instanceof THREE.ParticleSystem)&&s.frustumCulled&&!vr.intersectsObject(s)||(rt(s,t),L(o),o.render=!0,this.sortObjects===!0&&(null!==s.renderDepth?o.z=s.renderDepth:(Rr.copy(s.matrixWorld.getPosition()),Rr.applyProjection(yr),o.z=Rr.z),o.id=s.id)));for(this.sortObjects&&l.sort(w),l=e.__webglObjectsImmediate,n=0,a=l.length;a>n;n++)o=l[n],s=o.object,s.visible&&(rt(s,t),A(o));if(e.overrideMaterial){var u=e.overrideMaterial;this.setBlending(u.blending,u.blendEquation,u.blendSrc,u.blendDst),this.setDepthTest(u.depthTest),this.setDepthWrite(u.depthWrite),st(u.polygonOffset,u.polygonOffsetFactor,u.polygonOffsetUnits),M(e.__webglObjects,!1,"",t,h,c,!0,u),C(e.__webglObjectsImmediate,"",t,h,c,!1,u)}else{var u=null;this.setBlending(THREE.NoBlending),M(e.__webglObjects,!0,"opaque",t,h,c,!1,u),C(e.__webglObjectsImmediate,"opaque",t,h,c,!1,u),M(e.__webglObjects,!1,"transparent",t,h,c,!0,u),C(e.__webglObjectsImmediate,"transparent",t,h,c,!0,u)}S(this.renderPluginsPost,e,t),r&&r.generateMipmaps&&r.minFilter!==THREE.NearestFilter&&r.minFilter!==THREE.LinearFilter&&Rt(r),this.setDepthTest(!0),this.setDepthWrite(!0)},this.renderImmediateObject=function(e,t,r,i,n){var a=G(e,t,r,i,n);Kt=-1,Gt.setMaterialFaces(i),n.immediateRenderCallback?n.immediateRenderCallback(a,Nt,vr):n.render(function(e){Gt.renderBufferImmediate(e,a,i)})},this.initWebGLObjects=function(e){for(e.__webglObjects||(e.__webglObjects=[],e.__webglObjectsImmediate=[],e.__webglSprites=[],e.__webglFlares=[]);e.__objectsAdded.length;)D(e.__objectsAdded[0],e),e.__objectsAdded.splice(0,1);for(;e.__objectsRemoved.length;)I(e.__objectsRemoved[0],e),e.__objectsRemoved.splice(0,1);for(var t=0,r=e.__webglObjects.length;r>t;t++)z(e.__webglObjects[t].object)},this.initMaterial=function(e,t,r,i){e.addEventListener("dispose",Vr);var n,a,o,s,l,h,c;e instanceof THREE.MeshDepthMaterial?c="depth":e instanceof THREE.MeshNormalMaterial?c="normal":e instanceof THREE.MeshBasicMaterial?c="basic":e instanceof THREE.MeshLambertMaterial?c="lambert":e instanceof THREE.MeshPhongMaterial?c="phong":e instanceof THREE.LineBasicMaterial?c="basic":e instanceof THREE.LineDashedMaterial?c="dashed":e instanceof THREE.ParticleBasicMaterial&&(c="particle_basic"),c&&k(e,THREE.ShaderLib[c]),s=wt(t),h=_t(t),l=bt(i),o={map:!!e.map,envMap:!!e.envMap,lightMap:!!e.lightMap,bumpMap:!!e.bumpMap,normalMap:!!e.normalMap,specularMap:!!e.specularMap,vertexColors:e.vertexColors,fog:r,useFog:e.fog,fogExp:r instanceof THREE.FogExp2,sizeAttenuation:e.sizeAttenuation,skinning:e.skinning,maxBones:l,useVertexTexture:Ar&&i&&i.useVertexTexture,boneTextureWidth:i&&i.boneTextureWidth,boneTextureHeight:i&&i.boneTextureHeight,morphTargets:e.morphTargets,morphNormals:e.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:s.directional,maxPointLights:s.point,maxSpotLights:s.spot,maxHemiLights:s.hemi,maxShadows:h,shadowMapEnabled:this.shadowMapEnabled&&i.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:e.alphaTest,metal:e.metal,perPixel:e.perPixel,wrapAround:e.wrapAround,doubleSided:e.side===THREE.DoubleSide,flipSided:e.side===THREE.BackSide},e.program=ht(c,e.fragmentShader,e.vertexShader,e.uniforms,e.attributes,e.defines,o);var u=e.program.attributes;if(e.morphTargets){e.numSupportedMorphTargets=0;var f,p="morphTarget";for(a=0;this.maxMorphTargets>a;a++)f=p+a,u[f]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals){e.numSupportedMorphNormals=0;var f,p="morphNormal";for(a=0;this.maxMorphNormals>a;a++)f=p+a,u[f]>=0&&e.numSupportedMorphNormals++}e.uniformsList=[];for(n in e.uniforms)e.uniformsList.push([e.uniforms[n],n])},this.setFaceCulling=function(e,t){e===THREE.CullFaceNone?Nt.disable(Nt.CULL_FACE):(t===THREE.FrontFaceDirectionCW?Nt.frontFace(Nt.CW):Nt.frontFace(Nt.CCW),e===THREE.CullFaceBack?Nt.cullFace(Nt.BACK):e===THREE.CullFaceFront?Nt.cullFace(Nt.FRONT):Nt.cullFace(Nt.FRONT_AND_BACK),Nt.enable(Nt.CULL_FACE))},this.setMaterialFaces=function(e){var t=e.side===THREE.DoubleSide,r=e.side===THREE.BackSide;Zt!==t&&(t?Nt.disable(Nt.CULL_FACE):Nt.enable(Nt.CULL_FACE),Zt=t),er!==r&&(r?Nt.frontFace(Nt.CW):Nt.frontFace(Nt.CCW),er=r)},this.setDepthTest=function(e){ar!==e&&(e?Nt.enable(Nt.DEPTH_TEST):Nt.disable(Nt.DEPTH_TEST),ar=e)},this.setDepthWrite=function(e){or!==e&&(Nt.depthMask(e),or=e)},this.setBlending=function(e,t,r,i){e!==tr&&(e===THREE.NoBlending?Nt.disable(Nt.BLEND):e===THREE.AdditiveBlending?(Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.SRC_ALPHA,Nt.ONE)):e===THREE.SubtractiveBlending?(Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.ZERO,Nt.ONE_MINUS_SRC_COLOR)):e===THREE.MultiplyBlending?(Nt.enable(Nt.BLEND),Nt.blendEquation(Nt.FUNC_ADD),Nt.blendFunc(Nt.ZERO,Nt.SRC_COLOR)):e===THREE.CustomBlending?Nt.enable(Nt.BLEND):(Nt.enable(Nt.BLEND),Nt.blendEquationSeparate(Nt.FUNC_ADD,Nt.FUNC_ADD),Nt.blendFuncSeparate(Nt.SRC_ALPHA,Nt.ONE_MINUS_SRC_ALPHA,Nt.ONE,Nt.ONE_MINUS_SRC_ALPHA)),tr=e),e===THREE.CustomBlending?(t!==rr&&(Nt.blendEquation(Ht(t)),rr=t),(r!==ir||i!==nr)&&(Nt.blendFunc(Ht(r),Ht(i)),ir=r,nr=i)):(rr=null,ir=null,nr=null)},this.setTexture=function(e,t){if(e.needsUpdate){e.__webglInit||(e.__webglInit=!0,e.addEventListener("dispose",Nr),e.__webglTexture=Nt.createTexture(),Gt.info.memory.textures++),Nt.activeTexture(Nt.TEXTURE0+t),Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture),Nt.pixelStorei(Nt.UNPACK_FLIP_Y_WEBGL,e.flipY),Nt.pixelStorei(Nt.UNPACK_PREMULTIPLY_ALPHA_WEBGL,e.premultiplyAlpha),Nt.pixelStorei(Nt.UNPACK_ALIGNMENT,e.unpackAlignment);var r=e.image,i=dt(r.width)&&dt(r.height),n=Ht(e.format),a=Ht(e.type);mt(Nt.TEXTURE_2D,e,i);var o,s=e.mipmaps;if(e instanceof THREE.DataTexture)if(s.length>0&&i){for(var l=0,h=s.length;h>l;l++)o=s[l],Nt.texImage2D(Nt.TEXTURE_2D,l,n,o.width,o.height,0,n,a,o.data);e.generateMipmaps=!1}else Nt.texImage2D(Nt.TEXTURE_2D,0,n,r.width,r.height,0,n,a,r.data);else if(e instanceof THREE.CompressedTexture)for(var l=0,h=s.length;h>l;l++)o=s[l],Nt.compressedTexImage2D(Nt.TEXTURE_2D,l,n,o.width,o.height,0,o.data);else if(s.length>0&&i){for(var l=0,h=s.length;h>l;l++)o=s[l],Nt.texImage2D(Nt.TEXTURE_2D,l,n,n,a,o);e.generateMipmaps=!1}else Nt.texImage2D(Nt.TEXTURE_2D,0,n,n,a,e.image);e.generateMipmaps&&i&&Nt.generateMipmap(Nt.TEXTURE_2D),e.needsUpdate=!1,e.onUpdate&&e.onUpdate()}else Nt.activeTexture(Nt.TEXTURE0+t),Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof THREE.WebGLRenderTargetCube;if(e&&!e.__webglFramebuffer){void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",Ir),e.__webglTexture=Nt.createTexture(),Gt.info.memory.textures++;var r=dt(e.width)&&dt(e.height),i=Ht(e.format),n=Ht(e.type);if(t){e.__webglFramebuffer=[],e.__webglRenderbuffer=[],Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,e.__webglTexture),mt(Nt.TEXTURE_CUBE_MAP,e,r);for(var a=0;6>a;a++)e.__webglFramebuffer[a]=Nt.createFramebuffer(),e.__webglRenderbuffer[a]=Nt.createRenderbuffer(),Nt.texImage2D(Nt.TEXTURE_CUBE_MAP_POSITIVE_X+a,0,i,e.width,e.height,0,i,n,null),yt(e.__webglFramebuffer[a],e,Nt.TEXTURE_CUBE_MAP_POSITIVE_X+a),Tt(e.__webglRenderbuffer[a],e);r&&Nt.generateMipmap(Nt.TEXTURE_CUBE_MAP)}else e.__webglFramebuffer=Nt.createFramebuffer(),e.__webglRenderbuffer=e.shareDepthFrom?e.shareDepthFrom.__webglRenderbuffer:Nt.createRenderbuffer(),Nt.bindTexture(Nt.TEXTURE_2D,e.__webglTexture),mt(Nt.TEXTURE_2D,e,r),Nt.texImage2D(Nt.TEXTURE_2D,0,i,e.width,e.height,0,i,n,null),yt(e.__webglFramebuffer,e,Nt.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_ATTACHMENT,Nt.RENDERBUFFER,e.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Nt.framebufferRenderbuffer(Nt.FRAMEBUFFER,Nt.DEPTH_STENCIL_ATTACHMENT,Nt.RENDERBUFFER,e.__webglRenderbuffer):Tt(e.__webglRenderbuffer,e),r&&Nt.generateMipmap(Nt.TEXTURE_2D);t?Nt.bindTexture(Nt.TEXTURE_CUBE_MAP,null):Nt.bindTexture(Nt.TEXTURE_2D,null),Nt.bindRenderbuffer(Nt.RENDERBUFFER,null),Nt.bindFramebuffer(Nt.FRAMEBUFFER,null)}var o,s,l,h,c;e?(o=t?e.__webglFramebuffer[e.activeCubeFace]:e.__webglFramebuffer,s=e.width,l=e.height,h=0,c=0):(o=null,s=pr,l=dr,h=ur,c=fr),o!==Xt&&(Nt.bindFramebuffer(Nt.FRAMEBUFFER,o),Nt.viewport(h,c,s,l),Xt=o),mr=s,Er=l},this.shadowMapPlugin=new THREE.ShadowMapPlugin,this.addPrePlugin(this.shadowMapPlugin),this.addPostPlugin(new THREE.SpritePlugin),this.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(e,t,r){THREE.EventDispatcher.call(this),this.width=e,this.height=t,r=r||{},this.wrapS=void 0!==r.wrapS?r.wrapS:THREE.ClampToEdgeWrapping,this.wrapT=void 0!==r.wrapT?r.wrapT:THREE.ClampToEdgeWrapping,this.magFilter=void 0!==r.magFilter?r.magFilter:THREE.LinearFilter,this.minFilter=void 0!==r.minFilter?r.minFilter:THREE.LinearMipMapLinearFilter,this.anisotropy=void 0!==r.anisotropy?r.anisotropy:1,this.offset=new THREE.Vector2(0,0),this.repeat=new THREE.Vector2(1,1),this.format=void 0!==r.format?r.format:THREE.RGBAFormat,this.type=void 0!==r.type?r.type:THREE.UnsignedByteType,this.depthBuffer=void 0!==r.depthBuffer?r.depthBuffer:!0,this.stencilBuffer=void 0!==r.stencilBuffer?r.stencilBuffer:!0,this.generateMipmaps=!0,this.shareDepthFrom=null},THREE.WebGLRenderTarget.prototype.clone=function(){var e=new THREE.WebGLRenderTarget(this.width,this.height);return e.wrapS=this.wrapS,e.wrapT=this.wrapT,e.magFilter=this.magFilter,e.minFilter=this.minFilter,e.anisotropy=this.anisotropy,e.offset.copy(this.offset),e.repeat.copy(this.repeat),e.format=this.format,e.type=this.type,e.depthBuffer=this.depthBuffer,e.stencilBuffer=this.stencilBuffer,e.generateMipmaps=this.generateMipmaps,e.shareDepthFrom=this.shareDepthFrom,e},THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})},THREE.WebGLRenderTargetCube=function(e,t,r){THREE.WebGLRenderTarget.call(this,e,t,r),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype),THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(e){this.positionWorld.copy(e.positionWorld),this.positionScreen.copy(e.positionScreen)},THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.v3=new THREE.RenderableVertex,this.v4=new THREE.RenderableVertex,this.centroidModel=new THREE.Vector3,this.normalModel=new THREE.Vector3,this.normalModelView=new THREE.Vector3,this.vertexNormalsLength=0,this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],this.color=null,this.material=null,this.uvs=[[]],this.z=null},THREE.RenderableObject=function(){this.object=null,this.z=null},THREE.RenderableParticle=function(){this.object=null,this.x=null,this.y=null,this.z=null,this.rotation=null,this.scale=new THREE.Vector2,this.material=null},THREE.RenderableLine=function(){this.z=null,this.v1=new THREE.RenderableVertex,this.v2=new THREE.RenderableVertex,this.material=null},THREE.ColorUtils={adjustHSV:function(e,t,r,i){var n=THREE.ColorUtils.__hsv;e.getHSV(n),n.h=THREE.Math.clamp(n.h+t,0,1),n.s=THREE.Math.clamp(n.s+r,0,1),n.v=THREE.Math.clamp(n.v+i,0,1),e.setHSV(n.h,n.s,n.v)}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(e,t){var r,i,n=e.vertices.length,a=(e.faceVertexUvs[0].length,t instanceof THREE.Mesh?t.geometry:t),o=e.vertices,s=a.vertices,l=e.faces,h=a.faces,c=e.faceVertexUvs[0],u=a.faceVertexUvs[0];t instanceof THREE.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,i=new THREE.Matrix3,i.getInverse(r),i.transpose());for(var f=0,p=s.length;p>f;f++){var d=s[f],m=d.clone();r&&m.applyMatrix4(r),o.push(m)}for(f=0,p=h.length;p>f;f++){var E,g,v,y=h[f],T=y.vertexNormals,R=y.vertexColors;y instanceof THREE.Face3?E=new THREE.Face3(y.a+n,y.b+n,y.c+n):y instanceof THREE.Face4&&(E=new THREE.Face4(y.a+n,y.b+n,y.c+n,y.d+n)),E.normal.copy(y.normal),i&&E.normal.applyMatrix3(i).normalize();for(var x=0,H=T.length;H>x;x++)g=T[x].clone(),i&&g.applyMatrix3(i).normalize(),E.vertexNormals.push(g);E.color.copy(y.color);for(var x=0,H=R.length;H>x;x++)v=R[x],E.vertexColors.push(v.clone());E.materialIndex=y.materialIndex,E.centroid.copy(y.centroid),r&&E.centroid.applyMatrix4(r),l.push(E)}for(f=0,p=u.length;p>f;f++){for(var b=u[f],w=[],x=0,H=b.length;H>x;x++)w.push(new THREE.Vector2(b[x].x,b[x].y));c.push(w)}},removeMaterials:function(e,t){for(var r={},i=0,n=t.length;n>i;i++)r[t[i]]=!0;for(var a,o=[],i=0,n=e.faces.length;n>i;i++)a=e.faces[i],a.materialIndex in r||o.push(a);e.faces=o},randomPointInTriangle:function(e,t,r){var i,n,a,o=new THREE.Vector3,s=THREE.GeometryUtils.__v1;return i=THREE.GeometryUtils.random(),n=THREE.GeometryUtils.random(),i+n>1&&(i=1-i,n=1-n),a=1-i-n,o.copy(e),o.multiplyScalar(i),s.copy(t),s.multiplyScalar(n),o.add(s),s.copy(r),s.multiplyScalar(a),o.add(s),o},randomPointInFace:function(e,t,r){var i,n,a,o;if(e instanceof THREE.Face3)return i=t.vertices[e.a],n=t.vertices[e.b],a=t.vertices[e.c],THREE.GeometryUtils.randomPointInTriangle(i,n,a);if(e instanceof THREE.Face4){i=t.vertices[e.a],n=t.vertices[e.b],a=t.vertices[e.c],o=t.vertices[e.d];var s,l;r?e._area1&&e._area2?(s=e._area1,l=e._area2):(s=THREE.GeometryUtils.triangleArea(i,n,o),l=THREE.GeometryUtils.triangleArea(n,a,o),e._area1=s,e._area2=l):(s=THREE.GeometryUtils.triangleArea(i,n,o),l=THREE.GeometryUtils.triangleArea(n,a,o));var h=THREE.GeometryUtils.random()*(s+l);return s>h?THREE.GeometryUtils.randomPointInTriangle(i,n,o):THREE.GeometryUtils.randomPointInTriangle(n,a,o)}},randomPointsInGeometry:function(e,t){function r(e){function t(r,i){if(r>i)return r;var n=r+Math.floor((i-r)/2);return p[n]>e?t(r,n-1):e>p[n]?t(n+1,i):n}var r=t(0,p.length-1);return r}var i,n,a,o,s,l,h=e.faces,c=e.vertices,u=h.length,f=0,p=[];for(n=0;u>n;n++)i=h[n],i instanceof THREE.Face3?(a=c[i.a],o=c[i.b],s=c[i.c],i._area=THREE.GeometryUtils.triangleArea(a,o,s)):i instanceof THREE.Face4&&(a=c[i.a],o=c[i.b],s=c[i.c],l=c[i.d],i._area1=THREE.GeometryUtils.triangleArea(a,o,l),i._area2=THREE.GeometryUtils.triangleArea(o,s,l),i._area=i._area1+i._area2),f+=i._area,p[n]=f;var d,m,E=[],g={};for(n=0;t>n;n++)d=THREE.GeometryUtils.random()*f,m=r(d),E[n]=THREE.GeometryUtils.randomPointInFace(h[m],e,!0),g[m]?g[m]+=1:g[m]=1;return E},triangleArea:function(e,t,r){var i=THREE.GeometryUtils.__v1,n=THREE.GeometryUtils.__v2;return i.subVectors(t,e),n.subVectors(r,e),i.cross(n),.5*i.length()},center:function(e){e.computeBoundingBox();var t=e.boundingBox,r=new THREE.Vector3;return r.addVectors(t.min,t.max),r.multiplyScalar(-.5),e.applyMatrix((new THREE.Matrix4).makeTranslation(r.x,r.y,r.z)),e.computeBoundingBox(),r},normalizeUVs:function(e){for(var t=e.faceVertexUvs[0],r=0,i=t.length;i>r;r++)for(var n=t[r],a=0,o=n.length;o>a;a++)1!==n[a].x&&(n[a].x=n[a].x-Math.floor(n[a].x)),1!==n[a].y&&(n[a].y=n[a].y-Math.floor(n[a].y))},triangulateQuads:function(e){var t,r,i,n,a=[],o=[],s=[];for(t=0,r=e.faceUvs.length;r>t;t++)o[t]=[];for(t=0,r=e.faceVertexUvs.length;r>t;t++)s[t]=[];for(t=0,r=e.faces.length;r>t;t++){var l=e.faces[t];if(l instanceof THREE.Face4){var h=l.a,c=l.b,u=l.c,f=l.d,p=new THREE.Face3,d=new THREE.Face3;for(p.color.copy(l.color),d.color.copy(l.color),p.materialIndex=l.materialIndex,d.materialIndex=l.materialIndex,p.a=h,p.b=c,p.c=f,d.a=c,d.b=u,d.c=f,4===l.vertexColors.length&&(p.vertexColors[0]=l.vertexColors[0].clone(),p.vertexColors[1]=l.vertexColors[1].clone(),p.vertexColors[2]=l.vertexColors[3].clone(),d.vertexColors[0]=l.vertexColors[1].clone(),d.vertexColors[1]=l.vertexColors[2].clone(),d.vertexColors[2]=l.vertexColors[3].clone()),a.push(p,d),i=0,n=e.faceVertexUvs.length;n>i;i++)if(e.faceVertexUvs[i].length){var m=e.faceVertexUvs[i][t],E=m[0],g=m[1],v=m[2],y=m[3],T=[E.clone(),g.clone(),y.clone()],R=[g.clone(),v.clone(),y.clone()];s[i].push(T,R)}for(i=0,n=e.faceUvs.length;n>i;i++)if(e.faceUvs[i].length){var x=e.faceUvs[i][t];o[i].push(x,x)}}else{for(a.push(l),i=0,n=e.faceUvs.length;n>i;i++)o[i].push(e.faceUvs[i][t]);for(i=0,n=e.faceVertexUvs.length;n>i;i++)s[i].push(e.faceVertexUvs[i][t])}}e.faces=a,e.faceUvs=o,e.faceVertexUvs=s,e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals(),e.hasTangents&&e.computeTangents()},setMaterialIndex:function(e,t,r,i){for(var n=e.faces,a=r||0,o=i||n.length-1,s=a;o>=s;s++)n[s].materialIndex=t}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.GeometryUtils.__v2=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(e,t,r,i){var n=new Image,a=new THREE.Texture(n,t),o=new THREE.ImageLoader;return o.addEventListener("load",function(e){a.image=e.content,a.needsUpdate=!0,r&&r(a)}),o.addEventListener("error",function(e){i&&i(e.message)}),o.crossOrigin=this.crossOrigin,o.load(e,n),a.sourceFile=e,a},loadCompressedTexture:function(e,t,r,i){var n=new THREE.CompressedTexture;n.mapping=t;var a=new XMLHttpRequest;return a.onload=function(){var e=a.response,t=THREE.ImageUtils.parseDDS(e,!0);n.format=t.format,n.mipmaps=t.mipmaps,n.image.width=t.width,n.image.height=t.height,n.generateMipmaps=!1,n.needsUpdate=!0,r&&r(n)},a.onerror=i,a.open("GET",e,!0),a.responseType="arraybuffer",a.send(null),n},loadTextureCube:function(e,t,r,i){var n=[];n.loadCount=0;var a=new THREE.Texture;a.image=n,void 0!==t&&(a.mapping=t),a.flipY=!1;for(var o=0,s=e.length;s>o;++o){var l=new Image;n[o]=l,l.onload=function(){n.loadCount+=1,6===n.loadCount&&(a.needsUpdate=!0,r&&r(a))},l.onerror=i,l.crossOrigin=this.crossOrigin,l.src=e[o]}return a},loadCompressedTextureCube:function(e,t,r,i){var n=[];n.loadCount=0;var a=new THREE.CompressedTexture;a.image=n,void 0!==t&&(a.mapping=t),a.flipY=!1,a.generateMipmaps=!1;var o=function(e,t){return function(){var i=e.response,o=THREE.ImageUtils.parseDDS(i,!0);t.format=o.format,t.mipmaps=o.mipmaps,t.width=o.width,t.height=o.height,n.loadCount+=1,6===n.loadCount&&(a.format=o.format,a.needsUpdate=!0,r&&r(a))}};if(e instanceof Array)for(var s=0,l=e.length;l>s;++s){var h={};n[s]=h;var c=new XMLHttpRequest;c.onload=o(c,h),c.onerror=i;var u=e[s];c.open("GET",u,!0),c.responseType="arraybuffer",c.send(null)}else{var u=e,c=new XMLHttpRequest;c.onload=function(){var e=c.response,t=THREE.ImageUtils.parseDDS(e,!0);if(t.isCubemap){for(var i=t.mipmaps.length/t.mipmapCount,o=0;i>o;o++){n[o]={mipmaps:[]};for(var s=0;t.mipmapCount>s;s++)n[o].mipmaps.push(t.mipmaps[o*t.mipmapCount+s]),n[o].format=t.format,n[o].width=t.width,n[o].height=t.height}a.format=t.format,a.needsUpdate=!0,r&&r(a)}},c.onerror=i,c.open("GET",u,!0),c.responseType="arraybuffer",c.send(null)}return a},parseDDS:function(e,t){function r(e){return e.charCodeAt(0)+(e.charCodeAt(1)<<8)+(e.charCodeAt(2)<<16)+(e.charCodeAt(3)<<24)}function i(e){return String.fromCharCode(255&e,255&e>>8,255&e>>16,255&e>>24)}var n={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},a=542327876,o=131072,s=512,l=4,h=r("DXT1"),c=r("DXT3"),u=r("DXT5"),f=31,p=0,d=1,m=2,E=3,g=4,v=7,y=20,T=21,R=28,x=new Int32Array(e,0,f);if(x[p]!==a)return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),n;if(!x[y]&l)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),n;var H,b=x[T];switch(b){case h:H=8,n.format=THREE.RGB_S3TC_DXT1_Format;break;case c:H=16,n.format=THREE.RGBA_S3TC_DXT3_Format;break;case u:H=16,n.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",i(b)),n}n.mipmapCount=1,x[m]&o&&t!==!1&&(n.mipmapCount=Math.max(1,x[v])),n.isCubemap=x[R]&s?!0:!1,n.width=x[g],n.height=x[E];for(var w=x[d]+4,_=n.width,S=n.height,M=n.isCubemap?6:1,C=0;M>C;C++){for(var A=0;n.mipmapCount>A;A++){var L=Math.max(4,_)/4*Math.max(4,S)/4*H,P=new Uint8Array(e,w,L),D={data:P,width:_,height:S};n.mipmaps.push(D),w+=L,_=Math.max(.5*_,1),S=Math.max(.5*S,1)}_=n.width,S=n.height}return n},getNormalMap:function(e,t){var r=function(e,t){return[e[1]*t[2]-e[2]*t[1],e[2]*t[0]-e[0]*t[2],e[0]*t[1]-e[1]*t[0]]},i=function(e,t){return[e[0]-t[0],e[1]-t[1],e[2]-t[2]]},n=function(e){var t=Math.sqrt(e[0]*e[0]+e[1]*e[1]+e[2]*e[2]);return[e[0]/t,e[1]/t,e[2]/t]};t=1|t;var a=e.width,o=e.height,s=document.createElement("canvas");s.width=a,s.height=o;var l=s.getContext("2d");l.drawImage(e,0,0);for(var h=l.getImageData(0,0,a,o).data,c=l.createImageData(a,o),u=c.data,f=0;a>f;f++)for(var p=0;o>p;p++){var d=0>p-1?0:p-1,m=p+1>o-1?o-1:p+1,E=0>f-1?0:f-1,g=f+1>a-1?a-1:f+1,v=[],y=[0,0,h[4*(p*a+f)]/255*t];v.push([-1,0,h[4*(p*a+E)]/255*t]),v.push([-1,-1,h[4*(d*a+E)]/255*t]),v.push([0,-1,h[4*(d*a+f)]/255*t]),v.push([1,-1,h[4*(d*a+g)]/255*t]),v.push([1,0,h[4*(p*a+g)]/255*t]),v.push([1,1,h[4*(m*a+g)]/255*t]),v.push([0,1,h[4*(m*a+f)]/255*t]),v.push([-1,1,h[4*(m*a+E)]/255*t]);for(var T=[],R=v.length,x=0;R>x;x++){var H=v[x],b=v[(x+1)%R];H=i(H,y),b=i(b,y),T.push(n(r(H,b)))}for(var w=[0,0,0],x=0;T.length>x;x++)w[0]+=T[x][0],w[1]+=T[x][1],w[2]+=T[x][2];w[0]/=T.length,w[1]/=T.length,w[2]/=T.length;var _=4*(p*a+f);u[_]=0|255*((w[0]+1)/2),u[_+1]=0|255*((w[1]+1)/2),u[_+2]=0|255*w[2],u[_+3]=255}return l.putImageData(c,0,0),s},generateDataTexture:function(e,t,r){for(var i=e*t,n=new Uint8Array(3*i),a=Math.floor(255*r.r),o=Math.floor(255*r.g),s=Math.floor(255*r.b),l=0;i>l;l++)n[3*l]=a,n[3*l+1]=o,n[3*l+2]=s;var h=new THREE.DataTexture(n,e,t,THREE.RGBFormat);return h.needsUpdate=!0,h}},THREE.SceneUtils={createMultiMaterialObject:function(e,t){for(var r=new THREE.Object3D,i=0,n=t.length;n>i;i++)r.add(new THREE.Mesh(e,t[i]));return r},detach:function(e,t,r){e.applyMatrix(t.matrixWorld),t.remove(e),r.add(e)},attach:function(e,t,r){var i=new THREE.Matrix4;i.getInverse(r.matrixWorld),e.applyMatrix(i),t.remove(e),r.add(e)}},THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(e){var t=e.familyName.toLowerCase(),r=this;return r.faces[t]=r.faces[t]||{},r.faces[t][e.cssFontWeight]=r.faces[t][e.cssFontWeight]||{},r.faces[t][e.cssFontWeight][e.cssFontStyle]=e,r.faces[t][e.cssFontWeight][e.cssFontStyle]=e,e},drawText:function(e){var t,r=this.getFace(),i=this.size/r.resolution,n=0,a=(e+"").split(""),o=a.length,s=[];for(t=0;o>t;t++){var l=new THREE.Path,h=this.extractGlyphPoints(a[t],r,i,n,l);n+=h.offset,s.push(h.path)}var c=n/2;return{paths:s,offset:c}},extractGlyphPoints:function(e,t,r,i,n){var a,o,s,l,h,c,u,f,p,d,m,E,g,v,y,T,R,x,H,b=[],w=t.glyphs[e]||t.glyphs["?"];if(w){if(w.o)for(l=w._cachedOutline||(w._cachedOutline=w.o.split(" ")),c=l.length,u=r,f=r,a=0;c>a;)switch(h=l[a++]){case"m":p=l[a++]*u+i,d=l[a++]*f,n.moveTo(p,d);break;case"l":p=l[a++]*u+i,d=l[a++]*f,n.lineTo(p,d);break;case"q":if(m=l[a++]*u+i,E=l[a++]*f,y=l[a++]*u+i,T=l[a++]*f,n.quadraticCurveTo(y,T,m,E),H=b[b.length-1])for(g=H.x,v=H.y,o=1,s=this.divisions;s>=o;o++){var _=o/s;THREE.Shape.Utils.b2(_,g,y,m),THREE.Shape.Utils.b2(_,v,T,E)}break;case"b":if(m=l[a++]*u+i,E=l[a++]*f,y=l[a++]*u+i,T=l[a++]*-f,R=l[a++]*u+i,x=l[a++]*-f,n.bezierCurveTo(m,E,y,T,R,x),H=b[b.length-1])for(g=H.x,v=H.y,o=1,s=this.divisions;s>=o;o++){var _=o/s;THREE.Shape.Utils.b3(_,g,y,R,m),THREE.Shape.Utils.b3(_,v,T,x,E)}}return{offset:w.ha*r,path:n}}}},THREE.FontUtils.generateShapes=function(e,t){t=t||{};var r=void 0!==t.size?t.size:100,i=void 0!==t.curveSegments?t.curveSegments:4,n=void 0!==t.font?t.font:"helvetiker",a=void 0!==t.weight?t.weight:"normal",o=void 0!==t.style?t.style:"normal";THREE.FontUtils.size=r,THREE.FontUtils.divisions=i,THREE.FontUtils.face=n,THREE.FontUtils.weight=a,THREE.FontUtils.style=o;for(var s=THREE.FontUtils.drawText(e),l=s.paths,h=[],c=0,u=l.length;u>c;c++)Array.prototype.push.apply(h,l[c].toShapes());return h},function(e){var t=1e-10,r=function(e,t){var r=e.length;if(3>r)return null;var a,o,s,l=[],h=[],c=[];if(i(e)>0)for(o=0;r>o;o++)h[o]=o;else for(o=0;r>o;o++)h[o]=r-1-o;var u=r,f=2*u;for(o=u-1;u>2;){if(0>=f--)return console.log("Warning, unable to triangulate polygon!"),t?c:l;if(a=o,a>=u&&(a=0),o=a+1,o>=u&&(o=0),s=o+1,s>=u&&(s=0),n(e,a,o,s,u,h)){var p,d,m,E,g;for(p=h[a],d=h[o],m=h[s],l.push([e[p],e[d],e[m]]),c.push([h[a],h[o],h[s]]),E=o,g=o+1;u>g;E++,g++)h[E]=h[g];u--,f=2*u}}return t?c:l},i=function(e){for(var t=e.length,r=0,i=t-1,n=0;t>n;i=n++)r+=e[i].x*e[n].y-e[n].x*e[i].y;return.5*r},n=function(e,r,i,n,a,o){var s,l,h,c,u,f,p,d,m;if(l=e[o[r]].x,h=e[o[r]].y,c=e[o[i]].x,u=e[o[i]].y,f=e[o[n]].x,p=e[o[n]].y,t>(c-l)*(p-h)-(u-h)*(f-l))return!1;var E,g,v,y,T,R,x,H,b,w,_,S,M,C,A;for(E=f-c,g=p-u,v=l-f,y=h-p,T=c-l,R=u-h,s=0;a>s;s++)if(s!==r&&s!==i&&s!==n&&(d=e[o[s]].x,m=e[o[s]].y,x=d-l,H=m-h,b=d-c,w=m-u,_=d-f,S=m-p,A=E*w-g*b,M=T*H-R*x,C=v*S-y*_,A>=0&&C>=0&&M>=0))return!1;return!0};return e.Triangulate=r,e.Triangulate.area=i,e}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},THREE.Curve.prototype.getPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPoint(t/e));return r},THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var t,r=[];for(t=0;e>=t;t++)r.push(this.getPointAt(t/e));return r},THREE.Curve.prototype.getLength=function(){var e=this.getLengths();return e[e.length-1]},THREE.Curve.prototype.getLengths=function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length==e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,r,i=[],n=this.getPoint(0),a=0;for(i.push(0),r=1;e>=r;r++)t=this.getPoint(r/e),a+=t.distanceTo(n),i.push(a),n=t;return this.cacheArcLengths=i,i},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(e,t){var r,i=this.getLengths(),n=0,a=i.length;r=t?t:e*i[a-1];for(var o,s=0,l=a-1;l>=s;)if(n=Math.floor(s+(l-s)/2),o=i[n]-r,0>o)s=n+1;else{if(!(o>0)){l=n;break}l=n-1}if(n=l,i[n]==r){var h=n/(a-1);return h}var c=i[n],u=i[n+1],f=u-c,p=(r-c)/f,h=(n+p)/(a-1);return h},THREE.Curve.prototype.getTangent=function(e){var t=1e-4,r=e-t,i=e+t;0>r&&(r=0),i>1&&(i=1);var n=this.getPoint(r),a=this.getPoint(i),o=a.clone().sub(n);return o.normalize()},THREE.Curve.prototype.getTangentAt=function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},THREE.LineCurve=function(e,t){this.v1=e,this.v2=t},THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},THREE.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},THREE.LineCurve.prototype.getTangent=function(){var e=this.v2.clone().sub(this.v1);return e.normalize()},THREE.QuadraticBezierCurve=function(e,t,r){this.v0=e,this.v1=t,this.v2=r},THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.QuadraticBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),new THREE.Vector2(t,r)},THREE.QuadraticBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Curve.Utils.tangentQuadraticBezier(e,this.v0.y,this.v1.y,this.v2.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.CubicBezierCurve=function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype),THREE.CubicBezierCurve.prototype.getPoint=function(e){var t,r;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),new THREE.Vector2(t,r)},THREE.CubicBezierCurve.prototype.getTangent=function(e){var t,r;t=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Curve.Utils.tangentCubicBezier(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);var i=new THREE.Vector2(t,r);return i.normalize(),i},THREE.SplineCurve=function(e){this.points=void 0==e?[]:e},THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype),THREE.SplineCurve.prototype.getPoint=function(e){var t,r,i,n=new THREE.Vector2,a=[],o=this.points;return t=(o.length-1)*e,r=Math.floor(t),i=t-r,a[0]=0==r?r:r-1,a[1]=r,a[2]=r>o.length-2?o.length-1:r+1,a[3]=r>o.length-3?o.length-1:r+2,n.x=THREE.Curve.Utils.interpolate(o[a[0]].x,o[a[1]].x,o[a[2]].x,o[a[3]].x,i),n.y=THREE.Curve.Utils.interpolate(o[a[0]].y,o[a[1]].y,o[a[2]].y,o[a[3]].y,i),n},THREE.EllipseCurve=function(e,t,r,i,n,a,o){this.aX=e,this.aY=t,this.xRadius=r,this.yRadius=i,this.aStartAngle=n,this.aEndAngle=a,this.aClockwise=o},THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype),THREE.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;this.aClockwise||(e=1-e);var r=this.aStartAngle+e*t,i=this.aX+this.xRadius*Math.cos(r),n=this.aY+this.yRadius*Math.sin(r);return new THREE.Vector2(i,n)},THREE.ArcCurve=function(e,t,r,i,n,a){THREE.EllipseCurve.call(this,e,t,r,r,i,n,a)},THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype),THREE.Curve.Utils={tangentQuadraticBezier:function(e,t,r,i){return 2*(1-e)*(r-t)+2*e*(i-r)},tangentCubicBezier:function(e,t,r,i,n){return-3*t*(1-e)*(1-e)+3*r*(1-e)*(1-e)-6*e*r*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*n},tangentSpline:function(e){var t=6*e*e-6*e,r=3*e*e-4*e+1,i=-6*e*e+6*e,n=3*e*e-2*e;return t+r+i+n
},interpolate:function(e,t,r,i,n){var a=.5*(r-e),o=.5*(i-t),s=n*n,l=n*s;return(2*t-2*r+a+o)*l+(-3*t+3*r-2*a-o)*s+a*n+t}},THREE.Curve.create=function(e,t){return e.prototype=Object.create(THREE.Curve.prototype),e.prototype.getPoint=t,e},THREE.LineCurve3=THREE.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new THREE.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,t,r){this.v0=e,this.v1=t,this.v2=r},function(e){var t,r,i;return t=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x),r=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y),i=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z),new THREE.Vector3(t,r,i)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(e,t,r,i){this.v0=e,this.v1=t,this.v2=r,this.v3=i},function(e){var t,r,i;return t=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),r=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),i=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z),new THREE.Vector3(t,r,i)}),THREE.SplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,n=new THREE.Vector3,a=[],o=this.points;t=(o.length-1)*e,r=Math.floor(t),i=t-r,a[0]=0==r?r:r-1,a[1]=r,a[2]=r>o.length-2?o.length-1:r+1,a[3]=r>o.length-3?o.length-1:r+2;var s=o[a[0]],l=o[a[1]],h=o[a[2]],c=o[a[3]];return n.x=THREE.Curve.Utils.interpolate(s.x,l.x,h.x,c.x,i),n.y=THREE.Curve.Utils.interpolate(s.y,l.y,h.y,c.y,i),n.z=THREE.Curve.Utils.interpolate(s.z,l.z,h.z,c.z,i),n}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t,r,i,n=new THREE.Vector3,a=[],o=this.points;return t=(o.length-0)*e,r=Math.floor(t),i=t-r,r+=r>0?0:(Math.floor(Math.abs(r)/o.length)+1)*o.length,a[0]=(r-1)%o.length,a[1]=r%o.length,a[2]=(r+1)%o.length,a[3]=(r+2)%o.length,n.x=THREE.Curve.Utils.interpolate(o[a[0]].x,o[a[1]].x,o[a[2]].x,o[a[3]].x,i),n.y=THREE.Curve.Utils.interpolate(o[a[0]].y,o[a[1]].y,o[a[2]].y,o[a[3]].y,i),n.z=THREE.Curve.Utils.interpolate(o[a[0]].z,o[a[1]].z,o[a[2]].z,o[a[3]].z,i),n}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype),THREE.CurvePath.prototype.add=function(e){this.curves.push(e)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new THREE.LineCurve(t,e))},THREE.CurvePath.prototype.getPoint=function(e){for(var t,r,i=e*this.getLength(),n=this.getCurveLengths(),a=0;n.length>a;){if(n[a]>=i){t=n[a]-i,r=this.curves[a];var o=1-t/r.getLength();return r.getPointAt(o)}a++}return null},THREE.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var e,t=[],r=0,i=this.curves.length;for(e=0;i>e;e++)r+=this.curves[e].getLength(),t.push(r);return this.cacheLengths=t,t},THREE.CurvePath.prototype.getBoundingBox=function(){var e,t,r,i,n,a,o=this.getPoints();e=t=Number.NEGATIVE_INFINITY,i=n=Number.POSITIVE_INFINITY;var s,l,h,c,u=o[0]instanceof THREE.Vector3;for(c=u?new THREE.Vector3:new THREE.Vector2,l=0,h=o.length;h>l;l++)s=o[l],s.x>e?e=s.x:i>s.x&&(i=s.x),s.y>t?t=s.y:n>s.y&&(n=s.y),u&&(s.z>r?r=s.z:a>s.z&&(a=s.z)),c.add(s);var f={minX:i,minY:n,maxX:e,maxY:t,centroid:c.divideScalar(h)};return u&&(f.maxZ=r,f.minZ=a),f},THREE.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},THREE.CurvePath.prototype.createGeometry=function(e){for(var t=new THREE.Geometry,r=0;e.length>r;r++)t.vertices.push(new THREE.Vector3(e[r].x,e[r].y,e[r].z||0));return t},THREE.CurvePath.prototype.addWrapPath=function(e){this.bends.push(e)},THREE.CurvePath.prototype.getTransformedPoints=function(e,t){var r,i,n=this.getPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(e,t){var r,i,n=this.getSpacedPoints(e);for(t||(t=this.bends),r=0,i=t.length;i>r;r++)n=this.getWrapPoints(n,t[r]);return n},THREE.CurvePath.prototype.getWrapPoints=function(e,t){var r,i,n,a,o,s,l=this.getBoundingBox();for(r=0,i=e.length;i>r;r++){n=e[r],a=n.x,o=n.y,s=a/l.maxX,s=t.getUtoTmapping(s,a);var h=t.getPoint(s),c=t.getNormalVector(s).multiplyScalar(o);n.x=h.x+c.x,n.y=h.y+c.y}return e},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype),THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,r=this.children.length;r>t;t++)this.children[t].updateMatrixWorld(e)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(e){THREE.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},THREE.Path.prototype=Object.create(THREE.CurvePath.prototype),THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"},THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,r=e.length;r>t;t++)this.lineTo(e[t].x,e[t].y)},THREE.Path.prototype.moveTo=function(){var e=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:e})},THREE.Path.prototype.lineTo=function(e,t){var r=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,n=i[i.length-2],a=i[i.length-1],o=new THREE.LineCurve(new THREE.Vector2(n,a),new THREE.Vector2(e,t));this.curves.push(o),this.actions.push({action:THREE.PathActions.LINE_TO,args:r})},THREE.Path.prototype.quadraticCurveTo=function(e,t,r,i){var n=Array.prototype.slice.call(arguments),a=this.actions[this.actions.length-1].args,o=a[a.length-2],s=a[a.length-1],l=new THREE.QuadraticBezierCurve(new THREE.Vector2(o,s),new THREE.Vector2(e,t),new THREE.Vector2(r,i));this.curves.push(l),this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:n})},THREE.Path.prototype.bezierCurveTo=function(e,t,r,i,n,a){var o=Array.prototype.slice.call(arguments),s=this.actions[this.actions.length-1].args,l=s[s.length-2],h=s[s.length-1],c=new THREE.CubicBezierCurve(new THREE.Vector2(l,h),new THREE.Vector2(e,t),new THREE.Vector2(r,i),new THREE.Vector2(n,a));this.curves.push(c),this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:o})},THREE.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),r=this.actions[this.actions.length-1].args,i=r[r.length-2],n=r[r.length-1],a=[new THREE.Vector2(i,n)];Array.prototype.push.apply(a,e);var o=new THREE.SplineCurve(a);this.curves.push(o),this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:t})},THREE.Path.prototype.arc=function(e,t,r,i,n,a){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],l=o[o.length-1];this.absarc(e+s,t+l,r,i,n,a)},THREE.Path.prototype.absarc=function(e,t,r,i,n,a){this.absellipse(e,t,r,r,i,n,a)},THREE.Path.prototype.ellipse=function(e,t,r,i,n,a,o){var s=this.actions[this.actions.length-1].args,l=s[s.length-2],h=s[s.length-1];this.absellipse(e+l,t+h,r,i,n,a,o)},THREE.Path.prototype.absellipse=function(e,t,r,i,n,a,o){var s=Array.prototype.slice.call(arguments),l=new THREE.EllipseCurve(e,t,r,i,n,a,o);this.curves.push(l);var h=l.getPoint(o?1:0);s.push(h.x),s.push(h.y),this.actions.push({action:THREE.PathActions.ELLIPSE,args:s})},THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var t=[],r=0;e>r;r++)t.push(this.getPoint(r/e));return t},THREE.Path.prototype.getPoints=function(e,t){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(e,t);e=e||12;var r,i,n,a,o,s,l,h,c,u,f,p,d,m,E,g,v,y,T=[];for(r=0,i=this.actions.length;i>r;r++)switch(n=this.actions[r],a=n.action,o=n.args,a){case THREE.PathActions.MOVE_TO:T.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.LINE_TO:T.push(new THREE.Vector2(o[0],o[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:for(s=o[2],l=o[3],u=o[0],f=o[1],T.length>0?(m=T[T.length-1],p=m.x,d=m.y):(m=this.actions[r-1].args,p=m[m.length-2],d=m[m.length-1]),E=1;e>=E;E++)g=E/e,v=THREE.Shape.Utils.b2(g,p,u,s),y=THREE.Shape.Utils.b2(g,d,f,l),T.push(new THREE.Vector2(v,y));break;case THREE.PathActions.BEZIER_CURVE_TO:for(s=o[4],l=o[5],u=o[0],f=o[1],h=o[2],c=o[3],T.length>0?(m=T[T.length-1],p=m.x,d=m.y):(m=this.actions[r-1].args,p=m[m.length-2],d=m[m.length-1]),E=1;e>=E;E++)g=E/e,v=THREE.Shape.Utils.b3(g,p,u,h,s),y=THREE.Shape.Utils.b3(g,d,f,c,l),T.push(new THREE.Vector2(v,y));break;case THREE.PathActions.CSPLINE_THRU:m=this.actions[r-1].args;var R=new THREE.Vector2(m[m.length-2],m[m.length-1]),x=[R],H=e*o[0].length;x=x.concat(o[0]);var b=new THREE.SplineCurve(x);for(E=1;H>=E;E++)T.push(b.getPointAt(E/H));break;case THREE.PathActions.ARC:var w,_=o[0],S=o[1],M=o[2],C=o[3],A=o[4],L=!!o[5],P=A-C,D=2*e;for(E=1;D>=E;E++)g=E/D,L||(g=1-g),w=C+g*P,v=_+M*Math.cos(w),y=S+M*Math.sin(w),T.push(new THREE.Vector2(v,y));break;case THREE.PathActions.ELLIPSE:var w,_=o[0],S=o[1],F=o[2],U=o[3],C=o[4],A=o[5],L=!!o[6],P=A-C,D=2*e;for(E=1;D>=E;E++)g=E/D,L||(g=1-g),w=C+g*P,v=_+F*Math.cos(w),y=S+U*Math.sin(w),T.push(new THREE.Vector2(v,y))}var z=T[T.length-1],B=1e-10;return B>Math.abs(z.x-T[0].x)&&B>Math.abs(z.y-T[0].y)&&T.splice(T.length-1,1),t&&T.push(T[0]),T},THREE.Path.prototype.toShapes=function(){var e,t,r,i,n,a=[],o=new THREE.Path;for(e=0,t=this.actions.length;t>e;e++)r=this.actions[e],n=r.args,i=r.action,i==THREE.PathActions.MOVE_TO&&0!=o.actions.length&&(a.push(o),o=new THREE.Path),o[i].apply(o,n);if(0!=o.actions.length&&a.push(o),0==a.length)return[];var s,l,h=[],c=!THREE.Shape.Utils.isClockWise(a[0].getPoints());if(1==a.length)return s=a[0],l=new THREE.Shape,l.actions=s.actions,l.curves=s.curves,h.push(l),h;if(c)for(l=new THREE.Shape,e=0,t=a.length;t>e;e++)s=a[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(l.actions=s.actions,l.curves=s.curves,h.push(l),l=new THREE.Shape):l.holes.push(s);else{for(e=0,t=a.length;t>e;e++)s=a[e],THREE.Shape.Utils.isClockWise(s.getPoints())?(l&&h.push(l),l=new THREE.Shape,l.actions=s.actions,l.curves=s.curves):l.holes.push(s);h.push(l)}return h},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=Object.create(THREE.Path.prototype),THREE.Shape.prototype.extrude=function(e){var t=new THREE.ExtrudeGeometry(this,e);return t},THREE.Shape.prototype.makeGeometry=function(e){var t=new THREE.ShapeGeometry(this,e);return t},THREE.Shape.prototype.getPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedPoints(e,this.bends);return i},THREE.Shape.prototype.getSpacedPointsHoles=function(e){var t,r=this.holes.length,i=[];for(t=0;r>t;t++)i[t]=this.holes[t].getTransformedSpacedPoints(e,this.bends);return i},THREE.Shape.prototype.extractAllPoints=function(e){return{shape:this.getTransformedPoints(e),holes:this.getPointsHoles(e)}},THREE.Shape.prototype.extractPoints=function(e){return this.useSpacedPoints?this.extractAllSpacedPoints(e):this.extractAllPoints(e)},THREE.Shape.prototype.extractAllSpacedPoints=function(e){return{shape:this.getTransformedSpacedPoints(e),holes:this.getSpacedPointsHoles(e)}},THREE.Shape.Utils={removeHoles:function(e,t){var r,i,n,a,o,s,l,h,c,u,f,p,d,m,E,g,v=e.concat(),y=v.concat(),T=[];for(o=0;t.length>o;o++){for(l=t[o],Array.prototype.push.apply(y,l),h=Number.POSITIVE_INFINITY,s=0;l.length>s;s++){f=l[s];var R=[];for(u=0;v.length>u;u++)p=v[u],c=f.distanceToSquared(p),R.push(c),h>c&&(h=c,n=s,a=u)}r=a-1>=0?a-1:v.length-1,i=n-1>=0?n-1:l.length-1;var x=[l[n],v[a],v[r]],H=THREE.FontUtils.Triangulate.area(x),b=[l[n],l[i],v[a]],w=THREE.FontUtils.Triangulate.area(b),_=1,S=-1,M=a,C=n;a+=_,n+=S,0>a&&(a+=v.length),a%=v.length,0>n&&(n+=l.length),n%=l.length,r=a-1>=0?a-1:v.length-1,i=n-1>=0?n-1:l.length-1,x=[l[n],v[a],v[r]];var A=THREE.FontUtils.Triangulate.area(x);b=[l[n],l[i],v[a]];var L=THREE.FontUtils.Triangulate.area(b);H+w>A+L&&(a=M,n=C,0>a&&(a+=v.length),a%=v.length,0>n&&(n+=l.length),n%=l.length,r=a-1>=0?a-1:v.length-1,i=n-1>=0?n-1:l.length-1),d=v.slice(0,a),m=v.slice(a),E=l.slice(n),g=l.slice(0,n);var P=[l[n],v[a],v[r]],D=[l[n],l[i],v[a]];T.push(P),T.push(D),v=d.concat(E).concat(g).concat(m)}return{shape:v,isolatedPts:T,allpoints:y}},triangulateShape:function(e,t){var r,i,n,a,o,s,l=THREE.Shape.Utils.removeHoles(e,t),h=l.shape,c=l.allpoints,u=l.isolatedPts,f=THREE.FontUtils.Triangulate(h,!1),p={};for(r=0,i=c.length;i>r;r++)o=c[r].x+":"+c[r].y,void 0!==p[o]&&console.log("Duplicate point",o),p[o]=r;for(r=0,i=f.length;i>r;r++)for(a=f[r],n=0;3>n;n++)o=a[n].x+":"+a[n].y,s=p[o],void 0!==s&&(a[n]=s);for(r=0,i=u.length;i>r;r++)for(a=u[r],n=0;3>n;n++)o=a[n].x+":"+a[n].y,s=p[o],void 0!==s&&(a[n]=s);return f.concat(u)},isClockWise:function(e){return 0>THREE.FontUtils.Triangulate.area(e)},b2p0:function(e,t){var r=1-e;return r*r*t},b2p1:function(e,t){return 2*(1-e)*e*t},b2p2:function(e,t){return e*e*t},b2:function(e,t,r,i){return this.b2p0(e,t)+this.b2p1(e,r)+this.b2p2(e,i)},b3p0:function(e,t){var r=1-e;return r*r*r*t},b3p1:function(e,t){var r=1-e;return 3*r*r*e*t},b3p2:function(e,t){var r=1-e;return 3*r*e*e*t},b3p3:function(e,t){return e*e*e*t},b3:function(e,t,r,i,n){return this.b3p0(e,t)+this.b3p1(e,r)+this.b3p2(e,i)+this.b3p3(e,n)}},THREE.AnimationHandler=function(){var e=[],t={},r={};r.update=function(t){for(var r=0;e.length>r;r++)e[r].update(t)},r.addToUpdate=function(t){-1===e.indexOf(t)&&e.push(t)},r.removeFromUpdate=function(t){var r=e.indexOf(t);-1!==r&&e.splice(r,1)},r.add=function(e){void 0!==t[e.name]&&console.log("THREE.AnimationHandler.add: Warning! "+e.name+" already exists in library. Overwriting."),t[e.name]=e,n(e)},r.get=function(e){return"string"==typeof e?t[e]?t[e]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+e),null):void 0},r.parse=function(e){var t=[];if(e instanceof THREE.SkinnedMesh)for(var r=0;e.bones.length>r;r++)t.push(e.bones[r]);else i(e,t);return t};var i=function(e,t){t.push(e);for(var r=0;e.children.length>r;r++)i(e.children[r],t)},n=function(e){if(e.initialized!==!0){for(var t=0;e.hierarchy.length>t;t++){for(var r=0;e.hierarchy[t].keys.length>r;r++)if(0>e.hierarchy[t].keys[r].time&&(e.hierarchy[t].keys[r].time=0),void 0!==e.hierarchy[t].keys[r].rot&&!(e.hierarchy[t].keys[r].rot instanceof THREE.Quaternion)){var i=e.hierarchy[t].keys[r].rot;e.hierarchy[t].keys[r].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(e.hierarchy[t].keys.length&&void 0!==e.hierarchy[t].keys[0].morphTargets){for(var n={},r=0;e.hierarchy[t].keys.length>r;r++)for(var a=0;e.hierarchy[t].keys[r].morphTargets.length>a;a++){var o=e.hierarchy[t].keys[r].morphTargets[a];n[o]=-1}e.hierarchy[t].usedMorphTargets=n;for(var r=0;e.hierarchy[t].keys.length>r;r++){var s={};for(var o in n){for(var a=0;e.hierarchy[t].keys[r].morphTargets.length>a;a++)if(e.hierarchy[t].keys[r].morphTargets[a]===o){s[o]=e.hierarchy[t].keys[r].morphTargetsInfluences[a];break}a===e.hierarchy[t].keys[r].morphTargets.length&&(s[o]=0)}e.hierarchy[t].keys[r].morphTargetsInfluences=s}}for(var r=1;e.hierarchy[t].keys.length>r;r++)e.hierarchy[t].keys[r].time===e.hierarchy[t].keys[r-1].time&&(e.hierarchy[t].keys.splice(r,1),r--);for(var r=0;e.hierarchy[t].keys.length>r;r++)e.hierarchy[t].keys[r].index=r}var l=parseInt(e.length*e.fps,10);e.JIT={},e.JIT.hierarchy=[];for(var t=0;e.hierarchy.length>t;t++)e.JIT.hierarchy.push(Array(l));e.initialized=!0}};return r.LINEAR=0,r.CATMULLROM=1,r.CATMULLROM_FORWARD=2,r}(),THREE.Animation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=1,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.interpolationType=void 0!==r?r:THREE.AnimationHandler.LINEAR,this.points=[],this.target=new THREE.Vector3},THREE.Animation.prototype.play=function(e,t){if(this.isPlaying===!1){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0;var r,i,n=this.hierarchy.length;for(r=0;n>r;r++){i=this.hierarchy[r],this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(i.useQuaternion=!0),i.matrixAutoUpdate=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey={pos:0,rot:0,scl:0},i.animationCache.nextKey={pos:0,rot:0,scl:0},i.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var a=i.animationCache.prevKey,o=i.animationCache.nextKey;a.pos=this.data.hierarchy[r].keys[0],a.rot=this.data.hierarchy[r].keys[0],a.scl=this.data.hierarchy[r].keys[0],o.pos=this.getNextKeyWith("pos",r,1),o.rot=this.getNextKeyWith("rot",r,1),o.scl=this.getNextKeyWith("scl",r,1)}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.Animation.prototype.pause=function(){this.isPaused===!0?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.Animation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this)},THREE.Animation.prototype.update=function(e){if(this.isPlaying!==!1){var t,r,i,n,a,o,s,l,h,c,u=["pos","rot","scl"];this.data.JIT.hierarchy;var f,p,d,m,E;this.currentTime+=e*this.timeScale,p=this.currentTime,f=this.currentTime=this.currentTime%this.data.length,c=parseInt(Math.min(f*this.data.fps,this.data.length*this.data.fps),10);for(var g=0,v=this.hierarchy.length;v>g;g++){l=this.hierarchy[g],h=l.animationCache;for(var y=0;3>y;y++){if(t=u[y],o=h.prevKey[t],s=h.nextKey[t],p>=s.time){if(p>f){if(!this.loop)return this.stop(),void 0;for(o=this.data.hierarchy[g].keys[0],s=this.getNextKeyWith(t,g,1);f>s.time;)o=s,s=this.getNextKeyWith(t,g,s.index+1)}else do o=s,s=this.getNextKeyWith(t,g,s.index+1);while(f>s.time);h.prevKey[t]=o,h.nextKey[t]=s}l.matrixAutoUpdate=!0,l.matrixWorldNeedsUpdate=!0,r=(f-o.time)/(s.time-o.time),n=o[t],a=s[t],(0>r||r>1)&&(console.log("THREE.Animation.update: Warning! Scale out of bounds:"+r+" on bone "+g),r=0>r?0:1),"pos"===t?(i=l.position,this.interpolationType===THREE.AnimationHandler.LINEAR?(i.x=n[0]+(a[0]-n[0])*r,i.y=n[1]+(a[1]-n[1])*r,i.z=n[2]+(a[2]-n[2])*r):(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)&&(this.points[0]=this.getPrevKeyWith("pos",g,o.index-1).pos,this.points[1]=n,this.points[2]=a,this.points[3]=this.getNextKeyWith("pos",g,s.index+1).pos,r=.33*r+.33,d=this.interpolateCatmullRom(this.points,r),i.x=d[0],i.y=d[1],i.z=d[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(m=this.interpolateCatmullRom(this.points,1.01*r),this.target.set(m[0],m[1],m[2]),this.target.sub(i),this.target.y=0,this.target.normalize(),E=Math.atan2(this.target.x,this.target.z),l.rotation.set(0,E,0)))):"rot"===t?THREE.Quaternion.slerp(n,a,l.quaternion,r):"scl"===t&&(i=l.scale,i.x=n[0]+(a[0]-n[0])*r,i.y=n[1]+(a[1]-n[1])*r,i.z=n[2]+(a[2]-n[2])*r)}}}},THREE.Animation.prototype.interpolateCatmullRom=function(e,t){var r,i,n,a,o,s,l,h,c,u=[],f=[];return r=(e.length-1)*t,i=Math.floor(r),n=r-i,u[0]=0===i?i:i-1,u[1]=i,u[2]=i>e.length-2?i:i+1,u[3]=i>e.length-3?i:i+2,s=e[u[0]],l=e[u[1]],h=e[u[2]],c=e[u[3]],a=n*n,o=n*a,f[0]=this.interpolate(s[0],l[0],h[0],c[0],n,a,o),f[1]=this.interpolate(s[1],l[1],h[1],c[1],n,a,o),f[2]=this.interpolate(s[2],l[2],h[2],c[2],n,a,o),f},THREE.Animation.prototype.interpolate=function(e,t,r,i,n,a,o){var s=.5*(r-e),l=.5*(i-t);return(2*(t-r)+s+l)*o+(-3*(t-r)-2*s-l)*a+s*n+t},THREE.Animation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r=i.length-1>r?r:i.length-1:r%=i.length;i.length>r;r++)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?r>0?r:0:r>=0?r:r+i.length;r>=0;r--)if(void 0!==i[r][e])return i[r];return this.data.hierarchy[t].keys[i.length-1]},THREE.KeyFrameAnimation=function(e,t,r){this.root=e,this.data=THREE.AnimationHandler.get(t),this.hierarchy=THREE.AnimationHandler.parse(e),this.currentTime=0,this.timeScale=.001,this.isPlaying=!1,this.isPaused=!0,this.loop=!0,this.JITCompile=void 0!==r?r:!0;for(var i=0,n=this.hierarchy.length;n>i;i++){var a=this.data.hierarchy[i].keys,o=this.data.hierarchy[i].sids,s=this.hierarchy[i];if(a.length&&o){for(var l=0;o.length>l;l++){var h=o[l],c=this.getNextKeyWith(h,i,0);c&&c.apply(h)}s.matrixAutoUpdate=!1,this.data.hierarchy[i].node.updateMatrix(),s.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(e,t){if(!this.isPlaying){this.isPlaying=!0,this.loop=void 0!==e?e:!0,this.currentTime=void 0!==t?t:0,this.startTimeMs=t,this.startTime=1e7,this.endTime=-this.startTime;var r,i,n,a=this.hierarchy.length;for(r=0;a>r;r++){i=this.hierarchy[r],n=this.data.hierarchy[r],i.useQuaternion=!0,void 0===n.animationCache&&(n.animationCache={},n.animationCache.prevKey=null,n.animationCache.nextKey=null,n.animationCache.originalMatrix=i instanceof THREE.Bone?i.skinMatrix:i.matrix);var o=this.data.hierarchy[r].keys;o.length&&(n.animationCache.prevKey=o[0],n.animationCache.nextKey=o[1],this.startTime=Math.min(o[0].time,this.startTime),this.endTime=Math.max(o[o.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1,THREE.AnimationHandler.addToUpdate(this)},THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this),this.isPaused=!this.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){this.isPlaying=!1,this.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(this);for(var e=0;this.data.hierarchy.length>e;e++){var t=this.hierarchy[e],r=this.data.hierarchy[e];if(void 0!==r.animationCache){var i=r.animationCache.originalMatrix;t instanceof THREE.Bone?(i.copy(t.skinMatrix),t.skinMatrix=i):(i.copy(t.matrix),t.matrix=i),delete r.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(e){if(this.isPlaying){var t,r,i,n,a,o,s,l,h=this.data.JIT.hierarchy;if(this.currentTime+=e*this.timeScale,s=this.currentTime,o=this.currentTime=this.currentTime%this.data.length,this.startTimeMs>o&&(o=this.currentTime=this.startTimeMs+o),a=parseInt(Math.min(o*this.data.fps,this.data.length*this.data.fps),10),l=s>o,l&&!this.loop){for(var c=0,u=this.hierarchy.length;u>c;c++){var f=this.data.hierarchy[c].keys,p=this.data.hierarchy[c].sids,d=f.length-1,m=this.hierarchy[c];if(f.length){for(var E=0;p.length>E;E++){var g=p[E],v=this.getPrevKeyWith(g,c,d);v&&v.apply(g)}this.data.hierarchy[c].node.updateMatrix(),m.matrixWorldNeedsUpdate=!0}}return this.stop(),void 0}if(!(this.startTime>o)){for(var c=0,u=this.hierarchy.length;u>c;c++){i=this.hierarchy[c],n=this.data.hierarchy[c];var f=n.keys,y=n.animationCache;if(this.JITCompile&&void 0!==h[c][a])i instanceof THREE.Bone?(i.skinMatrix=h[c][a],i.matrixWorldNeedsUpdate=!1):(i.matrix=h[c][a],i.matrixWorldNeedsUpdate=!0);else if(f.length){if(this.JITCompile&&y&&(i instanceof THREE.Bone?i.skinMatrix=y.originalMatrix:i.matrix=y.originalMatrix),t=y.prevKey,r=y.nextKey,t&&r){if(s>=r.time){if(l&&this.loop)for(t=f[0],r=f[1];o>r.time;)t=r,r=f[t.index+1];else if(!l)for(var T=f.length-1;o>r.time&&r.index!==T;)t=r,r=f[t.index+1];y.prevKey=t,y.nextKey=r}r.time>=o?t.interpolate(r,o):t.interpolate(r,r.time)}this.data.hierarchy[c].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===h[0][a]){this.hierarchy[0].updateMatrixWorld(!0);for(var c=0;this.hierarchy.length>c;c++)h[c][a]=this.hierarchy[c]instanceof THREE.Bone?this.hierarchy[c].skinMatrix.clone():this.hierarchy[c].matrix.clone()}}}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r%=i.length;i.length>r;r++)if(i[r].hasTarget(e))return i[r];return i[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,t,r){var i=this.data.hierarchy[t].keys;for(r=r>=0?r:r+i.length;r>=0;r--)if(i[r].hasTarget(e))return i[r];return i[i.length-1]},THREE.CubeCamera=function(e,t,r){THREE.Object3D.call(this);var i=90,n=1,a=new THREE.PerspectiveCamera(i,n,e,t);a.up.set(0,-1,0),a.lookAt(new THREE.Vector3(1,0,0)),this.add(a);var o=new THREE.PerspectiveCamera(i,n,e,t);o.up.set(0,-1,0),o.lookAt(new THREE.Vector3(-1,0,0)),this.add(o);var s=new THREE.PerspectiveCamera(i,n,e,t);s.up.set(0,0,1),s.lookAt(new THREE.Vector3(0,1,0)),this.add(s);var l=new THREE.PerspectiveCamera(i,n,e,t);l.up.set(0,0,-1),l.lookAt(new THREE.Vector3(0,-1,0)),this.add(l);var h=new THREE.PerspectiveCamera(i,n,e,t);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(0,0,1)),this.add(h);var c=new THREE.PerspectiveCamera(i,n,e,t);c.up.set(0,-1,0),c.lookAt(new THREE.Vector3(0,0,-1)),this.add(c),this.renderTarget=new THREE.WebGLRenderTargetCube(r,r,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),this.updateCubeMap=function(e,t){var r=this.renderTarget,i=r.generateMipmaps;r.generateMipmaps=!1,r.activeCubeFace=0,e.render(t,a,r),r.activeCubeFace=1,e.render(t,o,r),r.activeCubeFace=2,e.render(t,s,r),r.activeCubeFace=3,e.render(t,l,r),r.activeCubeFace=4,e.render(t,h,r),r.generateMipmaps=i,r.activeCubeFace=5,e.render(t,c,r)}},THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype),THREE.CombinedCamera=function(e,t,r,i,n,a,o){THREE.Camera.call(this),this.fov=r,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2,this.cameraO=new THREE.OrthographicCamera(e/-2,e/2,t/2,t/-2,a,o),this.cameraP=new THREE.PerspectiveCamera(r,e/t,i,n),this.zoom=1,this.toPerspective()},THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype),THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near,this.far=this.cameraP.far,this.cameraP.fov=this.fov/this.zoom,this.cameraP.updateProjectionMatrix(),this.projectionMatrix=this.cameraP.projectionMatrix,this.inPerspectiveMode=!0,this.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var e=this.fov,t=this.cameraP.aspect,r=this.cameraP.near,i=this.cameraP.far,n=(r+i)/2,a=Math.tan(e/2)*n,o=2*a,s=o*t,l=s/2;a/=this.zoom,l/=this.zoom,this.cameraO.left=-l,this.cameraO.right=l,this.cameraO.top=a,this.cameraO.bottom=-a,this.cameraO.updateProjectionMatrix(),this.near=this.cameraO.near,this.far=this.cameraO.far,this.projectionMatrix=this.cameraO.projectionMatrix,this.inPerspectiveMode=!1,this.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(e,t){this.cameraP.aspect=e/t,this.left=-e/2,this.right=e/2,this.top=t/2,this.bottom=-t/2},THREE.CombinedCamera.prototype.setFov=function(e){this.fov=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(e,t){void 0===t&&(t=24);var r=2*THREE.Math.radToDeg(Math.atan(t/(2*e)));return this.setFov(r),r},THREE.CombinedCamera.prototype.setZoom=function(e){this.zoom=e,this.inPerspectiveMode?this.toPerspective():this.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0,this.rotation.y=Math.PI,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0,this.rotation.y=-Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0,this.rotation.y=Math.PI/2,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2,this.rotation.y=0,this.rotation.z=0,this.rotationAutoUpdate=!1},THREE.AsteriskGeometry=function(e,t){THREE.Geometry.call(this);for(var r=e,i=t,n=.707*r,a=.707*i,o=[[r,0,0],[i,0,0],[-r,0,0],[-i,0,0],[0,r,0],[0,i,0],[0,-r,0],[0,-i,0],[0,0,r],[0,0,i],[0,0,-r],[0,0,-i],[n,n,0],[a,a,0],[-n,-n,0],[-a,-a,0],[n,-n,0],[a,-a,0],[-n,n,0],[-a,a,0],[n,0,n],[a,0,a],[-n,0,-n],[-a,0,-a],[n,0,-n],[a,0,-a],[-n,0,n],[-a,0,a],[0,n,n],[0,a,a],[0,-n,-n],[0,-a,-a],[0,n,-n],[0,a,-a],[0,-n,n],[0,-a,a]],s=0,l=o.length;l>s;s++){var h=o[s][0],c=o[s][1],u=o[s][2];this.vertices.push(new THREE.Vector3(h,c,u))}},THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CircleGeometry=function(e,t,r,i){THREE.Geometry.call(this),e=e||50,r=void 0!==r?r:0,i=void 0!==i?i:2*Math.PI,t=void 0!==t?Math.max(3,t):8;var n,a=[],o=new THREE.Vector3,s=new THREE.Vector2(.5,.5);for(this.vertices.push(o),a.push(s),n=0;t>=n;n++){var l=new THREE.Vector3;l.x=e*Math.cos(r+n/t*i),l.y=e*Math.sin(r+n/t*i),this.vertices.push(l),a.push(new THREE.Vector2((l.x/e+1)/2,-(l.y/e+1)/2+1))}var h=new THREE.Vector3(0,0,-1);for(n=1;t>=n;n++){var c=n,u=n+1,f=0;this.faces.push(new THREE.Face3(c,u,f,[h,h,h])),this.faceVertexUvs[0].push([a[n],a[n+1],s])}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CubeGeometry=function(e,t,r,i,n,a){function o(e,t,r,i,n,a,o,l){var h,c,u,f=s.widthSegments,p=s.heightSegments,d=n/2,m=a/2,E=s.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?h="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(h="y",p=s.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(h="x",f=s.depthSegments);var g=f+1,v=p+1,y=n/f,T=a/p,R=new THREE.Vector3;for(R[h]=o>0?1:-1,u=0;v>u;u++)for(c=0;g>c;c++){var x=new THREE.Vector3;x[e]=(c*y-d)*r,x[t]=(u*T-m)*i,x[h]=o,s.vertices.push(x)}for(u=0;p>u;u++)for(c=0;f>c;c++){var H=c+g*u,b=c+g*(u+1),w=c+1+g*(u+1),_=c+1+g*u,S=new THREE.Face4(H+E,b+E,w+E,_+E);S.normal.copy(R),S.vertexNormals.push(R.clone(),R.clone(),R.clone(),R.clone()),S.materialIndex=l,s.faces.push(S),s.faceVertexUvs[0].push([new THREE.Vector2(c/f,1-u/p),new THREE.Vector2(c/f,1-(u+1)/p),new THREE.Vector2((c+1)/f,1-(u+1)/p),new THREE.Vector2((c+1)/f,1-u/p)])}}THREE.Geometry.call(this);var s=this;this.width=e,this.height=t,this.depth=r,this.widthSegments=i||1,this.heightSegments=n||1,this.depthSegments=a||1;var l=this.width/2,h=this.height/2,c=this.depth/2;o("z","y",-1,-1,this.depth,this.height,l,0),o("z","y",1,-1,this.depth,this.height,-l,1),o("x","z",1,1,this.width,this.depth,h,2),o("x","z",1,-1,this.width,this.depth,-h,3),o("x","y",1,-1,this.width,this.height,c,4),o("x","y",-1,-1,this.width,this.height,-c,5),this.computeCentroids(),this.mergeVertices()},THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.CylinderGeometry=function(e,t,r,i,n,a){THREE.Geometry.call(this),e=void 0!==e?e:20,t=void 0!==t?t:20,r=void 0!==r?r:100;
var o,s,l=r/2,h=i||8,c=n||1,u=[],f=[];for(s=0;c>=s;s++){var p=[],d=[],m=s/c,E=m*(t-e)+e;for(o=0;h>=o;o++){var g=o/h,v=new THREE.Vector3;v.x=E*Math.sin(2*g*Math.PI),v.y=-m*r+l,v.z=E*Math.cos(2*g*Math.PI),this.vertices.push(v),p.push(this.vertices.length-1),d.push(new THREE.Vector2(g,1-m))}u.push(p),f.push(d)}var y,T,R=(t-e)/r;for(o=0;h>o;o++)for(0!==e?(y=this.vertices[u[0][o]].clone(),T=this.vertices[u[0][o+1]].clone()):(y=this.vertices[u[1][o]].clone(),T=this.vertices[u[1][o+1]].clone()),y.setY(Math.sqrt(y.x*y.x+y.z*y.z)*R).normalize(),T.setY(Math.sqrt(T.x*T.x+T.z*T.z)*R).normalize(),s=0;c>s;s++){var x=u[s][o],H=u[s+1][o],b=u[s+1][o+1],w=u[s][o+1],_=y.clone(),S=y.clone(),M=T.clone(),C=T.clone(),A=f[s][o].clone(),L=f[s+1][o].clone(),P=f[s+1][o+1].clone(),D=f[s][o+1].clone();this.faces.push(new THREE.Face4(x,H,b,w,[_,S,M,C])),this.faceVertexUvs[0].push([A,L,P,D])}if(!a&&e>0)for(this.vertices.push(new THREE.Vector3(0,l,0)),o=0;h>o;o++){var x=u[0][o],H=u[0][o+1],b=this.vertices.length-1,_=new THREE.Vector3(0,1,0),S=new THREE.Vector3(0,1,0),M=new THREE.Vector3(0,1,0),A=f[0][o].clone(),L=f[0][o+1].clone(),P=new THREE.Vector2(L.u,0);this.faces.push(new THREE.Face3(x,H,b,[_,S,M])),this.faceVertexUvs[0].push([A,L,P])}if(!a&&t>0)for(this.vertices.push(new THREE.Vector3(0,-l,0)),o=0;h>o;o++){var x=u[s][o+1],H=u[s][o],b=this.vertices.length-1,_=new THREE.Vector3(0,-1,0),S=new THREE.Vector3(0,-1,0),M=new THREE.Vector3(0,-1,0),A=f[s][o+1].clone(),L=f[s][o].clone(),P=new THREE.Vector2(L.u,1);this.faces.push(new THREE.Face3(x,H,b,[_,S,M])),this.faceVertexUvs[0].push([A,L,P])}this.computeCentroids(),this.computeFaceNormals()},THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry=function(e,t){return void 0===e?(e=[],void 0):(THREE.Geometry.call(this),e=e instanceof Array?e:[e],this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals(),void 0)},THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var r=e.length,i=0;r>i;i++){var n=e[i];this.addShape(n,t)}},THREE.ExtrudeGeometry.prototype.addShape=function(e,t){function r(e,t,r){return t||console.log("die"),t.clone().multiplyScalar(r).add(e)}function i(e,t,r){return a(e,t,r)}function n(e,t,r){var i=Math.atan2(t.y-e.y,t.x-e.x),n=Math.atan2(r.y-e.y,r.x-e.x);i>n&&(n+=2*Math.PI);var a=(i+n)/2,o=-Math.cos(a),s=-Math.sin(a),l=new THREE.Vector2(o,s);return l}function a(e,t,r){var i,a,o,s,l,h,c=THREE.ExtrudeGeometry.__v1,u=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,p=THREE.ExtrudeGeometry.__v4,d=THREE.ExtrudeGeometry.__v5,m=THREE.ExtrudeGeometry.__v6;return c.set(e.x-t.x,e.y-t.y),u.set(e.x-r.x,e.y-r.y),i=c.normalize(),a=u.normalize(),f.set(-i.y,i.x),p.set(a.y,-a.x),d.copy(e).add(f),m.copy(e).add(p),d.equals(m)?p.clone():(d.copy(t).add(f),m.copy(r).add(p),o=i.dot(p),s=m.sub(d).dot(p),0===o&&(console.log("Either infinite or no solutions!"),0===s?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),l=s/o,0>l?n(e,t,r):(h=i.multiplyScalar(l).add(d),h.sub(e).clone()))}function o(){if(g){var e=0,t=q*e;for(K=0;X>K;K++)W=N[K],c(W[2]+t,W[1]+t,W[0]+t,!0);for(e=y+2*E,t=q*e,K=0;X>K;K++)W=N[K],c(W[0]+t,W[1]+t,W[2]+t,!1)}else{for(K=0;X>K;K++)W=N[K],c(W[2],W[1],W[0],!0);for(K=0;X>K;K++)W=N[K],c(W[0]+q*y,W[1]+q*y,W[2]+q*y,!1)}}function s(){var e=0;for(l(I,e),e+=I.length,A=0,L=z.length;L>A;A++)C=z[A],l(C,e),e+=C.length}function l(e,t){var r,i;for(K=e.length;--K>=0;){r=K,i=K-1,0>i&&(i=e.length-1);var n=0,a=y+2*E;for(n=0;a>n;n++){var o=q*n,s=q*(n+1),l=t+r+o,h=t+i+o,c=t+i+s,f=t+r+s;u(l,h,c,f,e,n,a,r,i)}}}function h(e,t,r){P.vertices.push(new THREE.Vector3(e,t,r))}function c(r,i,n,a){r+=D,i+=D,n+=D,P.faces.push(new THREE.Face3(r,i,n,null,null,x));var o=a?b.generateBottomUV(P,e,t,r,i,n):b.generateTopUV(P,e,t,r,i,n);P.faceVertexUvs[0].push(o)}function u(r,i,n,a,o,s,l,h,c){r+=D,i+=D,n+=D,a+=D,P.faces.push(new THREE.Face4(r,i,n,a,null,null,H));var u=b.generateSideWallUV(P,e,o,t,r,i,n,a,s,l,h,c);P.faceVertexUvs[0].push(u)}var f,p=void 0!==t.amount?t.amount:100,d=void 0!==t.bevelThickness?t.bevelThickness:6,m=void 0!==t.bevelSize?t.bevelSize:d-2,E=void 0!==t.bevelSegments?t.bevelSegments:3,g=void 0!==t.bevelEnabled?t.bevelEnabled:!0,v=void 0!==t.curveSegments?t.curveSegments:12,y=void 0!==t.steps?t.steps:1,T=t.extrudePath,R=!1,x=t.material,H=t.extrudeMaterial,b=void 0!==t.UVGenerator?t.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator;this.shapebb;var w,_,S,M;T&&(f=T.getSpacedPoints(y),R=!0,g=!1,w=void 0!==t.frames?t.frames:new THREE.TubeGeometry.FrenetFrames(T,y,!1),_=new THREE.Vector3,S=new THREE.Vector3,M=new THREE.Vector3),g||(E=0,d=0,m=0);var C,A,L,P=this,D=this.vertices.length,F=e.extractPoints(v),U=F.shape,z=F.holes,B=!THREE.Shape.Utils.isClockWise(U);if(B){for(U=U.reverse(),A=0,L=z.length;L>A;A++)C=z[A],THREE.Shape.Utils.isClockWise(C)&&(z[A]=C.reverse());B=!1}var N=THREE.Shape.Utils.triangulateShape(U,z),I=U;for(A=0,L=z.length;L>A;A++)C=z[A],U=U.concat(C);var V,O,k,G,j,W,q=U.length,X=N.length;I.length,180/Math.PI;for(var Y=[],K=0,J=I.length,Q=J-1,$=K+1;J>K;K++,Q++,$++)Q===J&&(Q=0),$===J&&($=0),I[K],I[Q],I[$],Y[K]=i(I[K],I[Q],I[$]);var Z,et=[],tt=Y.concat();for(A=0,L=z.length;L>A;A++){for(C=z[A],Z=[],K=0,J=C.length,Q=J-1,$=K+1;J>K;K++,Q++,$++)Q===J&&(Q=0),$===J&&($=0),Z[K]=i(C[K],C[Q],C[$]);et.push(Z),tt=tt.concat(Z)}for(V=0;E>V;V++){for(k=V/E,G=d*(1-k),O=m*Math.sin(k*Math.PI/2),K=0,J=I.length;J>K;K++)j=r(I[K],Y[K],O),h(j.x,j.y,-G);for(A=0,L=z.length;L>A;A++)for(C=z[A],Z=et[A],K=0,J=C.length;J>K;K++)j=r(C[K],Z[K],O),h(j.x,j.y,-G)}for(O=m,K=0;q>K;K++)j=g?r(U[K],tt[K],O):U[K],R?(S.copy(w.normals[0]).multiplyScalar(j.x),_.copy(w.binormals[0]).multiplyScalar(j.y),M.copy(f[0]).add(S).add(_),h(M.x,M.y,M.z)):h(j.x,j.y,0);var rt;for(rt=1;y>=rt;rt++)for(K=0;q>K;K++)j=g?r(U[K],tt[K],O):U[K],R?(S.copy(w.normals[rt]).multiplyScalar(j.x),_.copy(w.binormals[rt]).multiplyScalar(j.y),M.copy(f[rt]).add(S).add(_),h(M.x,M.y,M.z)):h(j.x,j.y,p/y*rt);for(V=E-1;V>=0;V--){for(k=V/E,G=d*(1-k),O=m*Math.sin(k*Math.PI/2),K=0,J=I.length;J>K;K++)j=r(I[K],Y[K],O),h(j.x,j.y,p+G);for(A=0,L=z.length;L>A;A++)for(C=z[A],Z=et[A],K=0,J=C.length;J>K;K++)j=r(C[K],Z[K],O),R?h(j.x,j.y+f[y-1].y,f[y-1].x+G):h(j.x,j.y,p+G)}o(),s()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,r,i,n,a){var o=e.vertices[i].x,s=e.vertices[i].y,l=e.vertices[n].x,h=e.vertices[n].y,c=e.vertices[a].x,u=e.vertices[a].y;return[new THREE.Vector2(o,s),new THREE.Vector2(l,h),new THREE.Vector2(c,u)]},generateBottomUV:function(e,t,r,i,n,a){return this.generateTopUV(e,t,r,i,n,a)},generateSideWallUV:function(e,t,r,i,n,a,o,s){var l=e.vertices[n].x,h=e.vertices[n].y,c=e.vertices[n].z,u=e.vertices[a].x,f=e.vertices[a].y,p=e.vertices[a].z,d=e.vertices[o].x,m=e.vertices[o].y,E=e.vertices[o].z,g=e.vertices[s].x,v=e.vertices[s].y,y=e.vertices[s].z;return.01>Math.abs(h-f)?[new THREE.Vector2(l,1-c),new THREE.Vector2(u,1-p),new THREE.Vector2(d,1-E),new THREE.Vector2(g,1-y)]:[new THREE.Vector2(h,1-c),new THREE.Vector2(f,1-p),new THREE.Vector2(m,1-E),new THREE.Vector2(v,1-y)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.ShapeGeometry=function(e,t){THREE.Geometry.call(this),e instanceof Array==!1&&(e=[e]),this.shapebb=e[e.length-1].getBoundingBox(),this.addShapeList(e,t),this.computeCentroids(),this.computeFaceNormals()},THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ShapeGeometry.prototype.addShapeList=function(e,t){for(var r=0,i=e.length;i>r;r++)this.addShape(e[r],t);return this},THREE.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var r=void 0!==t.curveSegments?t.curveSegments:12,i=t.material,n=void 0===t.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator;this.shapebb;var a,o,s,l=this.vertices.length,h=e.extractPoints(r),c=h.shape,u=h.holes,f=!THREE.Shape.Utils.isClockWise(c);if(f){for(c=c.reverse(),a=0,o=u.length;o>a;a++)s=u[a],THREE.Shape.Utils.isClockWise(s)&&(u[a]=s.reverse());f=!1}var p=THREE.Shape.Utils.triangulateShape(c,u),d=c;for(a=0,o=u.length;o>a;a++)s=u[a],c=c.concat(s);var m,E,g=c.length,v=p.length;for(d.length,a=0;g>a;a++)m=c[a],this.vertices.push(new THREE.Vector3(m.x,m.y,0));for(a=0;v>a;a++){E=p[a];var y=E[0]+l,T=E[1]+l,R=E[2]+l;this.faces.push(new THREE.Face3(y,T,R,null,null,i)),this.faceVertexUvs[0].push(n.generateBottomUV(this,e,t,y,T,R))}},THREE.LatheGeometry=function(e,t,r,i){THREE.Geometry.call(this),t=t||12,r=r||0,i=i||2*Math.PI;for(var n=1/(e.length-1),a=1/t,o=0,s=t;s>=o;o++)for(var l=r+o*a*i,h=Math.cos(l),c=Math.sin(l),u=0,f=e.length;f>u;u++){var p=e[u],d=new THREE.Vector3;d.x=h*p.x-c*p.y,d.y=c*p.x+h*p.y,d.z=p.z,this.vertices.push(d)}for(var m=e.length,o=0,s=t;s>o;o++)for(var u=0,f=e.length-1;f>u;u++){var E=u+m*o,g=E,v=E+m,h=E+1+m,y=E+1;this.faces.push(new THREE.Face4(g,v,h,y));var T=o*a,R=u*n,x=T+a,H=R+n;this.faceVertexUvs[0].push([new THREE.Vector2(T,R),new THREE.Vector2(x,R),new THREE.Vector2(x,H),new THREE.Vector2(T,H)])}this.mergeVertices(),this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.PlaneGeometry=function(e,t,r,i){THREE.Geometry.call(this),this.width=e,this.height=t,this.widthSegments=r||1,this.heightSegments=i||1;var n,a,o=e/2,s=t/2,l=this.widthSegments,h=this.heightSegments,c=l+1,u=h+1,f=this.width/l,p=this.height/h,d=new THREE.Vector3(0,0,1);for(a=0;u>a;a++)for(n=0;c>n;n++){var m=n*f-o,E=a*p-s;this.vertices.push(new THREE.Vector3(m,-E,0))}for(a=0;h>a;a++)for(n=0;l>n;n++){var g=n+c*a,v=n+c*(a+1),y=n+1+c*(a+1),T=n+1+c*a,R=new THREE.Face4(g,v,y,T);R.normal.copy(d),R.vertexNormals.push(d.clone(),d.clone(),d.clone(),d.clone()),this.faces.push(R),this.faceVertexUvs[0].push([new THREE.Vector2(n/l,1-a/h),new THREE.Vector2(n/l,1-(a+1)/h),new THREE.Vector2((n+1)/l,1-(a+1)/h),new THREE.Vector2((n+1)/l,1-a/h)])}this.computeCentroids()},THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.SphereGeometry=function(e,t,r,i,n,a,o){THREE.Geometry.call(this),this.radius=e||50,this.widthSegments=Math.max(3,Math.floor(t)||8),this.heightSegments=Math.max(2,Math.floor(r)||6),i=void 0!==i?i:0,n=void 0!==n?n:2*Math.PI,a=void 0!==a?a:0,o=void 0!==o?o:Math.PI;var s,l,h=[],c=[];for(l=0;this.heightSegments>=l;l++){var u=[],f=[];for(s=0;this.widthSegments>=s;s++){var p=s/this.widthSegments,d=l/this.heightSegments,m=new THREE.Vector3;m.x=-this.radius*Math.cos(i+p*n)*Math.sin(a+d*o),m.y=this.radius*Math.cos(a+d*o),m.z=this.radius*Math.sin(i+p*n)*Math.sin(a+d*o),this.vertices.push(m),u.push(this.vertices.length-1),f.push(new THREE.Vector2(p,1-d))}h.push(u),c.push(f)}for(l=0;this.heightSegments>l;l++)for(s=0;this.widthSegments>s;s++){var E=h[l][s+1],g=h[l][s],v=h[l+1][s],y=h[l+1][s+1],T=this.vertices[E].clone().normalize(),R=this.vertices[g].clone().normalize(),x=this.vertices[v].clone().normalize(),H=this.vertices[y].clone().normalize(),b=c[l][s+1].clone(),w=c[l][s].clone(),_=c[l+1][s].clone(),S=c[l+1][s+1].clone();Math.abs(this.vertices[E].y)===this.radius?(this.faces.push(new THREE.Face3(E,v,y,[T,x,H])),this.faceVertexUvs[0].push([b,_,S])):Math.abs(this.vertices[v].y)===this.radius?(this.faces.push(new THREE.Face3(E,g,v,[T,R,x])),this.faceVertexUvs[0].push([b,w,_])):(this.faces.push(new THREE.Face4(E,g,v,y,[T,R,x,H])),this.faceVertexUvs[0].push([b,w,_,S]))}this.computeCentroids(),this.computeFaceNormals(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,e)},THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TextGeometry=function(e,t){var r=THREE.FontUtils.generateShapes(e,t);t.amount=void 0!==t.height?t.height:50,void 0===t.bevelThickness&&(t.bevelThickness=10),void 0===t.bevelSize&&(t.bevelSize=8),void 0===t.bevelEnabled&&(t.bevelEnabled=!1),THREE.ExtrudeGeometry.call(this,r,t)},THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype),THREE.TorusGeometry=function(e,t,r,i,n){THREE.Geometry.call(this),this.radius=e||100,this.tube=t||40,this.radialSegments=r||8,this.tubularSegments=i||6,this.arc=n||2*Math.PI;for(var a=new THREE.Vector3,o=[],s=[],l=0;this.radialSegments>=l;l++)for(var h=0;this.tubularSegments>=h;h++){var c=h/this.tubularSegments*this.arc,u=2*l/this.radialSegments*Math.PI;a.x=this.radius*Math.cos(c),a.y=this.radius*Math.sin(c);var f=new THREE.Vector3;f.x=(this.radius+this.tube*Math.cos(u))*Math.cos(c),f.y=(this.radius+this.tube*Math.cos(u))*Math.sin(c),f.z=this.tube*Math.sin(u),this.vertices.push(f),o.push(new THREE.Vector2(h/this.tubularSegments,l/this.radialSegments)),s.push(f.clone().sub(a).normalize())}for(var l=1;this.radialSegments>=l;l++)for(var h=1;this.tubularSegments>=h;h++){var p=(this.tubularSegments+1)*l+h-1,d=(this.tubularSegments+1)*(l-1)+h-1,m=(this.tubularSegments+1)*(l-1)+h,E=(this.tubularSegments+1)*l+h,g=new THREE.Face4(p,d,m,E,[s[p],s[d],s[m],s[E]]);g.normal.add(s[p]),g.normal.add(s[d]),g.normal.add(s[m]),g.normal.add(s[E]),g.normal.normalize(),this.faces.push(g),this.faceVertexUvs[0].push([o[p].clone(),o[d].clone(),o[m].clone(),o[E].clone()])}this.computeCentroids()},THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TorusKnotGeometry=function(e,t,r,i,n,a,o){function s(e,t,r){return h.vertices.push(new THREE.Vector3(e,t,r))-1}function l(e,t,r,i,n,a){var o=Math.cos(e);Math.cos(t);var s=Math.sin(e),l=r/i*e,h=Math.cos(l),c=.5*n*(2+h)*o,u=.5*n*(2+h)*s,f=.5*a*n*Math.sin(l);return new THREE.Vector3(c,u,f)}THREE.Geometry.call(this);var h=this;this.radius=e||100,this.tube=t||40,this.radialSegments=r||64,this.tubularSegments=i||8,this.p=n||2,this.q=a||3,this.heightScale=o||1,this.grid=Array(this.radialSegments);for(var c=new THREE.Vector3,u=new THREE.Vector3,f=new THREE.Vector3,p=0;this.radialSegments>p;++p){this.grid[p]=Array(this.tubularSegments);for(var d=0;this.tubularSegments>d;++d){var m,E,g=2*(p/this.radialSegments)*this.p*Math.PI,v=2*(d/this.tubularSegments)*Math.PI,y=l(g,v,this.q,this.p,this.radius,this.heightScale),T=l(g+.01,v,this.q,this.p,this.radius,this.heightScale);c.subVectors(T,y),u.addVectors(T,y),f.crossVectors(c,u),u.crossVectors(f,c),f.normalize(),u.normalize(),m=-this.tube*Math.cos(v),E=this.tube*Math.sin(v),y.x+=m*u.x+E*f.x,y.y+=m*u.y+E*f.y,y.z+=m*u.z+E*f.z,this.grid[p][d]=s(y.x,y.y,y.z)}}for(var p=0;this.radialSegments>p;++p)for(var d=0;this.tubularSegments>d;++d){var R=(p+1)%this.radialSegments,x=(d+1)%this.tubularSegments,H=this.grid[p][d],b=this.grid[R][d],w=this.grid[R][x],_=this.grid[p][x],S=new THREE.Vector2(p/this.radialSegments,d/this.tubularSegments),M=new THREE.Vector2((p+1)/this.radialSegments,d/this.tubularSegments),C=new THREE.Vector2((p+1)/this.radialSegments,(d+1)/this.tubularSegments),A=new THREE.Vector2(p/this.radialSegments,(d+1)/this.tubularSegments);this.faces.push(new THREE.Face4(H,b,w,_)),this.faceVertexUvs[0].push([S,M,C,A])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry=function(e,t,r,i,n,a){function o(e,t,r){return S.vertices.push(new THREE.Vector3(e,t,r))-1}THREE.Geometry.call(this),this.path=e,this.segments=t||64,this.radius=r||1,this.radiusSegments=i||8,this.closed=n||!1,a&&(this.debug=new THREE.Object3D),this.grid=[];var s,l,h,c,u,f,p,d,m,E,g,v,y,T,R,x,H,b,w,_,S=this,M=this.segments+1,C=new THREE.Vector3,A=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed),L=A.tangents,P=A.normals,D=A.binormals;for(this.tangents=L,this.normals=P,this.binormals=D,m=0;M>m;m++)for(this.grid[m]=[],c=m/(M-1),d=e.getPointAt(c),s=L[m],l=P[m],h=D[m],this.debug&&(this.debug.add(new THREE.ArrowHelper(s,d,r,255)),this.debug.add(new THREE.ArrowHelper(l,d,r,16711680)),this.debug.add(new THREE.ArrowHelper(h,d,r,65280))),E=0;this.radiusSegments>E;E++)u=2*(E/this.radiusSegments)*Math.PI,f=-this.radius*Math.cos(u),p=this.radius*Math.sin(u),C.copy(d),C.x+=f*l.x+p*h.x,C.y+=f*l.y+p*h.y,C.z+=f*l.z+p*h.z,this.grid[m][E]=o(C.x,C.y,C.z);for(m=0;this.segments>m;m++)for(E=0;this.radiusSegments>E;E++)g=this.closed?(m+1)%this.segments:m+1,v=(E+1)%this.radiusSegments,y=this.grid[m][E],T=this.grid[g][E],R=this.grid[g][v],x=this.grid[m][v],H=new THREE.Vector2(m/this.segments,E/this.radiusSegments),b=new THREE.Vector2((m+1)/this.segments,E/this.radiusSegments),w=new THREE.Vector2((m+1)/this.segments,(E+1)/this.radiusSegments),_=new THREE.Vector2(m/this.segments,(E+1)/this.radiusSegments),this.faces.push(new THREE.Face4(y,T,R,x)),this.faceVertexUvs[0].push([H,b,w,_]);this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TubeGeometry.FrenetFrames=function(e,t,r){function i(){p[0]=new THREE.Vector3,d[0]=new THREE.Vector3,a=Number.MAX_VALUE,o=Math.abs(f[0].x),s=Math.abs(f[0].y),l=Math.abs(f[0].z),a>=o&&(a=o,u.set(1,0,0)),a>=s&&(a=s,u.set(0,1,0)),a>=l&&u.set(0,0,1),m.crossVectors(f[0],u).normalize(),p[0].crossVectors(f[0],m),d[0].crossVectors(f[0],p[0])}var n,a,o,s,l,h,c,u=(new THREE.Vector3,new THREE.Vector3),f=(new THREE.Vector3,[]),p=[],d=[],m=new THREE.Vector3,E=new THREE.Matrix4,g=t+1,v=1e-4;for(this.tangents=f,this.normals=p,this.binormals=d,h=0;g>h;h++)c=h/(g-1),f[h]=e.getTangentAt(c),f[h].normalize();for(i(),h=1;g>h;h++)p[h]=p[h-1].clone(),d[h]=d[h-1].clone(),m.crossVectors(f[h-1],f[h]),m.length()>v&&(m.normalize(),n=Math.acos(f[h-1].dot(f[h])),p[h].applyMatrix4(E.makeRotationAxis(m,n))),d[h].crossVectors(f[h],p[h]);if(r)for(n=Math.acos(p[0].dot(p[g-1])),n/=g-1,f[0].dot(m.crossVectors(p[0],p[g-1]))>0&&(n=-n),h=1;g>h;h++)p[h].applyMatrix4(E.makeRotationAxis(f[h],n*h)),d[h].crossVectors(f[h],p[h])},THREE.PolyhedronGeometry=function(e,t,r,i){function n(e){var t=e.normalize().clone();t.index=c.vertices.push(t)-1;var r=s(e)/2/Math.PI+.5,i=l(e)/Math.PI+.5;return t.uv=new THREE.Vector2(r,1-i),t}function a(e,t,r,i){if(1>i){var n=new THREE.Face3(e.index,t.index,r.index,[e.clone(),t.clone(),r.clone()]);n.centroid.add(e).add(t).add(r).divideScalar(3),n.normal=n.centroid.clone().normalize(),c.faces.push(n);var l=s(n.centroid);c.faceVertexUvs[0].push([h(e.uv,e,l),h(t.uv,t,l),h(r.uv,r,l)])}else i-=1,a(e,o(e,t),o(e,r),i),a(o(e,t),t,o(t,r),i),a(o(e,r),o(t,r),r,i),a(o(e,t),o(t,r),o(e,r),i)}function o(e,t){p[e.index]||(p[e.index]=[]),p[t.index]||(p[t.index]=[]);var r=p[e.index][t.index];return void 0===r&&(p[e.index][t.index]=p[t.index][e.index]=r=n((new THREE.Vector3).addVectors(e,t).divideScalar(2))),r}function s(e){return Math.atan2(e.z,-e.x)}function l(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function h(e,t,r){return 0>r&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new THREE.Vector2(r/2/Math.PI+.5,e.y)),e}THREE.Geometry.call(this),r=r||1,i=i||0;for(var c=this,u=0,f=e.length;f>u;u++)n(new THREE.Vector3(e[u][0],e[u][1],e[u][2]));for(var p=[],d=this.vertices,u=0,f=t.length;f>u;u++)a(d[t[u][0]],d[t[u][1]],d[t[u][2]],i);this.mergeVertices();for(var u=0,f=this.vertices.length;f>u;u++)this.vertices[u].multiplyScalar(r);this.computeCentroids(),this.boundingSphere=new THREE.Sphere(new THREE.Vector3,r)},THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.IcosahedronGeometry=function(e,t){var r=(1+Math.sqrt(5))/2,i=[[-1,r,0],[1,r,0],[-1,-r,0],[1,-r,0],[0,-1,r],[0,1,r],[0,-1,-r],[0,1,-r],[r,0,-1],[r,0,1],[-r,0,-1],[-r,0,1]],n=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,i,n,e,t)},THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.OctahedronGeometry=function(e,t){var r=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],i=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.TetrahedronGeometry=function(e,t){var r=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],i=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,r,i,e,t)},THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ParametricGeometry=function(e,t,r,i){THREE.Geometry.call(this);var n=this.vertices,a=this.faces,o=this.faceVertexUvs[0];i=void 0===i?!1:i;var s,l,h,c,u,f=t+1;for(s=0;r>=s;s++)for(u=s/r,l=0;t>=l;l++)c=l/t,h=e(c,u),n.push(h);var p,d,m,E,g,v,y,T;for(s=0;r>s;s++)for(l=0;t>l;l++)p=s*f+l,d=s*f+l+1,m=(s+1)*f+l,E=(s+1)*f+l+1,g=new THREE.Vector2(l/t,s/r),v=new THREE.Vector2((l+1)/t,s/r),y=new THREE.Vector2(l/t,(s+1)/r),T=new THREE.Vector2((l+1)/t,(s+1)/r),i?(a.push(new THREE.Face3(p,d,m)),a.push(new THREE.Face3(d,E,m)),o.push([g,v,y]),o.push([v,T,y])):(a.push(new THREE.Face4(p,d,E,m)),o.push([g,v,T,y]));this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.ConvexGeometry=function(e){function t(t){var i=e[t].clone(),o=i.length();i.x+=o*a(),i.y+=o*a(),i.z+=o*a();for(var l=[],h=0;s.length>h;){var c=s[h];if(r(c,i)){for(var u=0;3>u;u++){for(var f=[c[u],c[(u+1)%3]],p=!0,d=0;l.length>d;d++)if(n(l[d],f)){l[d]=l[l.length-1],l.pop(),p=!1;break}p&&l.push(f)}s[h]=s[s.length-1],s.pop()}else h++}for(var d=0;l.length>d;d++)s.push([l[d][0],l[d][1],t])}function r(t,r){var n=e[t[0]],a=e[t[1]],o=e[t[2]],s=i(n,a,o),l=s.dot(n);return s.dot(r)>=l}function i(e,t,r){var i=new THREE.Vector3,n=new THREE.Vector3;return i.subVectors(r,t),n.subVectors(e,t),i.cross(n),i.normalize(),i}function n(e,t){return e[0]===t[1]&&e[1]===t[0]}function a(){return 2e-6*(Math.random()-.5)}function o(e){var t=e.length();return new THREE.Vector2(e.x/t,e.y/t)}THREE.Geometry.call(this);for(var s=[[0,1,2],[0,2,1]],l=3;e.length>l;l++)t(l);for(var h=0,c=Array(e.length),l=0;s.length>l;l++)for(var u=s[l],f=0;3>f;f++)void 0===c[u[f]]&&(c[u[f]]=h++,this.vertices.push(e[u[f]])),u[f]=c[u[f]];for(var l=0;s.length>l;l++)this.faces.push(new THREE.Face3(s[l][0],s[l][1],s[l][2]));for(var l=0;this.faces.length>l;l++){var u=this.faces[l];this.faceVertexUvs[0].push([o(this.vertices[u.a]),o(this.vertices[u.b]),o(this.vertices[u.c])])}this.computeCentroids(),this.computeFaceNormals(),this.computeVertexNormals()},THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype),THREE.AxisHelper=function(e){var t=new THREE.Geometry;t.vertices.push(new THREE.Vector3,new THREE.Vector3(e||1,0,0),new THREE.Vector3,new THREE.Vector3(0,e||1,0),new THREE.Vector3,new THREE.Vector3(0,0,e||1)),t.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));var r=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,t,r,THREE.LinePieces)},THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype),THREE.ArrowHelper=function(e,t,r,i){THREE.Object3D.call(this),void 0===r&&(r=20),void 0===i&&(i=16776960);var n=new THREE.Geometry;n.vertices.push(new THREE.Vector3(0,0,0)),n.vertices.push(new THREE.Vector3(0,1,0)),this.line=new THREE.Line(n,new THREE.LineBasicMaterial({color:i})),this.add(this.line);var a=new THREE.CylinderGeometry(0,.05,.25,5,1);this.cone=new THREE.Mesh(a,new THREE.MeshBasicMaterial({color:i})),this.cone.position.set(0,1,0),this.add(this.cone),t instanceof THREE.Vector3&&(this.position=t),this.setDirection(e),this.setLength(r)},THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.ArrowHelper.prototype.setDirection=function(e){var t=THREE.ArrowHelper.__v1.copy(e).normalize();if(t.y>.999)this.rotation.set(0,0,0);else if(-.999>t.y)this.rotation.set(Math.PI,0,0);else{var r=THREE.ArrowHelper.__v2.set(t.z,0,-t.x).normalize(),i=Math.acos(t.y),n=THREE.ArrowHelper.__q1.setFromAxisAngle(r,i);this.rotation.setEulerFromQuaternion(n,this.eulerOrder)}},THREE.ArrowHelper.prototype.setLength=function(e){this.scale.set(e,e,e)},THREE.ArrowHelper.prototype.setColor=function(e){this.line.material.color.setHex(e),this.cone.material.color.setHex(e)},THREE.ArrowHelper.__v1=new THREE.Vector3,THREE.ArrowHelper.__v2=new THREE.Vector3,THREE.ArrowHelper.__q1=new THREE.Quaternion,THREE.CameraHelper=function(e){function t(e,t,i){r(e,i),r(t,i)}function r(e,t){i.geometry.vertices.push(new THREE.Vector3),i.geometry.colors.push(new THREE.Color(t)),void 0===i.pointMap[e]&&(i.pointMap[e]=[]),i.pointMap[e].push(i.geometry.vertices.length-1)}THREE.Line.call(this);var i=this;this.geometry=new THREE.Geometry,this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),this.type=THREE.LinePieces,this.matrixWorld=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap={};var n=16755200,a=16711680,o=43775,s=16777215,l=3355443;t("n1","n2",n),t("n2","n4",n),t("n4","n3",n),t("n3","n1",n),t("f1","f2",n),t("f2","f4",n),t("f4","f3",n),t("f3","f1",n),t("n1","f1",n),t("n2","f2",n),t("n3","f3",n),t("n4","f4",n),t("p","n1",a),t("p","n2",a),t("p","n3",a),t("p","n4",a),t("u1","u2",o),t("u2","u3",o),t("u3","u1",o),t("c","t",s),t("p","c",l),t("cn1","cn2",l),t("cn3","cn4",l),t("cf1","cf2",l),t("cf3","cf4",l),this.camera=e,this.update(e)},THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype),THREE.CameraHelper.prototype.update=function(){function e(e,r,i,n){THREE.CameraHelper.__v.set(r,i,n),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);var a=t.pointMap[e];if(void 0!==a)for(var o=0,s=a.length;s>o;o++)t.geometry.vertices[a[o]].copy(THREE.CameraHelper.__v)}var t=this,r=1,i=1;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-r,-i,-1),e("n2",r,-i,-1),e("n3",-r,i,-1),e("n4",r,i,-1),e("f1",-r,-i,1),e("f2",r,-i,1),e("f3",-r,i,1),e("f4",r,i,1),e("u1",.7*r,1.1*i,-1),e("u2",.7*-r,1.1*i,-1),e("u3",0,2*i,-1),e("cf1",-r,0,1),e("cf2",r,0,1),e("cf3",0,-i,1),e("cf4",0,i,1),e("cn1",-r,0,-1),e("cn2",r,0,-1),e("cn3",0,-i,-1),e("cn4",0,i,-1),this.geometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.DirectionalLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),a=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.MeshBasicMaterial({color:i,fog:!1}),s=new THREE.LineBasicMaterial({color:i,fog:!1});if(this.lightSphere=new THREE.Mesh(n,o),this.lightRays=new THREE.Line(a,s,THREE.LinePieces),this.add(this.lightSphere),this.add(this.lightRays),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse){var l=new THREE.SphereGeometry(t,8,4),h=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1});this.targetSphere=new THREE.Mesh(l,h),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var c=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),u=new THREE.Geometry;u.vertices.push(this.position.clone()),u.vertices.push(this.targetSphere.position.clone()),u.computeLineDistances(),this.targetLine=new THREE.Line(u,c),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.HemisphereLightHelper=function(e,t,r){THREE.Object3D.call(this),this.light=e,this.position=e.position;var i=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(i);var n=this.color.getHex();this.groundColor=e.groundColor.clone(),this.groundColor.multiplyScalar(i);for(var a=this.groundColor.getHex(),o=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,0,.5*Math.PI),s=new THREE.SphereGeometry(t,16,8,0,2*Math.PI,.5*Math.PI,Math.PI),l=new THREE.MeshBasicMaterial({color:n,fog:!1}),h=new THREE.MeshBasicMaterial({color:a,fog:!1}),c=0,u=o.faces.length;u>c;c++)o.faces[c].materialIndex=0;for(var c=0,u=s.faces.length;u>c;c++)s.faces[c].materialIndex=1;THREE.GeometryUtils.merge(o,s),this.lightSphere=new THREE.Mesh(o,new THREE.MeshFaceMaterial([l,h])),this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(t+r),0),r,n),this.lightArrow.rotation.x=Math.PI,this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(t+r),0),r,a);var f=new THREE.Object3D;f.rotation.x=.5*-Math.PI,f.add(this.lightSphere),f.add(this.lightArrow),f.add(this.lightArrowGround),this.add(f),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0,this.target=new THREE.Vector3,this.lookAt(this.target)},THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.HemisphereLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.groundColor.copy(this.light.groundColor),this.groundColor.multiplyScalar(e),this.lightSphere.material.materials[0].color.copy(this.color),this.lightSphere.material.materials[1].color.copy(this.groundColor),this.lightArrow.setColor(this.color.getHex()),this.lightArrowGround.setColor(this.groundColor.getHex()),this.lookAt(this.target)},THREE.PointLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position;var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),a=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.IcosahedronGeometry(1,2),s=new THREE.MeshBasicMaterial({color:i,fog:!1}),l=new THREE.LineBasicMaterial({color:i,fog:!1}),h=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.1,transparent:!0});this.lightSphere=new THREE.Mesh(n,s),this.lightRays=new THREE.Line(a,l,THREE.LinePieces),this.lightDistance=new THREE.Mesh(o,h);var c=e.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c),this.add(this.lightSphere),this.add(this.lightRays),this.add(this.lightDistance),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.properties.isGizmo=!0},THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.PointLightHelper.prototype.update=function(){var e=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(e),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightDistance.material.color.copy(this.color);
var t=this.light.distance;0===t?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(t,t,t))},THREE.SpotLightHelper=function(e,t){THREE.Object3D.call(this),this.light=e,this.position=e.position,this.direction=new THREE.Vector3,this.direction.subVectors(e.target.position,e.position);var r=THREE.Math.clamp(e.intensity,0,1);this.color=e.color.clone(),this.color.multiplyScalar(r);var i=this.color.getHex(),n=new THREE.SphereGeometry(t,16,8),a=new THREE.AsteriskGeometry(1.25*t,2.25*t),o=new THREE.CylinderGeometry(1e-4,1,1,8,1,!0),s=new THREE.Matrix4;s.rotateX(-Math.PI/2),s.translate(new THREE.Vector3(0,-.5,0)),o.applyMatrix(s);var l=new THREE.MeshBasicMaterial({color:i,fog:!1}),h=new THREE.LineBasicMaterial({color:i,fog:!1}),c=new THREE.MeshBasicMaterial({color:i,fog:!1,wireframe:!0,opacity:.3,transparent:!0});this.lightSphere=new THREE.Mesh(n,l),this.lightCone=new THREE.Mesh(o,c);var u=e.distance?e.distance:1e4,f=2*u*Math.tan(.5*e.angle);if(this.lightCone.scale.set(f,f,u),this.lightRays=new THREE.Line(a,h,THREE.LinePieces),this.gyroscope=new THREE.Gyroscope,this.gyroscope.add(this.lightSphere),this.gyroscope.add(this.lightRays),this.add(this.gyroscope),this.add(this.lightCone),this.lookAt(e.target.position),this.lightSphere.properties.isGizmo=!0,this.lightSphere.properties.gizmoSubject=e,this.lightSphere.properties.gizmoRoot=this,this.targetSphere=null,void 0!==e.target.properties.targetInverse){var p=new THREE.SphereGeometry(t,8,4),d=new THREE.MeshBasicMaterial({color:i,wireframe:!0,fog:!1});this.targetSphere=new THREE.Mesh(p,d),this.targetSphere.position=e.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=e.target,this.targetSphere.properties.gizmoRoot=this.targetSphere;var m=new THREE.LineDashedMaterial({color:i,dashSize:4,gapSize:4,opacity:.75,transparent:!0,fog:!1}),E=new THREE.Geometry;E.vertices.push(this.position.clone()),E.vertices.push(this.targetSphere.position.clone()),E.computeLineDistances(),this.targetLine=new THREE.Line(E,m),this.targetLine.properties.isGizmo=!0}this.properties.isGizmo=!0},THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype),THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position),this.lookAt(this.light.target.position);var e=this.light.distance?this.light.distance:1e4,t=2*e*Math.tan(.5*this.light.angle);this.lightCone.scale.set(t,t,e);var r=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color),this.color.multiplyScalar(r),this.lightSphere.material.color.copy(this.color),this.lightRays.material.color.copy(this.color),this.lightCone.material.color.copy(this.color),null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(){}},THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare=function(e,t,r,i,n){THREE.Object3D.call(this),this.lensFlares=[],this.positionScreen=new THREE.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,r,i,n)},THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype),THREE.LensFlare.prototype.add=function(e,t,r,i,n,a){void 0===t&&(t=-1),void 0===r&&(r=0),void 0===a&&(a=1),void 0===n&&(n=new THREE.Color(16777215)),void 0===i&&(i=THREE.NormalBlending),r=Math.min(r,Math.max(0,r)),this.lensFlares.push({texture:e,size:t,distance:r,x:0,y:0,z:0,scale:1,rotation:1,opacity:a,color:n,blending:i})},THREE.LensFlare.prototype.updateLensFlares=function(){var e,t,r=this.lensFlares.length,i=2*-this.positionScreen.x,n=2*-this.positionScreen.y;for(e=0;r>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+i*t.distance,t.y=this.positionScreen.y+n*t.distance,t.wantedRotation=.25*t.x*Math.PI,t.rotation+=.25*(t.wantedRotation-t.rotation)},THREE.MorphBlendMesh=function(e,t){THREE.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var r=this.geometry.morphTargets.length,i="__default",n=0,a=r-1,o=r/1;this.createAnimation(i,n,a,o),this.setAnimationWeight(i,1)},THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype),THREE.MorphBlendMesh.prototype.createAnimation=function(e,t,r,i){var n={startFrame:t,endFrame:r,length:r-t+1,fps:i,duration:(r-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=n,this.animationsList.push(n)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,r=/([a-z]+)(\d+)/,i={},n=this.geometry,a=0,o=n.morphTargets.length;o>a;a++){var s=n.morphTargets[a],l=s.name.match(r);if(l&&l.length>1){var h=l[1];l[2],i[h]||(i[h]={start:1/0,end:-1/0});var c=i[h];c.start>a&&(c.start=a),a>c.end&&(c.end=a),t||(t=h)}}for(var h in i){var c=i[h];this.createAnimation(h,c.start,c.end,e)}this.firstAnimation=t},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var r=this.animationsMap[e];r&&(r.fps=t,r.duration=(r.end-r.start)/r.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var r=this.animationsMap[e];r&&(r.duration=t,r.fps=(r.end-r.start)/r.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var r=this.animationsMap[e];r&&(r.weight=t)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var r=this.animationsMap[e];r&&(r.time=t)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,r=this.animationsMap[e];return r&&(t=r.time),t},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,r=this.animationsMap[e];return r&&(t=r.duration),t},THREE.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("animation["+e+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},THREE.MorphBlendMesh.prototype.update=function(e){for(var t=0,r=this.animationsList.length;r>t;t++){var i=this.animationsList[t];if(i.active){var n=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||0>i.time)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),0>i.time&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,0>i.time&&(i.time+=i.duration));var a=i.startFrame+THREE.Math.clamp(Math.floor(i.time/n),0,i.length-1),o=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*o,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var s=i.time%n/n;i.directionBackwards&&(s=1-s),this.morphTargetInfluences[i.currentFrame]=s*o,this.morphTargetInfluences[i.lastFrame]=(1-s)*o}}},THREE.LensFlarePlugin=function(){function e(e,r){var i=t.createProgram(),n=t.createShader(t.FRAGMENT_SHADER),a=t.createShader(t.VERTEX_SHADER),o="precision "+r+" float;\n";return t.shaderSource(n,o+e.fragmentShader),t.shaderSource(a,o+e.vertexShader),t.compileShader(n),t.compileShader(a),t.attachShader(i,n),t.attachShader(i,a),t.linkProgram(i),i}var t,r,i,n={};this.init=function(a){t=a.context,r=a,i=a.getPrecision(),n.vertices=new Float32Array(16),n.faces=new Uint16Array(6);var o=0;n.vertices[o++]=-1,n.vertices[o++]=-1,n.vertices[o++]=0,n.vertices[o++]=0,n.vertices[o++]=1,n.vertices[o++]=-1,n.vertices[o++]=1,n.vertices[o++]=0,n.vertices[o++]=1,n.vertices[o++]=1,n.vertices[o++]=1,n.vertices[o++]=1,n.vertices[o++]=-1,n.vertices[o++]=1,n.vertices[o++]=0,n.vertices[o++]=1,o=0,n.faces[o++]=0,n.faces[o++]=1,n.faces[o++]=2,n.faces[o++]=0,n.faces[o++]=2,n.faces[o++]=3,n.vertexBuffer=t.createBuffer(),n.elementBuffer=t.createBuffer(),t.bindBuffer(t.ARRAY_BUFFER,n.vertexBuffer),t.bufferData(t.ARRAY_BUFFER,n.vertices,t.STATIC_DRAW),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.elementBuffer),t.bufferData(t.ELEMENT_ARRAY_BUFFER,n.faces,t.STATIC_DRAW),n.tempTexture=t.createTexture(),n.occlusionTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,n.tempTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGB,16,16,0,t.RGB,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),t.bindTexture(t.TEXTURE_2D,n.occlusionTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,16,16,0,t.RGBA,t.UNSIGNED_BYTE,null),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.NEAREST),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.NEAREST),0>=t.getParameter(t.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(n.hasVertexTexture=!1,n.program=e(THREE.ShaderFlares.lensFlare,i)):(n.hasVertexTexture=!0,n.program=e(THREE.ShaderFlares.lensFlareVertexTexture,i)),n.attributes={},n.uniforms={},n.attributes.vertex=t.getAttribLocation(n.program,"position"),n.attributes.uv=t.getAttribLocation(n.program,"uv"),n.uniforms.renderType=t.getUniformLocation(n.program,"renderType"),n.uniforms.map=t.getUniformLocation(n.program,"map"),n.uniforms.occlusionMap=t.getUniformLocation(n.program,"occlusionMap"),n.uniforms.opacity=t.getUniformLocation(n.program,"opacity"),n.uniforms.color=t.getUniformLocation(n.program,"color"),n.uniforms.scale=t.getUniformLocation(n.program,"scale"),n.uniforms.rotation=t.getUniformLocation(n.program,"rotation"),n.uniforms.screenPosition=t.getUniformLocation(n.program,"screenPosition")},this.render=function(e,i,a,o){var s=e.__webglFlares,l=s.length;if(l){var h=new THREE.Vector3,c=o/a,u=.5*a,f=.5*o,p=16/o,d=new THREE.Vector2(p*c,p),m=new THREE.Vector3(1,1,0),E=new THREE.Vector2(1,1),g=n.uniforms,v=n.attributes;t.useProgram(n.program),t.enableVertexAttribArray(n.attributes.vertex),t.enableVertexAttribArray(n.attributes.uv),t.uniform1i(g.occlusionMap,0),t.uniform1i(g.map,1),t.bindBuffer(t.ARRAY_BUFFER,n.vertexBuffer),t.vertexAttribPointer(v.vertex,2,t.FLOAT,!1,16,0),t.vertexAttribPointer(v.uv,2,t.FLOAT,!1,16,8),t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n.elementBuffer),t.disable(t.CULL_FACE),t.depthMask(!1);var y,T,R,x,H;for(y=0;l>y;y++)if(p=16/o,d.set(p*c,p),x=s[y],h.set(x.matrixWorld.elements[12],x.matrixWorld.elements[13],x.matrixWorld.elements[14]),h.applyMatrix4(i.matrixWorldInverse),h.applyProjection(i.projectionMatrix),m.copy(h),E.x=m.x*u+u,E.y=m.y*f+f,n.hasVertexTexture||E.x>0&&a>E.x&&E.y>0&&o>E.y)for(t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,n.tempTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGB,E.x-8,E.y-8,16,16,0),t.uniform1i(g.renderType,0),t.uniform2f(g.scale,d.x,d.y),t.uniform3f(g.screenPosition,m.x,m.y,m.z),t.disable(t.BLEND),t.enable(t.DEPTH_TEST),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,n.occlusionTexture),t.copyTexImage2D(t.TEXTURE_2D,0,t.RGBA,E.x-8,E.y-8,16,16,0),t.uniform1i(g.renderType,1),t.disable(t.DEPTH_TEST),t.activeTexture(t.TEXTURE1),t.bindTexture(t.TEXTURE_2D,n.tempTexture),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0),x.positionScreen.copy(m),x.customUpdateCallback?x.customUpdateCallback(x):x.updateLensFlares(),t.uniform1i(g.renderType,2),t.enable(t.BLEND),T=0,R=x.lensFlares.length;R>T;T++)H=x.lensFlares[T],H.opacity>.001&&H.scale>.001&&(m.x=H.x,m.y=H.y,m.z=H.z,p=H.size*H.scale/o,d.x=p*c,d.y=p,t.uniform3f(g.screenPosition,m.x,m.y,m.z),t.uniform2f(g.scale,d.x,d.y),t.uniform1f(g.rotation,H.rotation),t.uniform1f(g.opacity,H.opacity),t.uniform3f(g.color,H.color.r,H.color.g,H.color.b),r.setBlending(H.blending,H.blendEquation,H.blendSrc,H.blendDst),r.setTexture(H.texture,1),t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0));t.enable(t.CULL_FACE),t.enable(t.DEPTH_TEST),t.depthMask(!0)}}},THREE.ShadowMapPlugin=function(){function e(e,t){var r=new THREE.DirectionalLight;r.isVirtual=!0,r.onlyShadow=!0,r.castShadow=!0,r.shadowCameraNear=e.shadowCameraNear,r.shadowCameraFar=e.shadowCameraFar,r.shadowCameraLeft=e.shadowCameraLeft,r.shadowCameraRight=e.shadowCameraRight,r.shadowCameraBottom=e.shadowCameraBottom,r.shadowCameraTop=e.shadowCameraTop,r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t],r.shadowMapWidth=e.shadowCascadeWidth[t],r.shadowMapHeight=e.shadowCascadeHeight[t],r.pointsWorld=[],r.pointsFrustum=[];for(var i=r.pointsWorld,n=r.pointsFrustum,a=0;8>a;a++)i[a]=new THREE.Vector3,n[a]=new THREE.Vector3;var o=e.shadowCascadeNearZ[t],s=e.shadowCascadeFarZ[t];return n[0].set(-1,-1,o),n[1].set(1,-1,o),n[2].set(-1,1,o),n[3].set(1,1,o),n[4].set(-1,-1,s),n[5].set(1,-1,s),n[6].set(-1,1,s),n[7].set(1,1,s),r}function t(e,t){var r=e.shadowCascadeArray[t];r.position.copy(e.position),r.target.position.copy(e.target.position),r.lookAt(r.target),r.shadowCameraVisible=e.shadowCameraVisible,r.shadowDarkness=e.shadowDarkness,r.shadowBias=e.shadowCascadeBias[t];var i=e.shadowCascadeNearZ[t],n=e.shadowCascadeFarZ[t],a=r.pointsFrustum;a[0].z=i,a[1].z=i,a[2].z=i,a[3].z=i,a[4].z=n,a[5].z=n,a[6].z=n,a[7].z=n}function r(e,t){var r=t.shadowCamera,i=t.pointsFrustum,n=t.pointsWorld;f.set(1/0,1/0,1/0),p.set(-1/0,-1/0,-1/0);for(var a=0;8>a;a++){var o=n[a];o.copy(i[a]),THREE.ShadowMapPlugin.__projector.unprojectVector(o,e),o.applyMatrix4(r.matrixWorldInverse),o.x<f.x&&(f.x=o.x),o.x>p.x&&(p.x=o.x),o.y<f.y&&(f.y=o.y),o.y>p.y&&(p.y=o.y),o.z<f.z&&(f.z=o.z),o.z>p.z&&(p.z=o.z)}r.left=f.x,r.right=p.x,r.top=p.y,r.bottom=f.y,r.updateProjectionMatrix()}function i(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}var n,a,o,s,l,h,c=new THREE.Frustum,u=new THREE.Matrix4,f=new THREE.Vector3,p=new THREE.Vector3;this.init=function(e){n=e.context,a=e;var t=THREE.ShaderLib.depthRGBA,r=THREE.UniformsUtils.clone(t.uniforms);o=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r}),s=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0}),l=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,skinning:!0}),h=new THREE.ShaderMaterial({fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:r,morphTargets:!0,skinning:!0}),o._shadowPass=!0,s._shadowPass=!0,l._shadowPass=!0,h._shadowPass=!0},this.render=function(e,t){a.shadowMapEnabled&&a.shadowMapAutoUpdate&&this.update(e,t)},this.update=function(f,p){var d,m,E,g,v,y,T,R,x,H,b,w,_,S,M=[],C=0,A=null;for(n.clearColor(1,1,1,1),n.disable(n.BLEND),n.enable(n.CULL_FACE),n.frontFace(n.CCW),a.shadowMapCullFace===THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.BACK),a.setDepthTest(!0),d=0,m=f.__lights.length;m>d;d++)if(_=f.__lights[d],_.castShadow)if(_ instanceof THREE.DirectionalLight&&_.shadowCascade)for(v=0;_.shadowCascadeCount>v;v++){var L;if(_.shadowCascadeArray[v])L=_.shadowCascadeArray[v];else{L=e(_,v),L.originalCamera=p;var P=new THREE.Gyroscope;P.position=_.shadowCascadeOffset,P.add(L),P.add(L.target),p.add(P),_.shadowCascadeArray[v]=L,console.log("Created virtualLight",L)}t(_,v),M[C]=L,C++}else M[C]=_,C++;for(d=0,m=M.length;m>d;d++){if(_=M[d],!_.shadowMap){var D=THREE.LinearFilter;a.shadowMapType===THREE.PCFSoftShadowMap&&(D=THREE.NearestFilter);var F={minFilter:D,magFilter:D,format:THREE.RGBAFormat};_.shadowMap=new THREE.WebGLRenderTarget(_.shadowMapWidth,_.shadowMapHeight,F),_.shadowMapSize=new THREE.Vector2(_.shadowMapWidth,_.shadowMapHeight),_.shadowMatrix=new THREE.Matrix4}if(!_.shadowCamera){if(_ instanceof THREE.SpotLight)_.shadowCamera=new THREE.PerspectiveCamera(_.shadowCameraFov,_.shadowMapWidth/_.shadowMapHeight,_.shadowCameraNear,_.shadowCameraFar);else{if(!(_ instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}_.shadowCamera=new THREE.OrthographicCamera(_.shadowCameraLeft,_.shadowCameraRight,_.shadowCameraTop,_.shadowCameraBottom,_.shadowCameraNear,_.shadowCameraFar)}f.add(_.shadowCamera),a.autoUpdateScene&&f.updateMatrixWorld()}for(_.shadowCameraVisible&&!_.cameraHelper&&(_.cameraHelper=new THREE.CameraHelper(_.shadowCamera),_.shadowCamera.add(_.cameraHelper)),_.isVirtual&&L.originalCamera==p&&r(p,_),y=_.shadowMap,T=_.shadowMatrix,R=_.shadowCamera,R.position.copy(_.matrixWorld.getPosition()),R.lookAt(_.target.matrixWorld.getPosition()),R.updateMatrixWorld(),R.matrixWorldInverse.getInverse(R.matrixWorld),_.cameraHelper&&(_.cameraHelper.visible=_.shadowCameraVisible),_.shadowCameraVisible&&_.cameraHelper.update(),T.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),T.multiply(R.projectionMatrix),T.multiply(R.matrixWorldInverse),u.multiplyMatrices(R.projectionMatrix,R.matrixWorldInverse),c.setFromMatrix(u),a.setRenderTarget(y),a.clear(),S=f.__webglObjects,E=0,g=S.length;g>E;E++)b=S[E],w=b.object,b.render=!1,w.visible&&w.castShadow&&((w instanceof THREE.Mesh||w instanceof THREE.ParticleSystem)&&w.frustumCulled&&!c.intersectsObject(w)||(w._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld),b.render=!0));var U,z,B;for(E=0,g=S.length;g>E;E++)b=S[E],b.render&&(w=b.object,x=b.buffer,U=i(w),z=w.geometry.morphTargets.length>0&&U.morphTargets,B=w instanceof THREE.SkinnedMesh&&U.skinning,H=w.customDepthMaterial?w.customDepthMaterial:B?z?h:l:z?s:o,x instanceof THREE.BufferGeometry?a.renderBufferDirect(R,f.__lights,A,H,x,w):a.renderBuffer(R,f.__lights,A,H,x,w));for(S=f.__webglObjectsImmediate,E=0,g=S.length;g>E;E++)b=S[E],w=b.object,w.visible&&w.castShadow&&(w._modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld),a.renderImmediateObject(R,f.__lights,A,o,w))}var N=a.getClearColor(),I=a.getClearAlpha();n.clearColor(N.r,N.g,N.b,I),n.enable(n.BLEND),a.shadowMapCullFace===THREE.CullFaceFront&&n.cullFace(n.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function e(e,t){var i=r.createProgram(),n=r.createShader(r.FRAGMENT_SHADER),a=r.createShader(r.VERTEX_SHADER),o="precision "+t+" float;\n";return r.shaderSource(n,o+e.fragmentShader),r.shaderSource(a,o+e.vertexShader),r.compileShader(n),r.compileShader(a),r.attachShader(i,n),r.attachShader(i,a),r.linkProgram(i),i}function t(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var r,i,n,a={};this.init=function(t){r=t.context,i=t,n=t.getPrecision(),a.vertices=new Float32Array(16),a.faces=new Uint16Array(6);var o=0;a.vertices[o++]=-1,a.vertices[o++]=-1,a.vertices[o++]=0,a.vertices[o++]=0,a.vertices[o++]=1,a.vertices[o++]=-1,a.vertices[o++]=1,a.vertices[o++]=0,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=1,a.vertices[o++]=-1,a.vertices[o++]=1,a.vertices[o++]=0,a.vertices[o++]=1,o=0,a.faces[o++]=0,a.faces[o++]=1,a.faces[o++]=2,a.faces[o++]=0,a.faces[o++]=2,a.faces[o++]=3,a.vertexBuffer=r.createBuffer(),a.elementBuffer=r.createBuffer(),r.bindBuffer(r.ARRAY_BUFFER,a.vertexBuffer),r.bufferData(r.ARRAY_BUFFER,a.vertices,r.STATIC_DRAW),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.elementBuffer),r.bufferData(r.ELEMENT_ARRAY_BUFFER,a.faces,r.STATIC_DRAW),a.program=e(THREE.ShaderSprite.sprite,n),a.attributes={},a.uniforms={},a.attributes.position=r.getAttribLocation(a.program,"position"),a.attributes.uv=r.getAttribLocation(a.program,"uv"),a.uniforms.uvOffset=r.getUniformLocation(a.program,"uvOffset"),a.uniforms.uvScale=r.getUniformLocation(a.program,"uvScale"),a.uniforms.rotation=r.getUniformLocation(a.program,"rotation"),a.uniforms.scale=r.getUniformLocation(a.program,"scale"),a.uniforms.alignment=r.getUniformLocation(a.program,"alignment"),a.uniforms.color=r.getUniformLocation(a.program,"color"),a.uniforms.map=r.getUniformLocation(a.program,"map"),a.uniforms.opacity=r.getUniformLocation(a.program,"opacity"),a.uniforms.useScreenCoordinates=r.getUniformLocation(a.program,"useScreenCoordinates"),a.uniforms.sizeAttenuation=r.getUniformLocation(a.program,"sizeAttenuation"),a.uniforms.screenPosition=r.getUniformLocation(a.program,"screenPosition"),a.uniforms.modelViewMatrix=r.getUniformLocation(a.program,"modelViewMatrix"),a.uniforms.projectionMatrix=r.getUniformLocation(a.program,"projectionMatrix"),a.uniforms.fogType=r.getUniformLocation(a.program,"fogType"),a.uniforms.fogDensity=r.getUniformLocation(a.program,"fogDensity"),a.uniforms.fogNear=r.getUniformLocation(a.program,"fogNear"),a.uniforms.fogFar=r.getUniformLocation(a.program,"fogFar"),a.uniforms.fogColor=r.getUniformLocation(a.program,"fogColor"),a.uniforms.alphaTest=r.getUniformLocation(a.program,"alphaTest")},this.render=function(e,n,o,s){var l=e.__webglSprites,h=l.length;if(h){var c=a.attributes,u=a.uniforms,f=s/o,p=.5*o,d=.5*s;r.useProgram(a.program),r.enableVertexAttribArray(c.position),r.enableVertexAttribArray(c.uv),r.disable(r.CULL_FACE),r.enable(r.BLEND),r.bindBuffer(r.ARRAY_BUFFER,a.vertexBuffer),r.vertexAttribPointer(c.position,2,r.FLOAT,!1,16,0),r.vertexAttribPointer(c.uv,2,r.FLOAT,!1,16,8),r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,a.elementBuffer),r.uniformMatrix4fv(u.projectionMatrix,!1,n.projectionMatrix.elements),r.activeTexture(r.TEXTURE0),r.uniform1i(u.map,0);var m=0,E=0,g=e.fog;g?(r.uniform3f(u.fogColor,g.color.r,g.color.g,g.color.b),g instanceof THREE.Fog?(r.uniform1f(u.fogNear,g.near),r.uniform1f(u.fogFar,g.far),r.uniform1i(u.fogType,1),m=1,E=1):g instanceof THREE.FogExp2&&(r.uniform1f(u.fogDensity,g.density),r.uniform1i(u.fogType,2),m=2,E=2)):(r.uniform1i(u.fogType,0),m=0,E=0);var v,y,T,R,x,H=[];for(v=0;h>v;v++)y=l[v],T=y.material,y.visible&&0!==T.opacity&&(T.useScreenCoordinates?y.z=-y.position.z:(y._modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,y.matrixWorld),y.z=-y._modelViewMatrix.elements[14]));for(l.sort(t),v=0;h>v;v++)y=l[v],T=y.material,y.visible&&0!==T.opacity&&T.map&&T.map.image&&T.map.image.width&&(r.uniform1f(u.alphaTest,T.alphaTest),T.useScreenCoordinates===!0?(r.uniform1i(u.useScreenCoordinates,1),r.uniform3f(u.screenPosition,(y.position.x*i.devicePixelRatio-p)/p,(d-y.position.y*i.devicePixelRatio)/d,Math.max(0,Math.min(1,y.position.z))),H[0]=i.devicePixelRatio,H[1]=i.devicePixelRatio):(r.uniform1i(u.useScreenCoordinates,0),r.uniform1i(u.sizeAttenuation,T.sizeAttenuation?1:0),r.uniformMatrix4fv(u.modelViewMatrix,!1,y._modelViewMatrix.elements),H[0]=1,H[1]=1),x=e.fog&&T.fog?E:0,m!==x&&(r.uniform1i(u.fogType,x),m=x),R=1/(T.scaleByViewport?s:1),H[0]*=R*f*y.scale.x,H[1]*=R*y.scale.y,r.uniform2f(u.uvScale,T.uvScale.x,T.uvScale.y),r.uniform2f(u.uvOffset,T.uvOffset.x,T.uvOffset.y),r.uniform2f(u.alignment,T.alignment.x,T.alignment.y),r.uniform1f(u.opacity,T.opacity),r.uniform3f(u.color,T.color.r,T.color.g,T.color.b),r.uniform1f(u.rotation,y.rotation),r.uniform2fv(u.scale,H),i.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),i.setDepthTest(T.depthTest),i.setDepthWrite(T.depthWrite),i.setTexture(T.map,0),r.drawElements(r.TRIANGLES,6,r.UNSIGNED_SHORT,0));r.enable(r.CULL_FACE)}}},THREE.DepthPassPlugin=function(){function e(e){return e.material instanceof THREE.MeshFaceMaterial?e.material.materials[0]:e.material}this.enabled=!1,this.renderTarget=null;var t,r,i,n,a,o,s=new THREE.Frustum,l=new THREE.Matrix4;this.init=function(e){t=e.context,r=e;var s=THREE.ShaderLib.depthRGBA,l=THREE.UniformsUtils.clone(s.uniforms);i=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l}),n=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0}),a=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,skinning:!0}),o=new THREE.ShaderMaterial({fragmentShader:s.fragmentShader,vertexShader:s.vertexShader,uniforms:l,morphTargets:!0,skinning:!0}),i._shadowPass=!0,n._shadowPass=!0,a._shadowPass=!0,o._shadowPass=!0},this.render=function(e,t){this.enabled&&this.update(e,t)},this.update=function(h,c){var u,f,p,d,m,E,g,v=null;for(t.clearColor(1,1,1,1),t.disable(t.BLEND),r.setDepthTest(!0),r.autoUpdateScene&&h.updateMatrixWorld(),c.matrixWorldInverse.getInverse(c.matrixWorld),l.multiplyMatrices(c.projectionMatrix,c.matrixWorldInverse),s.setFromMatrix(l),r.setRenderTarget(this.renderTarget),r.clear(),g=h.__webglObjects,u=0,f=g.length;f>u;u++)m=g[u],E=m.object,m.render=!1,E.visible&&((E instanceof THREE.Mesh||E instanceof THREE.ParticleSystem)&&E.frustumCulled&&!s.intersectsObject(E)||(E._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,E.matrixWorld),m.render=!0));var y,T,R;for(u=0,f=g.length;f>u;u++)if(m=g[u],m.render){if(E=m.object,p=m.buffer,E instanceof THREE.ParticleSystem&&!E.customDepthMaterial)continue;y=e(E),y&&r.setMaterialFaces(E.material),T=E.geometry.morphTargets.length>0&&y.morphTargets,R=E instanceof THREE.SkinnedMesh&&y.skinning,d=E.customDepthMaterial?E.customDepthMaterial:R?T?o:a:T?n:i,p instanceof THREE.BufferGeometry?r.renderBufferDirect(c,h.__lights,v,d,p,E):r.renderBuffer(c,h.__lights,v,d,p,E)}for(g=h.__webglObjectsImmediate,u=0,f=g.length;f>u;u++)m=g[u],E=m.object,E.visible&&(E._modelViewMatrix.multiplyMatrices(c.matrixWorldInverse,E.matrixWorld),r.renderImmediateObject(c,h.__lights,v,i,E));var x=r.getClearColor(),H=r.getClearAlpha();t.clearColor(x.r,x.g,x.b,H),t.enable(t.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +","texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility = (       visibility.r / 9.0 ) *","( 1.0 - visibility.g / 9.0 ) *","(       visibility.b / 9.0 ) *","( 1.0 - visibility.a / 9.0 );","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},lensFlare:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +","texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +","texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +","texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}},THREE.ShaderSprite={sprite:{vertexShader:["uniform int useScreenCoordinates;","uniform int sizeAttenuation;","uniform vec3 screenPosition;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 alignment;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position + alignment;","vec2 rotatedPosition;","rotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;","rotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;","vec4 finalPosition;","if( useScreenCoordinates != 0 ) {","finalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );","} else {","finalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );","}","gl_Position = finalPosition;","}"].join("\n"),fragmentShader:["uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")}};