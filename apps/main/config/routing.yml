# default rules
homepage:
  url:   /
  param: { module: default, action: index }

# product
#
# product catalog
productCatalog:
  url:   /catalog
  param: { module: productCatalog, action: index }
#
# product catalog filter
productCatalog_filter:
  url:   /catalog/:productCategory/_filter
  param: { module: productCatalog, action: filter }
  class:   myProductCatalogRoute
  options: { model: ProductCategory, type: object, method: getForRoute }
#
# product catalog by category
productCatalog_category:
  url:   /catalog/:productCategory/:page
  param: { module: productCatalog, action: category, page: 1 }
  class:   myProductCatalogRoute
  options: { model: ProductCategory, type: object, method: getForRoute }
#
# product catalog by category and creator
productCatalog_creator:
  url:   /catalog/:productCategory/:creator/:page
  param: { module: productCatalog, action: creator, page: 1 }
  class:   myProductCatalogRoute
  options: { model: ProductCategory, type: object, method: getForRoute }
#
# product card
productCard:
  url:   /products/:product
  param: { module: productCard, action: index }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
# product comment
productComment:
  url:   /products/:product/comments
  param: { module: productComment, action: index }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
productComment_new:
  url:   /products/:product/comments/new
  param: { module: productComment, action: new }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
productComment_create:
  url:   /products/:product/comments/create
  param: { module: productComment, action: create }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
  requirements:
    sf_method: [ post ]


#
# news list by year
newsCategory_year:
  url:   /news/:newsCategory/:year
  param: { module: newsCategory, action: year }
  class:   myNewsRoute
  options: { model: NewsCategory, type: object, method: getForRoute }
#
# news list by month
newsCategory_month:
  url:   /news/:newsCategory/:year/:month
  param: { module: newsCategory, action: month }
  class:   myNewsRoute
  options: { model: NewsCategory, type: object, method: getForRoute }
#
# news
news_show:
  url:   /news/:newsCategory/:year/:month/:news
  param: { module: news, action: show }
  class:   myNewsRoute
  options: { model: News, type: object, method: getForRoute }


# Пользователь
#
# user
user:
  url:   /private/
  param: { module: user, action: index }
#
# user signin
user_signin:
  url:   /login
  param: { module: guardUser, action: signin }
#
# user signout
user_signout:
  url:   /logout
  param: { module: guardUser, action: signout }
#
# user forgot password
user_forgotPassword:
  url:   /request-password
  param: { module: guardUser, action: forgotPassword }
#
# user change password
user_changePassword:
  url:   /private/password
  param: { module: guardUser, action: changePassword }

#
# user product history
userProductHistory:
  url:   /private/product-history
  param: { module: userProductHistory, action: index }
#
# user product history clear
userProductHistory_clear:
  url:   /private/product-history/clear
  param: { module: userProductHistory, action: clear }

#
# user delayed product
userDelayedProduct:
  url:   /private/delayed-products
  param: { module: userDelayedProduct, action: index }
#
# user delayed product create
userDelayedProduct_create:
  url:   /private/delayed-products/create/:product
  param: { module: userDelayedProduct, action: create }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
# user delayed product delete
userDelayedProduct_delete:
  url:   /private/delayed-products/delete/:product
  param: { module: userDelayedProduct, action: delete }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
# user delayed product clear
userDelayedProduct_clear:
  url:   /private/delayed-products/clear
  param: { module: userDelayedProduct, action: clear }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }

#
# user product notice
userProductNotice:
  url:   /private/product-notices
  param: { module: userProductNotice, action: index }
#
# user product notice create
userProductNotice_create:
  url:   /private/product-notices/create/:product
  param: { module: userProductNotice, action: create }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
# user product notice delete
userProductNotice_delete:
  url:   /private/product-notices/delete/:product
  param: { module: userProductNotice, action: delete }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }
#
# user product notice clear
userProductNotice_clear:
  url:   /private/product-notices/clear
  param: { module: userProductNotice, action: clear }
  class:   myDoctrineRoute
  options: { model: Product, type: object, method: getForRoute }

#
# user tag
userTag:
  url:   /private/tags
  param: { module: userTag, action: index }
#
# user tag create
userTag_create:
  url:     /private/tags/create
  param:   { module: userTag, action: create }
  class:   myDoctrineRoute
  options: { model: UserTag, type: object, method: getForRoute }
#
# user tag delete
userTag_delete:
  url:     /private/tags/delete/:userTag
  param:   { module: userTag, action: delete }
  class:   myDoctrineRoute
  options: { model: UserTag, type: object, method: getForRoute }
#
# user tag update
userTag_update:
  url:     /private/tags/update/:userTag
  param:   { module: userTag, action: update }
  class:   myDoctrineRoute
  options: { model: UserTag, type: object, method: getForRoute }



# Корзина товаров
#
# cart
cart:
  url:   /cart
  param: { module: cart, action: index }
#
# cart add
cart_add:
  url:   /cart/add/:product/:quantity
  param: { module: cart, action: add }
#
# cart delete
cart_delete:
  url:   /cart/delete/:product
  param: { module: cart, action: delete }
#
# cart clear
cart_clear:
  url:   /cart/clear
  param: { module: cart, action: clear }



default_show:
  url:   /:page
  param: { module: default, action: show }

default:
  url:   /:module/:action/*
