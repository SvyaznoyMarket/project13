CREATE TABLE `accessory_product` (`id` BIGINT AUTO_INCREMENT, `master_id` BIGINT NOT NULL, `slave_id` BIGINT NOT NULL, INDEX `master_id_idx` (`master_id`), INDEX `slave_id_idx` (`slave_id`), PRIMARY KEY(`id`)) COMMENT = 'Аксессуар товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `cervice_center` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `region_id` BIGINT NOT NULL, `address` VARCHAR(255), `description` TEXT, INDEX `region_id_idx` (`region_id`), PRIMARY KEY(`id`)) COMMENT = 'Сервис центр' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `creator` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, PRIMARY KEY(`id`)) COMMENT = 'Производитель' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_forgot_password` (`id` BIGINT AUTO_INCREMENT, `user_id` BIGINT NOT NULL, `unique_key` VARCHAR(255), `expires_at` DATETIME NOT NULL, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, INDEX `user_id_idx` (`user_id`), PRIMARY KEY(`id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_group` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) UNIQUE, `description` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY(`id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_group_permission` (`group_id` BIGINT, `permission_id` BIGINT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY(`group_id`, `permission_id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_permission` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) UNIQUE, `description` TEXT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY(`id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_remember_key` (`id` BIGINT AUTO_INCREMENT, `user_id` BIGINT, `remember_key` VARCHAR(32), `ip_address` VARCHAR(50), `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, INDEX `user_id_idx` (`user_id`), PRIMARY KEY(`id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_user` (`id` BIGINT AUTO_INCREMENT, `first_name` VARCHAR(255) NOT NULL COMMENT 'Имя', `last_name` VARCHAR(255) NOT NULL COMMENT 'Фамилия', `email_address` VARCHAR(255) NOT NULL UNIQUE, `username` VARCHAR(128) NOT NULL UNIQUE, `algorithm` VARCHAR(128) DEFAULT 'sha1' NOT NULL, `salt` VARCHAR(128), `password` VARCHAR(128), `is_active` TINYINT(1) DEFAULT '1', `is_super_admin` TINYINT(1) DEFAULT '0', `last_login` DATETIME, `type` VARCHAR(10) DEFAULT 'client' NOT NULL, `middle_name` VARCHAR(255) NOT NULL COMMENT 'Отчество', `photo` VARCHAR(255) COMMENT 'Фото', `settings` TEXT COMMENT 'Настройки личного кабинета', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, INDEX `is_active_idx_idx` (`is_active`), PRIMARY KEY(`id`)) COMMENT = 'Пользователь' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_user_group` (`user_id` BIGINT, `group_id` BIGINT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY(`user_id`, `group_id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `guard_user_permission` (`user_id` BIGINT, `permission_id` BIGINT, `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, PRIMARY KEY(`user_id`, `permission_id`)) DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `news` (`id` BIGINT AUTO_INCREMENT, `category_id` BIGINT NOT NULL, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `preview` TEXT NOT NULL, `body` TEXT NOT NULL, `published_at` DATETIME, `is_active` TINYINT(1) DEFAULT '0' NOT NULL, `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, INDEX `category_id_idx` (`category_id`), PRIMARY KEY(`id`)) COMMENT = 'Новости' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `news_category` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, PRIMARY KEY(`id`)) COMMENT = 'Категория новости' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `news_creator_relation` (`news_id` BIGINT, `creator_id` BIGINT, PRIMARY KEY(`news_id`, `creator_id`)) COMMENT = 'Связь новости с производителем' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `news_product_category_relation` (`news_id` BIGINT, `product_category_id` BIGINT, PRIMARY KEY(`news_id`, `product_category_id`)) COMMENT = 'Связь новости с категорией товаров' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `news_product_relation` (`news_id` BIGINT, `product_id` BIGINT, PRIMARY KEY(`news_id`, `product_id`)) COMMENT = 'Связь новости с продуктом' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `order` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(64) NOT NULL COMMENT 'Номер заказа' UNIQUE, `user_id` BIGINT, `payment_method_id` BIGINT NOT NULL, INDEX `user_id_idx` (`user_id`), INDEX `payment_method_id_idx` (`payment_method_id`), PRIMARY KEY(`id`)) COMMENT = 'Заказ пользователя' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `order_product_relation` (`id` BIGINT AUTO_INCREMENT, `order_id` BIGINT NOT NULL, `product_id` BIGINT NOT NULL, `price` DECIMAL(12, 2) DEFAULT 0 NOT NULL COMMENT 'Цена товара в корзине', `count` INT NOT NULL COMMENT 'Количество товара в корзине', `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `order_id_idx` (`order_id`), INDEX `product_id_idx` (`product_id`), PRIMARY KEY(`id`)) COMMENT = 'Связь заказа и товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `page` (`id` BIGINT AUTO_INCREMENT, `root_id` BIGINT NOT NULL, `lft` INT, `rgt` INT, `level` SMALLINT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `title` TEXT COMMENT 'Заголовок страницы title', `header` TEXT COMMENT 'Заголовок страницы h1', `keywords` TEXT COMMENT 'Ключевые слова страницы meta keywords', `description` TEXT COMMENT 'Описание страницы meta description', `content` TEXT COMMENT 'Содержание страницы', PRIMARY KEY(`id`)) COMMENT = 'Страница' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `payment_method` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `is_active` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Способ оплаты активен?', PRIMARY KEY(`id`)) COMMENT = 'Способ оплаты' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `type_id` BIGINT NOT NULL, `creator_id` BIGINT NOT NULL, `category_id` BIGINT NOT NULL, `view_show` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Показывать товар по прямой ссылке?', `view_list` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Показывать товар в списке категорий?', `is_instock` TINYINT(1) DEFAULT '0' NOT NULL, `description` text COMMENT 'Описание товара', `rating` DECIMAL(18, 14) DEFAULT 0 NOT NULL COMMENT 'Рейтинг товара', `price` DECIMAL(12, 2) DEFAULT 0 NOT NULL COMMENT 'Цена товара', INDEX `type_id_idx` (`type_id`), INDEX `creator_id_idx` (`creator_id`), INDEX `category_id_idx` (`category_id`), PRIMARY KEY(`id`)) COMMENT = 'Товар' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_category` (`id` BIGINT AUTO_INCREMENT, `root_id` BIGINT NOT NULL, `lft` INT, `rgt` INT, `level` SMALLINT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `filter_group_id` BIGINT, INDEX `filter_group_id_idx` (`filter_group_id`), PRIMARY KEY(`id`)) COMMENT = 'Категория товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_category_type_relation` (`product_category_id` BIGINT, `product_type_id` BIGINT, PRIMARY KEY(`product_category_id`, `product_type_id`)) COMMENT = 'Связь типов и категорий товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_comment` (`id` BIGINT AUTO_INCREMENT, `product_id` BIGINT NOT NULL, `lft` INT, `rgt` INT, `level` SMALLINT, `user_id` BIGINT, `content` VARCHAR(255) NOT NULL COMMENT 'Текст комментария', `helpful` INT DEFAULT 0 NOT NULL COMMENT 'Количество полезных оценок отзыва', `unhelpful` INT DEFAULT 0 NOT NULL COMMENT 'Количество бесполезных оценок отзыва', `created_at` DATETIME NOT NULL, `updated_at` DATETIME NOT NULL, INDEX `product_id_idx` (`product_id`), INDEX `user_id_idx` (`user_id`), PRIMARY KEY(`id`)) COMMENT = 'Комментарии товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_filter` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, `type` VARCHAR(10) NOT NULL, `group_id` BIGINT NOT NULL, `property_id` BIGINT NOT NULL, `is_multiple` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Фильтр имеет несколько значений?', `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `group_id_idx` (`group_id`), INDEX `property_id_idx` (`property_id`), PRIMARY KEY(`id`)) COMMENT = 'Фильтр товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_filter_group` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, PRIMARY KEY(`id`)) COMMENT = 'Группа фильтров товаров' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_helper` (`id` BIGINT AUTO_INCREMENT, `product_type_id` BIGINT NOT NULL, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `is_active` TINYINT(1) DEFAULT '0' NOT NULL, `image` VARCHAR(255), `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', `description` TEXT, INDEX `product_type_id_idx` (`product_type_id`), PRIMARY KEY(`id`)) COMMENT = 'Помошник выбора товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_helper_answer` (`id` BIGINT AUTO_INCREMENT, `question_id` BIGINT NOT NULL, `name` VARCHAR(255) NOT NULL, `is_active` TINYINT(1) DEFAULT '0' NOT NULL, `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', `condition` VARCHAR(10) DEFAULT 'or' NOT NULL COMMENT 'Условие для значений свойств товара', INDEX `question_id_idx` (`question_id`), PRIMARY KEY(`id`)) COMMENT = 'Ответ для помошника выбора товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_helper_filter` (`answer_id` BIGINT, `product_filter_id` BIGINT, `value` TEXT COMMENT 'Значение фильтра товара в формате yaml', PRIMARY KEY(`answer_id`, `product_filter_id`)) COMMENT = 'Связь ответа для помошника выбора товара и свойства товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_helper_question` (`id` BIGINT AUTO_INCREMENT, `helper_id` BIGINT NOT NULL, `name` VARCHAR(255) NOT NULL, `is_active` TINYINT(1) DEFAULT '0' NOT NULL, `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `helper_id_idx` (`helper_id`), PRIMARY KEY(`id`)) COMMENT = 'Вопрос для помошника выбора товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_photo` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, `resource` VARCHAR(255) NOT NULL, `product_id` BIGINT NOT NULL, `view_show` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Показывать фото в карточке товара?', `view_list` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'показывать фото в списке товаров?', INDEX `product_id_idx` (`product_id`), PRIMARY KEY(`id`)) COMMENT = 'Фото товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_property` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, `type` VARCHAR(10) DEFAULT 'string' NOT NULL COMMENT 'Тип свойства: строка, значение из справочника (опция свойства), текст', `is_multiple` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Свойство имеет несколько значений?', `pattern` VARCHAR(255) DEFAULT '%value% %unit%' COMMENT 'Шаблон для создания значения свойства с единицей измерения для отображения', PRIMARY KEY(`id`)) COMMENT = 'Свойство товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_property_group` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255), `product_type_id` BIGINT NOT NULL, `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `product_type_id_idx` (`product_type_id`), PRIMARY KEY(`id`)) COMMENT = 'Группа свойств товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_property_option` (`id` BIGINT AUTO_INCREMENT, `property_id` BIGINT NOT NULL, `value` VARCHAR(255) NOT NULL COMMENT 'Значение опции', `unit` VARCHAR(255) COMMENT 'Единица измерения', `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `property_id_idx` (`property_id`), PRIMARY KEY(`id`)) COMMENT = 'Опции свойства товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_property_relation` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255), `product_id` BIGINT NOT NULL, `property_id` BIGINT NOT NULL, `option_id` BIGINT, `value_integer` BIGINT, `value_float` DECIMAL(10, 4), `value_string` VARCHAR(255), `value_text` TEXT, `value` VARCHAR(255) COMMENT 'Значение свойства для отображения', `unit` VARCHAR(255) COMMENT 'Единица измерения', INDEX `product_id_idx` (`product_id`), INDEX `property_id_idx` (`property_id`), INDEX `option_id_idx` (`option_id`), PRIMARY KEY(`id`)) COMMENT = 'Связь продукта и свойства продукта' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_type` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, PRIMARY KEY(`id`)) COMMENT = 'Тип товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `product_type_property_relation` (`product_type_id` BIGINT, `property_id` BIGINT, `group_id` BIGINT, `name` VARCHAR(255), `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', `group_position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки в группе свойств товара', `view_show` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Показывать свойство в карточке товара?', `view_list` TINYINT(1) DEFAULT '0' NOT NULL COMMENT 'Показывать свойство в списке товаров?', INDEX `group_id_idx` (`group_id`), PRIMARY KEY(`product_type_id`, `property_id`)) COMMENT = 'Связь типов и свойств товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `region` (`id` BIGINT AUTO_INCREMENT, `root_id` BIGINT NOT NULL, `lft` INT, `rgt` INT, `level` SMALLINT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `type` VARCHAR(10) NOT NULL COMMENT 'Тип региона: страна, административная единица, город', PRIMARY KEY(`id`)) COMMENT = 'Регион' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `shop` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `region_id` BIGINT NOT NULL, INDEX `region_id_idx` (`region_id`), PRIMARY KEY(`id`)) COMMENT = 'Магазин' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `similar_product` (`id` BIGINT AUTO_INCREMENT, `master_id` BIGINT NOT NULL, `slave_id` BIGINT NOT NULL, INDEX `master_id_idx` (`master_id`), INDEX `slave_id_idx` (`slave_id`), PRIMARY KEY(`id`)) COMMENT = 'Аналогичный товар' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `similar_product_group` (`id` BIGINT AUTO_INCREMENT, `product_type_id` BIGINT, `name` VARCHAR(255) NOT NULL, `products` TEXT COMMENT 'Список id товаров через запятую, для формирования списка аналогичных товаров', `match` INT COMMENT 'Количество совпадающих параметров у товаров для учета их как аналогичных', INDEX `product_type_id_idx` (`product_type_id`), PRIMARY KEY(`id`)) COMMENT = 'Группа аналогичного товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `similar_product_property` (`id` BIGINT AUTO_INCREMENT, `group_id` BIGINT NOT NULL, `property_id` BIGINT NOT NULL, INDEX `group_id_idx` (`group_id`), INDEX `property_id_idx` (`property_id`), PRIMARY KEY(`id`)) COMMENT = 'Свойства аналогичного товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `stock` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, `type` VARCHAR(10) NOT NULL, `region_id` BIGINT NOT NULL, `shop_id` BIGINT, INDEX `region_id_idx` (`region_id`), INDEX `shop_id_idx` (`shop_id`), PRIMARY KEY(`id`)) COMMENT = 'Склад' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `stock_product_relation` (`stock_id` BIGINT, `product_id` BIGINT, `count` INT DEFAULT 1 NOT NULL, PRIMARY KEY(`stock_id`, `product_id`)) COMMENT = 'Связь склада и товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `tag` (`id` BIGINT AUTO_INCREMENT, `token` VARCHAR(255) NOT NULL UNIQUE, `name` VARCHAR(255) NOT NULL, PRIMARY KEY(`id`)) COMMENT = 'Тег' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `tag_product_category_relation` (`tag_id` BIGINT, `product_category_id` BIGINT, PRIMARY KEY(`tag_id`, `product_category_id`)) COMMENT = 'Связь тега и категории товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `tag_product_relation` (`tag_id` BIGINT, `product_id` BIGINT, PRIMARY KEY(`tag_id`, `product_id`)) COMMENT = 'Связь тега и товара' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `user_delayed_product` (`user_id` BIGINT, `product_id` BIGINT, `is_wished` TINYINT(1) DEFAULT '0' NOT NULL, PRIMARY KEY(`user_id`, `product_id`)) COMMENT = 'Отложенные товары пользователя' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `user_product_notice` (`id` BIGINT AUTO_INCREMENT, `user_id` BIGINT NOT NULL, `product_id` BIGINT NOT NULL, `type` VARCHAR(10) NOT NULL COMMENT 'Тип уведомления: товар появился в магазинах, изменилась цена, появились отзывы', INDEX `user_id_idx` (`user_id`), INDEX `product_id_idx` (`product_id`), PRIMARY KEY(`id`)) COMMENT = 'Пользовательские уведомления о товаре' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `user_tag` (`id` BIGINT AUTO_INCREMENT, `name` VARCHAR(255) NOT NULL, `user_id` BIGINT NOT NULL, `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `user_id_idx` (`user_id`), PRIMARY KEY(`id`)) COMMENT = 'Пользовательские теги' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
CREATE TABLE `user_tag_product_relation` (`id` BIGINT AUTO_INCREMENT, `tag_id` BIGINT NOT NULL, `product_id` BIGINT NOT NULL, `position` INT DEFAULT 1 NOT NULL COMMENT 'Порядок сортировки', INDEX `tag_id_idx` (`tag_id`), INDEX `product_id_idx` (`product_id`), PRIMARY KEY(`id`)) COMMENT = 'Связь пользовательских тегов и товаров' DEFAULT CHARACTER SET UTF8 ENGINE = INNODB;
ALTER TABLE `accessory_product` ADD CONSTRAINT `accessory_product_slave_id_product_id` FOREIGN KEY (`slave_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `accessory_product` ADD CONSTRAINT `accessory_product_master_id_product_id` FOREIGN KEY (`master_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `cervice_center` ADD CONSTRAINT `cervice_center_region_id_region_id` FOREIGN KEY (`region_id`) REFERENCES `region`(`id`) ON DELETE RESTRICT;
ALTER TABLE `guard_forgot_password` ADD CONSTRAINT `guard_forgot_password_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_group_permission` ADD CONSTRAINT `guard_group_permission_permission_id_guard_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `guard_permission`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_group_permission` ADD CONSTRAINT `guard_group_permission_group_id_guard_group_id` FOREIGN KEY (`group_id`) REFERENCES `guard_group`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_remember_key` ADD CONSTRAINT `guard_remember_key_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_user_group` ADD CONSTRAINT `guard_user_group_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_user_group` ADD CONSTRAINT `guard_user_group_group_id_guard_group_id` FOREIGN KEY (`group_id`) REFERENCES `guard_group`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_user_permission` ADD CONSTRAINT `guard_user_permission_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `guard_user_permission` ADD CONSTRAINT `guard_user_permission_permission_id_guard_permission_id` FOREIGN KEY (`permission_id`) REFERENCES `guard_permission`(`id`) ON DELETE CASCADE;
ALTER TABLE `news` ADD CONSTRAINT `news_category_id_news_category_id` FOREIGN KEY (`category_id`) REFERENCES `news_category`(`id`) ON DELETE RESTRICT;
ALTER TABLE `news_creator_relation` ADD CONSTRAINT `news_creator_relation_news_id_news_id` FOREIGN KEY (`news_id`) REFERENCES `news`(`id`) ON DELETE CASCADE;
ALTER TABLE `news_creator_relation` ADD CONSTRAINT `news_creator_relation_creator_id_creator_id` FOREIGN KEY (`creator_id`) REFERENCES `creator`(`id`) ON DELETE CASCADE;
ALTER TABLE `news_product_category_relation` ADD CONSTRAINT `nppi` FOREIGN KEY (`product_category_id`) REFERENCES `product_category`(`id`) ON DELETE CASCADE;
ALTER TABLE `news_product_category_relation` ADD CONSTRAINT `news_product_category_relation_news_id_news_id` FOREIGN KEY (`news_id`) REFERENCES `news`(`id`) ON DELETE CASCADE;
ALTER TABLE `news_product_relation` ADD CONSTRAINT `news_product_relation_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `news_product_relation` ADD CONSTRAINT `news_product_relation_news_id_news_id` FOREIGN KEY (`news_id`) REFERENCES `news`(`id`) ON DELETE CASCADE;
ALTER TABLE `order` ADD CONSTRAINT `order_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE RESTRICT;
ALTER TABLE `order` ADD CONSTRAINT `order_payment_method_id_payment_method_id` FOREIGN KEY (`payment_method_id`) REFERENCES `payment_method`(`id`) ON DELETE RESTRICT;
ALTER TABLE `order_product_relation` ADD CONSTRAINT `order_product_relation_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `order_product_relation` ADD CONSTRAINT `order_product_relation_order_id_order_id` FOREIGN KEY (`order_id`) REFERENCES `order`(`id`) ON DELETE CASCADE;
ALTER TABLE `product` ADD CONSTRAINT `product_type_id_product_type_id` FOREIGN KEY (`type_id`) REFERENCES `product_type`(`id`) ON DELETE RESTRICT;
ALTER TABLE `product` ADD CONSTRAINT `product_creator_id_creator_id` FOREIGN KEY (`creator_id`) REFERENCES `creator`(`id`) ON DELETE RESTRICT;
ALTER TABLE `product` ADD CONSTRAINT `product_category_id_product_category_id` FOREIGN KEY (`category_id`) REFERENCES `product_category`(`id`) ON DELETE RESTRICT;
ALTER TABLE `product_category` ADD CONSTRAINT `product_category_filter_group_id_product_filter_group_id` FOREIGN KEY (`filter_group_id`) REFERENCES `product_filter_group`(`id`) ON DELETE SET NULL;
ALTER TABLE `product_category_type_relation` ADD CONSTRAINT `product_category_type_relation_product_type_id_product_type_id` FOREIGN KEY (`product_type_id`) REFERENCES `product_type`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_category_type_relation` ADD CONSTRAINT `pppi` FOREIGN KEY (`product_category_id`) REFERENCES `product_category`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_comment` ADD CONSTRAINT `product_comment_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_comment` ADD CONSTRAINT `product_comment_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_filter` ADD CONSTRAINT `product_filter_property_id_product_property_id` FOREIGN KEY (`property_id`) REFERENCES `product_property`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_filter` ADD CONSTRAINT `product_filter_group_id_product_filter_group_id` FOREIGN KEY (`group_id`) REFERENCES `product_filter_group`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_helper` ADD CONSTRAINT `product_helper_product_type_id_product_type_id` FOREIGN KEY (`product_type_id`) REFERENCES `product_type`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_helper_answer` ADD CONSTRAINT `product_helper_answer_question_id_product_helper_question_id` FOREIGN KEY (`question_id`) REFERENCES `product_helper_question`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_helper_filter` ADD CONSTRAINT `product_helper_filter_product_filter_id_product_filter_id` FOREIGN KEY (`product_filter_id`) REFERENCES `product_filter`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_helper_filter` ADD CONSTRAINT `product_helper_filter_answer_id_product_helper_answer_id` FOREIGN KEY (`answer_id`) REFERENCES `product_helper_answer`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_helper_question` ADD CONSTRAINT `product_helper_question_helper_id_product_helper_id` FOREIGN KEY (`helper_id`) REFERENCES `product_helper`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_photo` ADD CONSTRAINT `product_photo_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_property_group` ADD CONSTRAINT `product_property_group_product_type_id_product_type_id` FOREIGN KEY (`product_type_id`) REFERENCES `product_type`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_property_option` ADD CONSTRAINT `product_property_option_property_id_product_property_id` FOREIGN KEY (`property_id`) REFERENCES `product_property`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_property_relation` ADD CONSTRAINT `product_property_relation_property_id_product_property_id` FOREIGN KEY (`property_id`) REFERENCES `product_property`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_property_relation` ADD CONSTRAINT `product_property_relation_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_property_relation` ADD CONSTRAINT `product_property_relation_option_id_product_property_option_id` FOREIGN KEY (`option_id`) REFERENCES `product_property_option`(`id`) ON DELETE SET NULL;
ALTER TABLE `product_type_property_relation` ADD CONSTRAINT `product_type_property_relation_property_id_product_property_id` FOREIGN KEY (`property_id`) REFERENCES `product_property`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_type_property_relation` ADD CONSTRAINT `product_type_property_relation_product_type_id_product_type_id` FOREIGN KEY (`product_type_id`) REFERENCES `product_type`(`id`) ON DELETE CASCADE;
ALTER TABLE `product_type_property_relation` ADD CONSTRAINT `pgpi` FOREIGN KEY (`group_id`) REFERENCES `product_property_group`(`id`) ON DELETE SET NULL;
ALTER TABLE `shop` ADD CONSTRAINT `shop_region_id_region_id` FOREIGN KEY (`region_id`) REFERENCES `region`(`id`) ON DELETE RESTRICT;
ALTER TABLE `similar_product` ADD CONSTRAINT `similar_product_slave_id_product_id` FOREIGN KEY (`slave_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `similar_product` ADD CONSTRAINT `similar_product_master_id_product_id` FOREIGN KEY (`master_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `similar_product_group` ADD CONSTRAINT `similar_product_group_product_type_id_product_type_id` FOREIGN KEY (`product_type_id`) REFERENCES `product_type`(`id`) ON DELETE RESTRICT;
ALTER TABLE `similar_product_property` ADD CONSTRAINT `similar_product_property_property_id_product_property_id` FOREIGN KEY (`property_id`) REFERENCES `product_property`(`id`) ON DELETE CASCADE;
ALTER TABLE `similar_product_property` ADD CONSTRAINT `similar_product_property_group_id_similar_product_group_id` FOREIGN KEY (`group_id`) REFERENCES `similar_product_group`(`id`) ON DELETE CASCADE;
ALTER TABLE `stock` ADD CONSTRAINT `stock_shop_id_shop_id` FOREIGN KEY (`shop_id`) REFERENCES `shop`(`id`) ON DELETE SET NULL;
ALTER TABLE `stock` ADD CONSTRAINT `stock_region_id_region_id` FOREIGN KEY (`region_id`) REFERENCES `region`(`id`) ON DELETE RESTRICT;
ALTER TABLE `stock_product_relation` ADD CONSTRAINT `stock_product_relation_stock_id_stock_id` FOREIGN KEY (`stock_id`) REFERENCES `stock`(`id`) ON DELETE CASCADE;
ALTER TABLE `stock_product_relation` ADD CONSTRAINT `stock_product_relation_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `tag_product_category_relation` ADD CONSTRAINT `tppi` FOREIGN KEY (`product_category_id`) REFERENCES `product_category`(`id`) ON DELETE CASCADE;
ALTER TABLE `tag_product_category_relation` ADD CONSTRAINT `tag_product_category_relation_tag_id_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `tag`(`id`) ON DELETE CASCADE;
ALTER TABLE `tag_product_relation` ADD CONSTRAINT `tag_product_relation_tag_id_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `tag`(`id`) ON DELETE CASCADE;
ALTER TABLE `tag_product_relation` ADD CONSTRAINT `tag_product_relation_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_delayed_product` ADD CONSTRAINT `user_delayed_product_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_delayed_product` ADD CONSTRAINT `user_delayed_product_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_product_notice` ADD CONSTRAINT `user_product_notice_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_product_notice` ADD CONSTRAINT `user_product_notice_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_tag` ADD CONSTRAINT `user_tag_user_id_guard_user_id` FOREIGN KEY (`user_id`) REFERENCES `guard_user`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_tag_product_relation` ADD CONSTRAINT `user_tag_product_relation_tag_id_user_tag_id` FOREIGN KEY (`tag_id`) REFERENCES `user_tag`(`id`) ON DELETE CASCADE;
ALTER TABLE `user_tag_product_relation` ADD CONSTRAINT `user_tag_product_relation_product_id_product_id` FOREIGN KEY (`product_id`) REFERENCES `product`(`id`) ON DELETE CASCADE;
