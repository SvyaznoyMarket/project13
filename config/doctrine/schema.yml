# производитель
Creator:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }

# категория продукта
ProductCategory:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }
# тип продукта
ProductType:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }

# свойство продукта
ProductProperty:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }
    type:              { type: enum, length: 20, values: [ string, select, text ], notnull: true, notblank: true, default: string }
    is_multiple:       { type: boolean, notnull: true, default: false }
  relations:
    ProductType:       { class: ProductType, foreignAlias: Property, refClass: ProductTypePropertyRelation, local: property_id, foreign: product_type_id, type: many, foreignType: many }

# связь типа продукта и свойства продукта 
ProductTypePropertyRelation:
  columns:
    name:              { type: string(255), notnull: false, default: null }
    product_type_id:   { type: integer(20), notnull: true, primary: true }
    property_id:       { type: integer(20), notnull: true, primary: true }
    position:          { type: integer(4), notnull: true, default: 1 }
    view_show:         { type: boolean, notnull: true, default: false }          # показывать в карточке товаров
    view_list:         { type: boolean, notnull: true, default: false }          # показывать в списке товаров
  relations:
    ProductType:       { class: ProductType, foreignAlias: PropertyRelation, local: product_type_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Property:          { class: ProductProperty, foreignAlias: ProductTypeRelation, local: property_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

# опции свойства продукта
ProductPropertyOption:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    property_id:       { type: integer(20), notnull: true }
    value:             { type: string(255), notnull: true, notblank: true }
    position:          { type: integer(4), notnull: true, default: 1 }
  relations:
    Property:          { class: ProductProperty, foreignAlias: Option, local: property_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

# продукт
Product:
  listeners: [ ProductListener ]
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }
    type_id:           { type: integer(20), notnull: true }
    creator_id:        { type: integer(20), notnull: true }
    category_id:       { type: integer(20), notnull: true }
    view_show:         { type: boolean, notnull: true, default: false }          # показывать по прямой ссылке
    view_list:         { type: boolean, notnull: true, default: false }          # показывать в списке категорий
  relations:
    Type:              { class: ProductType, foreignAlias: Product, local: type_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }
    Creator:           { class: Creator, foreignAlias: Product, local: creator_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }
    Category:          { class: ProductCategory, foreignAlias: Product, local: category_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }

# связь продукта и свойства продукта
ProductPropertyRelation:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: false, default: null }
    property_id:       { type: integer(20), notnull: true }
    product_id:        { type: integer(20), notnull: true }
    option_id:         { type: integer(20), notnull: false, default: null }
    value_string:      { type: string(255), notnull: false, default: null }
    value_text:        { type: string, notnull: false, default: null }
  relations:
    Property:          { class: ProductProperty, foreignAlias: ProductRelation, local: property_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Product:           { class: Product, foreignAlias: PropertyRelation, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

# фото продукта
ProductPhoto:
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }
    product_id:        { type: integer(20), notnull: true }
    view_show:         { type: boolean, notnull: true, default: false }          # показывать в карточке товара
    view_list:         { type: boolean, notnull: true, default: false }          # показывать в списке товаров
  relations:
    Product:           { class: Product, foreignAlias: Photo, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
