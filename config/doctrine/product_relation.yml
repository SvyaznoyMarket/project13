SimilarProductGroup:
  options:
    comment: 'Группа аналогичного товара'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    product_type_id:   { type: integer(20), notnull: false, default: null }
    name:              { type: string(255), notnull: true, notblank: true }
    products:          { type: string, notnull: false, default: null, comment: 'Список id товаров через запятую, для формирования списка аналогичных товаров' }
    match:             { type: integer(4), notnull: false, default: null, comment: 'Количество совпадающих параметров у товаров для учета их как аналогичных' }
    price:             { type: 'decimal(10,4)', notnull: false, default: null, comment: 'Допустимое изменение цены для аналогичности товаров' }
  relations:
    ProductType:       { class: ProductType, foreignAlias: SimilarProductGroup, local: product_type_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }

SimilarProductProperty:
  options:
    comment: 'Свойства аналогичного товара'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    group_id:          { type: integer(20), notnull: true }
    property_id:       { type: integer(20), notnull: true }
  relations:
    Group:             { class: SimilarProductGroup, foreignAlias: Property, local: group_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    ProductProperty:   { class: ProductProperty, foreignAlias: SimilarProductProperty, local: property_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

SimilarProduct:
  options:
    comment: 'Аналогичный товар'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    master_id:         { type: integer(20), notnull: true }
    slave_id:          { type: integer(20), notnull: true }
  relations:
    MasterProduct:     { class: Product, foreignAlias: SlaveSimilarProduct, local: master_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    SlaveProduct:      { class: Product, foreignAlias: MasterSimilarProduct, local: slave_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

AccessoryProduct:
  options:
    comment: 'Аксессуар товара'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    master_id:         { type: integer(20), notnull: true }
    slave_id:          { type: integer(20), notnull: true }
  relations:
    MasterProduct:     { class: Product, foreignAlias: SlaveAccessoryProduct, local: master_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    SlaveProduct:      { class: Product, foreignAlias: MasterAccessoryProduct, local: slave_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
