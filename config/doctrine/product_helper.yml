ProductHelper:
  options:
    comment: 'Помошник выбора товара'
  actAs: [ Timestampable ]
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    product_type_id:   { type: integer(20), notnull: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    is_active:         { type: boolean, notnull: true, default: false }
    image:             { type: string(255), notnull: false, default: null }
    position:          { type: integer(4), notnull: true, default: 1, comment: 'Порядок сортировки' }
    description:       { type: string, notnull: false, default: null }
  relations:
    ProductType:       { class: ProductType, foreignAlias: ProductHelper, local: product_type_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

ProductHelperQuestion:
  options:
    comment: 'Вопрос для помошника выбора товара'
  actAs: [ Timestampable ]
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    helper_id:         { type: integer(20), notnull: true }
    name:              { type: string(255), notnull: true, notblank: true }
    is_active:         { type: boolean, notnull: true, default: false }
    position:          { type: integer(4), notnull: true, default: 1, comment: 'Порядок сортировки' }
  relations:
    Helper:            { class: ProductHelper, foreignAlias: Question, local: helper_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

ProductHelperAnswer:
  options:
    comment: 'Ответ для помошника выбора товара'
  actAs: [ Timestampable ]
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    question_id:       { type: integer(20), notnull: true }
    name:              { type: string(255), notnull: true, notblank: true }
    is_active:         { type: boolean, notnull: true, default: false }
    position:          { type: integer(4), notnull: true, default: 1, comment: 'Порядок сортировки' }
    condition:         { type: enum, length: 10, values: [ and, or ], notnull: true, default: or, comment: 'Условие для значений свойств товара' }
  relations:
    Question:          { class: ProductHelperQuestion, foreignAlias: Answer, local: question_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

ProductHelperFilter:
  options:
    comment: 'Связь ответа для помошника выбора товара и свойства товара'
  actAs: [ Timestampable ]
  columns:
    answer_id:         { type: integer(20), primary: true, notnull: true }
    product_filter_id: { type: integer(20), primary: true, notnull: true }
    value:             { type: string, notnull: false, default: null, comment: 'Значение фильтра товара в формате yaml' }
  relations:
    Answer:            { class: ProductHelperAnswer, foreignAlias: Filter, local: answer_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    ProductFilter:     { class: ProductFilter, foreignAlias: ProductHelperFilter, local: product_filter_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
