User:
  options:
    comment: 'Пользователь'
  inheritance: { type: simple, extends: GuardUser }
  columns:
    type:              { type: enum, length: 10, values: [admin, client, partner], notnull: true, default: client }
    first_name:        { type: string(255), notnull: true, notblank: true, comment: 'Имя' }
    last_name:         { type: string(255), notnull: true, notblank: true, comment: 'Фамилия' }
    middle_name:       { type: string(255), notnull: true, notblank: true, comment: 'Отчество' }
    photo:             { type: string(255), notnull: false, default: null, comment: 'Фото' }
    settings:          { type: string, notnull: false, default: null, comment: 'Настройки личного кабинета' }

UserProductTag:
  options:
    comment: 'Пользовательские теги к товару'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), notnull: true, notblank: true }
    user_id:           { type: integer(20), notnull: true }
    product_id:        { type: integer(20), notnull: true }
    position:          { type: integer(4), notnull: true, default: 1, comment: 'Порядок сортировки' }
  relations:
    User:              { class: User, foreignAlias: ProductTag, local: user_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Product:           { class: Product, foreignAlias: UserTag, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

UserDelayedProduct:
  options:
    comment: 'Отложенные товары пользователя'
  columns:
    user_id:           { type: integer(20), primary: true, notnull: true }
    product_id:        { type: integer(20), primary: true, notnull: true }
    is_wished:         { type: boolean, notnull: true, default: false }
  relations:
    User:              { class: User, foreignAlias: DelayedProduct, local: user_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Product:           { class: Product, foreignAlias: UserDelayedProduct, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

UserProductNotice:
  options:
    comment: 'Пользовательские уведомления о товаре'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    user_id:           { type: integer(20), notnull: true }
    product_id:        { type: integer(20), notnull: true }
    type:              { type: enum, length: 10, values: [ insale, price, comment ], notnull: true, comment: 'Тип уведомления: товар появился в магазинах, изменилась цена, появились отзывы' }
  relations:
    User:              { class: User, foreignAlias: ProductNotice, local: user_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Product:           { class: Product, foreignAlias: UserNotice, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
