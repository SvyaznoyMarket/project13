GuardGroup:
  options:
    comment: 'Группа'
  actAs: [ Timestampable ]
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), unique: true }
    description:       { type: string(1000) }
  relations:
    User:              { class: GuardUser, foreignAlias: Group, refClass: GuardUserGroup, local: group_id, foreign: user_id }
    Permission:        { class: GuardPermission, foreignAlias: Group, refClass: GuardGroupPermission, local: group_id, foreign: permission_id }

GuardPermission:
  options:
    comment: 'Право'
  actAs: [ Timestampable ]
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    name:              { type: string(255), unique: true }
    description:       { type: string(1000) }

GuardGroupPermission:
  options:
    comment: 'Связь группы и права'
    symfony: { form: false, filter: false }
  actAs: [ Timestampable ]
  columns:
    group_id:          { type: integer(20), primary: true }
    permission_id:     { type: integer(20), primary: true }
  relations:
    Group:             { class: GuardGroup, local: group_id, onDelete: CASCADE }
    Permission:        { class: GuardPermission, local: permission_id, onDelete: CASCADE }

GuardUser:
  options:
    comment: 'Пользователь'
  actAs:
    Timestampable:  ~
    Corable:        { push: disable }
  columns:
    email:             { type: string(128), notnull: false, default: null }
    phonenumber:       { type: string(20), notnull: false, default: null, comment: 'Телефонный номер' }
    first_name:        { type: string(255), notnull: true, notblank: true, comment: 'Имя' }
    last_name:         { type: string(255), notnull: true, notblank: true, comment: 'Фамилия' }
    middle_name:       { type: string(255), notnull: true, notblank: true, comment: 'Отчество' }
    nickname:          { type: string(128), notnull: false, default: null }
    algorithm:         { type: string(128), notnull: true, default: sha1 }
    salt:              { type: string(128) }
    password:          { type: string(128) }
    is_active:         { type: boolean, notnull: true, default: false }
    is_super_admin:    { type: boolean, notnull: true, default: false }
    last_login:        { type: timestamp }
  indexes:
    is_active_idx:
      fields: [ is_active ]
  relations:
    Group:             { class: GuardGroup, foreignAlias: User, refClass: GuardUserGroup, local: user_id, foreign: group_id }
    Permission:        { class: GuardPermission, foreignAlias: User, refClass: GuardUserPermission, local: user_id, foreign: permission_id }

GuardUserPermission:
  options:
    comment: 'Связь пользователя и права'
    symfony: { form: false, filter: false }
  actAs: [ Timestampable ]
  columns:
    user_id:           { type: integer(20), primary: true }
    permission_id:     { type: integer(20), primary: true }
  relations:
    User:              { class: GuardUser, local: user_id, onDelete: CASCADE }
    Permission:        { class: GuardPermission, local: permission_id, onDelete: CASCADE }

GuardUserGroup:
  options:
    comment: 'Связь пользователя и группы'
    symfony: { form: false, filter: false }
  actAs: [ Timestampable ]
  columns:
    user_id:            { type: integer(20), primary: true }
    group_id:           { type: integer(20), primary: true }
  relations:
    User:               { class: GuardUser, local: user_id, onDelete: CASCADE }
    Group:              { class: GuardGroup, local: group_id, onDelete: CASCADE }

GuardRememberKey:
  options:
    comment: 'Ключ пользователя'
    symfony: { form: false, filter: false }
  actAs: [ Timestampable ]
  columns:
    user_id:            { type: integer(20), notnull: true }
    remember_key:       { type: string(32) }
    ip_address:         { type: string(50) }
  relations:
    User:               { class: GuardUser, foreignAlias: RememberKeys, local: user_id, foreignType: one, onDelete: CASCADE }

GuardForgotPassword:
  options:
    comment: 'Ключ напоминания пароля'
    symfony: { form: false, filter: false }
  actAs: [ Timestampable ]
  columns:
    user_id:            { type: integer(20), notnull: true }
    unique_key:         { type: string(255) }
    expires_at:         { type: timestamp, notnull: true }
  relations:
    User:               { class: GuardUser, foreignAlias: ForgotPassword, local: user_id, type: one, foreignType: one, onDelete: CASCADE }
