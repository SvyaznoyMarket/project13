Service:
  options:
    comment: 'Услуга F1'
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    category_id:       { type: integer(20), notnull: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    description:       { type: string }
    is_active:         { type: boolean, notnull: true, default: false }
  relations:
    Category:          { class: ServiceCategory, foreignAlias: Service, local: category_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }

ServiceCategory:
  options:
    comment: 'Категория услуг F1'
  actAs:
    NestedSet: { hasManyRoots: true, rootColumnName: root_id }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    root_id:           { type: integer(20), notnull: true }
    lft:               { type: integer(20), notnull: true }
    rgt:               { type: integer(20), notnull: true }
    level:             { type: integer(4), notnull: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    is_active:         { type: boolean, notnull: true, default: false }

ServicePrice:
  options:
    comment: 'Стоимость услуг F1 по регионам'
  columns:
    region_id:         { type: integer(20), notnull: true, primary: true }
    service_id:        { type: integer(20), notnull: true, primary: true }
    price:             { type: 'decimal(12,2)', notnull: true, default: 0, comment: 'Цена услуги' }
  relations:
    Service:           { class: Service, foreignAlias: Price, local: service_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Region:            { class: Region, foreignAlias: ServicePrice, local: region_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }