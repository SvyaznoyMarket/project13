Service:
  options:
    comment: 'Услуга F1'
  actAs:
    Corable:           { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    description:       { type: string }
    work:              { type: string }
    main_photo:        { type: string(255), notnull: false, default: null }
    expendable:        { type: string }
    is_active:         { type: boolean, notnull: true, default: false }
  relations:
    Category:          { class: ServiceCategory, foreignAlias: Service, refClass: ServiceCategoryRelation, local: service_id, foreign: category_id, type: many, foreignType: many }

ServiceCategory:
  options:
    comment: 'Категория услуг F1'
  actAs:
    NestedSet:  { hasManyRoots: true, rootColumnName: root_id }
    Corable:    { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    root_id:           { type: integer(20), notnull: true }
    core_parent_id:    { type: integer(20), notnull: false, default: null, comment: 'ид родителя записи в Core' }
    core_lft:          { type: integer(20), notnull: false, default: null, comment: 'lft записи в Core' }
    core_rgt:          { type: integer(20), notnull: false, default: null, comment: 'rgt записи в Core' }
    lft:               { type: integer(20), notnull: true }
    rgt:               { type: integer(20), notnull: true }
    level:             { type: integer(4), notnull: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    description:       { type: string }
    main_photo:        { type: string(255), notnull: false, default: null }
    position:          { type: integer(11), notnull: true, default: 1, comment: 'Порядок сортировки' }
    is_active:         { type: boolean, notnull: true, default: false }

ServicePrice:
  options:
    comment: 'Стоимость услуг F1 по регионам'
  actAs:
    Corable:        { push: disable }
  columns:
    id:                     { type: integer(20), autoincrement: true, primary: true }
    service_price_list_id:  { type: integer(20), notnull: true }
    service_id:        { type: integer(20), notnull: true, primary: true }
    price:             { type: 'decimal(12,2)', notnull: true, default: 0, comment: 'Цена услуги' }
  relations:
    Service:           { class: Service, foreignAlias: Price, local: service_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    PriceList:         { class: ProductPriceList, foreignAlias: Price, local: service_price_list_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }


ServiceProductRelation:
  options:
    comment: 'Связь услуги с продуктом'
  actAs:
    Corable:        { push: disable }
  columns:
    service_id:       { type: integer(20), notnull: true, primary: true }
    product_id:       { type: integer(20), notnull: true, primary: true }
  relations:
    Service:          { class: Service, foreignAlias: ProductRelation, local: service_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }
    Product:       { class: Product, foreignAlias: ServiceRelation, local: product_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }

ServiceCategoryRelation:
  options:
    comment: 'Связь категории и услуги'
  columns:
    category_id:       { type: integer(20), notnull: true, primary: true }
    service_id:        { type: integer(20), notnull: true, primary: true }
  relations:
    Category:          { class: ServiceCategory, foreignAlias: ServiceRelation, local: category_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Service:           { class: Service, foreignAlias: CategoryRelation, local: service_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }


ServiceTariff:
  options:
    comment: 'Тарифы услуг F1 по регионам'
  actAs:
    Corable:        { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    region_id:         { type: integer(20), notnull: true }
    service_id:        { type: integer(20), notnull: true }
    product_id:        { type: integer(20), notnull: true }
    price:             { type: 'decimal(12,2)', notnull: true, default: 0, comment: 'Цена услуги' }
  relations:
    Region:            { class: Region, foreignAlias: ServicePrice, local: region_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Service:           { class: Service, foreignAlias: PriceTariff, local: service_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Product:           { class: Product, foreignAlias: ServicePrice, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
