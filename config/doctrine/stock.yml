Shop:
  options:
    comment: 'Магазин'
  actAs:
    Timestampable: ~
    Corable:       { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    region_id:         { type: integer(20), notnull: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    latitude:          { type: 'decimal(8,6)', notnull: false, default: null, comment: 'Широта' }
    longitude:         { type: 'decimal(8,6)', notnull: false, default: null, comment: 'Долгота' }
    regime:            { type: string(255), notnull: false, default: null, comment: 'Режим работы' }
    address:           { type: string(255), notnull: true, notblank: true }
    phonenumbers:      { type: string(255), notnull: false, default: null }
    photo:             { type: string(255), notnull: false, default: null }
    description:       { type: string, notnull: false, default: null, comment: 'Описание магазина' }
    way_walk:          { type: string }
    way_auto:          { type: string }
    is_active:         { type: boolean, notnull: true, default: false, comment: 'Магазин работает?' }
  relations:
    Region:            { class: Region, foreignAlias: Stock, local: region_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }

ShopPhoto:
  options:
    comment: 'Фото магазина'
  actAs:
    Timestampable: ~
    Corable:       { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    shop_id:           { type: integer(20), notnull: true }
    name:              { type: string(255), notnull: false, default: null }
    resource:          { type: string(255), notnull: true, notblank: true }
  relations:
    Shop:              { class: Shop, foreignAlias: Photo, local: shop_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }

Stock:
  options:
    comment: 'Склад'
  actAs:
    Timestampable: ~
    Corable:       { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    token:             { type: string(255), unique: true, notnull: true, notblank: true }
    name:              { type: string(255), notnull: true, notblank: true }
    type:              { type: enum, length: 10, values: [main, region, shop, provider], notnull: true }
    region_id:         { type: integer(20), notnull: true }
    shop_id:           { type: integer(20), notnull: false, default: null }
  relations:
    Region:            { class: Region, foreignAlias: Stock, local: region_id, foreign: id, type: one, foreignType: many, onDelete: RESTRICT }
    Shop:              { class: Shop, foreignAlias: Stock, local: shop_id, foreign: id, type: one, foreignType: many, onDelete: SET NULL }

StockProductRelation:
  options:
    comment: 'Связь склада и товара'
  actAs:
    Timestampable: ~
    Corable:       { push: disable }
  columns:
    id:                { type: integer(20), autoincrement: true, primary: true }
    product_id:        { type: integer(20), notnull: true }
    stock_id:          { type: integer(20), notnull: false, default: null }
    shop_id:           { type: integer(20), notnull: false, default: null }
    quantity:          { type: integer(4), notnull: true, default: 1 }
  relations:
    Product:           { class: Product, foreignAlias: StockRelation, local: product_id, foreign: id, type: one, foreignType: many, onDelete: CASCADE }
    Stock:             { class: Stock, foreignAlias: ProductRelation, local: stock_id, foreign: id, type: one, foreignType: many, onDelete: SET NULL }
    Shop:              { class: Shop, foreignAlias: ProductRelation, local: shop_id, foreign: id, type: one, foreignType: many, onDelete: SET NULL }
